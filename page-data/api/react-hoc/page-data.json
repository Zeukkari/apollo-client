{"componentChunkName":"component---node-modules-gatsby-theme-apollo-docs-src-components-template-js","path":"/api/react-hoc/","result":{"data":{"site":{"pathPrefix":"/apollo-client","siteMetadata":{"title":"Apollo GraphQL Docs","description":"A guide to using the Apollo GraphQL Client with React","twitterHandle":"apollographql"}},"file":{"childMarkdownRemark":null,"childMdx":{"frontmatter":{"title":"@apollo/react-hoc","description":"API reference"},"headings":[{"value":"Installation"},{"value":"graphql(query, [config])(component)"},{"value":"graphql() options for queries"},{"value":"graphql() options for mutations"},{"value":"withApollo(component)"}],"fields":{"image":"social-cards/react-hoc.png","graphManagerUrl":""},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"@apollo/react-hoc\",\n  \"description\": \"API reference\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"installation\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#installation\",\n    \"aria-label\": \"installation permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Installation\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-text line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"npm install @apollo/react-hoc\"), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"h2\", {\n    \"id\": \"graphqlquery-configcomponent\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#graphqlquery-configcomponent\",\n    \"aria-label\": \"graphqlquery configcomponent permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"code\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"graphql(queryundefined [config])(component)\")), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"import\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" graphql \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"from\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"'@apollo/react-hoc'\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"The \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"graphql()\"), \" function is the most important thing exported by the \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"@apollo/react-hoc\"), \" package. With this function you can create higher-order components that can execute queries and update reactively based on the data in your Apollo store. The \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"graphql()\"), \" function returns a function which will \\u201Cenhance\\u201D any component with reactive GraphQL capabilities. This follows the React \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://facebook.github.io/react/docs/higher-order-components.html\"\n  }), \"higher-order component\"), \" pattern which is also used by \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/reduxjs/react-redux/blob/master/docs/api/connect.md\"\n  }), mdx(\"code\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"react-redux\"), \"\\u2019s \", mdx(\"code\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"connect\")), \" function.\"), mdx(\"p\", null, \"The \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"graphql()\"), \" function may be used like this:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"function\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"TodoApp\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token parameter\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" data\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" todos \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"return\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), \"ul\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"todos\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"map\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token parameter\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" id\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" text \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=>\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), \"li key\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"id\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"text\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"/\"), \"li\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"/\"), \"ul\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"export\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"default\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"graphql\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"gql\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token template-string\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\n  query TodoAppQuery {\\n    todos {\\n      id\\n      text\\n    }\\n  }\\n\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"TodoApp\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"You may also define an intermediate function and hook up your component with the \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"graphql()\"), \" function like this:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// Create our enhancer function.\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"const\"), \" withTodoAppQuery \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"graphql\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"gql\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token template-string\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"query { ... }\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// Enhance our component.\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"const\"), \" TodoAppWithData \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"withTodoAppQuery\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"TodoApp\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// Export the enhanced component.\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"export\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"default\"), \" TodoAppWithData\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"The \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"graphql()\"), \" function will only be able to provide access to your GraphQL data if there is a \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/apollo-client/api/react-common/#apolloprovider\"\n  }), mdx(\"code\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"<ApolloProvider/>\")), \" component higher up in your tree to provide an \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/apollo-client/api/apollo-client/\"\n  }), mdx(\"code\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"ApolloClient\")), \" instance that will be used to fetch your data.\"), mdx(\"p\", null, \"The behavior of your component enhanced with the \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"graphql()\"), \" function will be different depending on if your GraphQL operation is a \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/apollo-client/data/queries/\"\n  }), \"query\"), \", a \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/apollo-client/data/mutations/\"\n  }), \"mutation\"), \", or a \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/apollo-client/data/subscriptions/\"\n  }), \"subscription\"), \". Go to the appropriate API documentation for more information about the functionality and available options for each type.\"), mdx(\"p\", null, \"Before we look into the specific behaviors of each operation, let us look at the \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"config\"), \" object. The \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"config\"), \" object is the second argument you pass into the \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"graphql()\"), \" function, after your GraphQL document. The config is optional and allows you to add some custom behavior to your higher order component.\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"export\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"default\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"graphql\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"\\n  gql\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token template-string\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"{ ... }\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n  config\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// <- The `config` object.\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"MyComponent\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"Lets go through all of the properties that may live on your \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"config\"), \" object.\"), mdx(\"h3\", {\n    \"id\": \"configoptions\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#configoptions\",\n    \"aria-label\": \"configoptions permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"code\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"config.options\")), mdx(\"p\", null, mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"config.options\"), \" is an object or a function that allows you to define the specific behavior your component should use in handling your GraphQL data.\"), mdx(\"p\", null, \"The specific options available for configuration depend on the operation you pass as the first argument to \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"graphql()\"), \". There are options specific to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/apollo-client/data/queries/\"\n  }), \"queries\"), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/apollo-client/data/mutations/\"\n  }), \"mutations\"), \".\"), mdx(\"p\", null, \"You can define \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"config.options\"), \" as a plain object, or you can compute your options from a function that takes the component\\u2019s props as an argument.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example:\")), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"export\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"default\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"graphql\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"gql\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token template-string\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"{ ... }\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n  options\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// Options go here.\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"MyComponent\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"export\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"default\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"graphql\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"gql\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token template-string\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"{ ... }\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function-variable function\"\n  }), \"options\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token parameter\"\n  }), \"props\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=>\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// Options are computed from `props` here.\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"MyComponent\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"h3\", {\n    \"id\": \"configprops\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#configprops\",\n    \"aria-label\": \"configprops permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"code\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"config.props\")), mdx(\"p\", null, \"The \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"config.props\"), \" property allows you to define a map function that takes the \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"props\"), \" (and optionally \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"lastProps\"), \") added by the \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"graphql()\"), \" function (\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#propsdata\"\n  }), mdx(\"code\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"props.data\")), \" for queries and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#propsmutate\"\n  }), mdx(\"code\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"props.mutate\")), \" for mutations) and allows you to compute a new \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"props\"), \" (and optionally \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"lastProps\"), \") object that will be provided to the component that \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"graphql()\"), \" is wrapping.\"), mdx(\"p\", null, \"The function you define behaves almost exactly like \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/acdlite/recompose/blob/2e71fdf4270cc8022a6574aaf00731bfc25dcae6/docs/API.md#mapprops\"\n  }), mdx(\"code\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"mapProps\"), \" from Recompose\"), \" providing the same benefits without the need for another library.\"), mdx(\"p\", null, mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"config.props\"), \" is most useful when you want to abstract away complex functions calls into a simple prop that you can pass down to your component.\"), mdx(\"p\", null, \"Another benefit of \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"config.props\"), \" is that it also allows you to decouple your pure UI components from your GraphQL and Apollo concerns. You can write your pure UI components in one file and then keep the logic required for them to interact with the store in a completely different place in your project. You can accomplish this by your pure UI components only asking for the props needed to render and \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"config.props\"), \" can contain the logic to provide exactly the props your pure component needs from the data provided by your GraphQL API.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example:\")), mdx(\"p\", null, \"This example uses \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#datafetchmoreoptions\"\n  }), mdx(\"code\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"props.data.fetchMore\")), \".\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"export\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"default\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"graphql\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"gql\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token template-string\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"{ ... }\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function-variable function\"\n  }), \"props\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token parameter\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" data\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" fetchMore \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=>\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function-variable function\"\n  }), \"onLoadMore\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=>\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"fetchMore\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"...\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"MyComponent\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"function\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"MyComponent\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token parameter\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" onLoadMore \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"return\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), \"button onClick\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"onLoadMore\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), \"\\n      Load More\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"!\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"/\"), \"button\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"To access props that are not added by the \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"graphql()\"), \" function, use the \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"ownProps\"), \" keyword. For example:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"export\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"default\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"graphql\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"gql\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token template-string\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"{ ... }\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function-variable function\"\n  }), \"props\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token parameter\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" data\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" liveImage \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" ownProps\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" loadingImage \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=>\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n    image\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" liveImage \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"||\"), \" loadingImage\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"MyComponent\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"To access \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"lastProps\"), \", use the second argument of \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"config.props\"), \". For example:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"export\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"default\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"graphql\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"gql\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token template-string\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"{ ... }\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function-variable function\"\n  }), \"props\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token parameter\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" data\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" liveImage \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" lastProps\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=>\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n    image\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" liveImage\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n    lastImage\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" lastProps\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"data\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"liveImage\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"MyComponent\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"h3\", {\n    \"id\": \"configskip\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#configskip\",\n    \"aria-label\": \"configskip permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"code\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"config.skip\")), mdx(\"p\", null, \"If \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"config.skip\"), \" is true then all of the React Apollo code will be skipped \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"entirely\"), \". It will be as if the \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"graphql()\"), \" function were a simple identity function. Your component will behave as if the \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"graphql()\"), \" function were not there at all.\"), mdx(\"p\", null, \"Instead of passing a boolean to \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"config.skip\"), \", you may also pass a function to \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"config.skip\"), \". The function will take your components props and should return a boolean. If the boolean returns true then the skip behavior will go into effect.\"), mdx(\"p\", null, mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"config.skip\"), \" is especially useful if you want to use a different query based on some prop. You can see this in an example below.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example:\")), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"export\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"default\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"graphql\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"gql\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token template-string\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"{ ... }\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function-variable function\"\n  }), \"skip\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token parameter\"\n  }), \"props\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=>\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"!\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"!\"), \"props\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"skip\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"MyComponent\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"The following example uses the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/acdlite/recompose/blob/master/docs/API.md#compose\"\n  }), mdx(\"code\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"compose\")), \" function to use multiple \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"graphql()\"), \" enhancers at once.\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"export\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"default\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"compose\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"graphql\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"gql\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token template-string\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"query MyQuery1 { ... }\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function-variable function\"\n  }), \"skip\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token parameter\"\n  }), \"props\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=>\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"!\"), \"props\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"useQuery1 \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"graphql\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"gql\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token template-string\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"query MyQuery2 { ... }\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function-variable function\"\n  }), \"skip\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token parameter\"\n  }), \"props\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=>\"), \" props\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"useQuery1 \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"MyComponent\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"function\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"MyComponent\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token parameter\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" data \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// The data may be from `MyQuery1` or `MyQuery2` depending on the value\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// of the prop `useQuery1`.\"), \"\\n  console\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"log\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"data\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"h3\", {\n    \"id\": \"configname\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#configname\",\n    \"aria-label\": \"configname permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"code\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"config.name\")), mdx(\"p\", null, \"This property allows you to configure the name of the prop that gets passed down to your component. By default if the GraphQL document you pass into \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"graphql()\"), \" is a query then your prop will be named \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#propsdata\"\n  }), mdx(\"code\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"data\")), \". If you pass a mutation then your prop will be named \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#propsmutate\"\n  }), mdx(\"code\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"mutate\")), \". While appropriate these default names collide when you are trying to use multiple queries or mutations with the same component. To avoid collisions you may use \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"config.name\"), \" to provide the prop from each query or mutation HOC a new name.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example:\")), mdx(\"p\", null, \"This example uses the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/acdlite/recompose/blob/master/docs/API.md#compose\"\n  }), mdx(\"code\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"compose\")), \" function to use multiple \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"graphql()\"), \" HOCs together.\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"export\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"default\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"compose\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"graphql\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"gql\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token template-string\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"mutation (...) { ... }\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" name\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"'createTodo'\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"graphql\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"gql\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token template-string\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"mutation (...) { ... }\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" name\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"'updateTodo'\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"graphql\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"gql\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token template-string\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"mutation (...) { ... }\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" name\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"'deleteTodo'\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"MyComponent\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"function\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"MyComponent\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token parameter\"\n  }), \"props\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// Instead of the default prop name, `mutate`,\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// we have three different prop names.\"), \"\\n  console\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"log\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"props\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"createTodo\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n  console\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"log\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"props\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"updateTodo\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n  console\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"log\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"props\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"deleteTodo\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"return\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"null\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"h3\", {\n    \"id\": \"configwithref\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#configwithref\",\n    \"aria-label\": \"configwithref permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"code\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"config.withRef\")), mdx(\"p\", null, \"By setting \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"config.withRef\"), \" to true you will be able to get the instance of your wrapped component from your higher-order GraphQL component using a \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"getWrappedInstance\"), \" method available on the instance of your higher-order GraphQL component.\"), mdx(\"p\", null, \"You may want to set this to true when you want to call functions or get access to properties that are defined on your wrapped component\\u2019s class instance.\"), mdx(\"p\", null, \"Below you can see an example of this behavior.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example:\")), mdx(\"p\", null, \"This example uses the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://facebook.github.io/react/docs/refs-and-the-dom.html\"\n  }), \"React \", mdx(\"code\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"ref\"), \" feature\"), \".\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"class\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token class-name\"\n  }), \"MyComponent\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"extends\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token class-name\"\n  }), \"Component\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"saySomething\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n    console\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"log\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"'Hello, world!'\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"render\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// ...\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"const\"), \" MyGraphQLComponent \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"graphql\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"gql\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token template-string\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"{ ... }\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" withRef\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token boolean\"\n  }), \"true\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"\\n  MyComponent\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"class\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token class-name\"\n  }), \"MyContainerComponent\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"extends\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token class-name\"\n  }), \"Component\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"render\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"return\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), \"MyGraphQLComponent\\n        ref\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token parameter\"\n  }), \"component\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=>\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n          \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"const\"), \" wrappedInstance \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" component\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"getWrappedInstance\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n          \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"assert\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"wrappedInstance \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"instanceof\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token class-name\"\n  }), \"MyComponent\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n          \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// We can call methods on the component class instance.\"), \"\\n          wrappedInstance\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"saySomething\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"/\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"h3\", {\n    \"id\": \"configalias\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#configalias\",\n    \"aria-label\": \"configalias permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"code\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"config.alias\")), mdx(\"p\", null, \"By default the display name for React Apollo components is \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"Apollo(${WrappedComponent.displayName})\"), \". This is a pattern used by most React libraries that make use of higher order components. However, it may get a little confusing when you are using more than one higher order component and you look at the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://camo.githubusercontent.com/42385f70ef638c48310ce01a675ceceb4d4b84a9/68747470733a2f2f64337676366c703535716a6171632e636c6f756466726f6e742e6e65742f6974656d732f30543361333532443366325330423049314e31662f53637265656e25323053686f74253230323031372d30312d3132253230617425323031362e33372e30302e706e673f582d436c6f75644170702d56697369746f722d49643d626536623231313261633434616130636135386432623562616265373336323626763d3236623964363434\"\n  }), \"React Devtools\"), \".\"), mdx(\"p\", null, \"To configure the name of your higher order component wrapper, you may use the \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"config.alias\"), \" property. So for example, if you set \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"config.alias\"), \" to \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"'withCurrentUser'\"), \" your wrapper component display name would be \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"withCurrentUser(${WrappedComponent.displayName})\"), \" instead of \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"Apollo(${WrappedComponent.displayName})\"), \".\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example:\")), mdx(\"p\", null, \"This example uses the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/acdlite/recompose/blob/master/docs/API.md#compose\"\n  }), mdx(\"code\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"compose\")), \" function to use multiple \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"graphql()\"), \" HOCs together.\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"export\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"default\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"compose\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"graphql\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"gql\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token template-string\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"{ ... }\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" alias\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"'withCurrentUser'\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"graphql\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"gql\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token template-string\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"{ ... }\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" alias\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"'withList'\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"MyComponent\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"h2\", {\n    \"id\": \"graphql-options-for-queries\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#graphql-options-for-queries\",\n    \"aria-label\": \"graphql options for queries permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"code\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"graphql() options for queries\")), mdx(\"h3\", {\n    \"id\": \"propsdata\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#propsdata\",\n    \"aria-label\": \"propsdata permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"code\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"props.data\")), mdx(\"p\", null, \"The higher-order component created when using \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"graphql()\"), \" will feed a \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"data\"), \" prop into your component. Like so:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"render\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"const\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" data \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"this\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"props\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// <- The `data` prop.\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"The \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"data\"), \" prop contains the data fetched from your query in addition to some other useful information and functions to control the lifecycle of your GraphQL-connected component. So for example, if we had a query that looked like:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"graphql\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-graphql line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n  viewer \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n    name\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n  todos \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n    text\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"Your \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"data\"), \" prop would contain that data:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"render\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"const\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" data \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"this\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"props\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\\n  console\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"log\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"data\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"viewer\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// <- The data returned by your query for `viewer`.\"), \"\\n  console\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"log\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"data\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"todos\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// <- The data returned by your query for `todos`.\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"The \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"data\"), \" prop has some other useful properties which can be accessed directly from \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"data\"), \". For example, \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"data.loading\"), \" or \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"data.error\"), \". These properties are documented below.\"), mdx(\"p\", null, \"Make sure to always check \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"data.loading\"), \" and \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"data.error\"), \" in your components before rendering. Properties like \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"data.todos\"), \" which contain your app\\u2019s data may be undefined while your component is performing its initial fetch. Checking \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"data.loading\"), \" and \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"data.error\"), \" helps you avoid any issues with undefined data. Such checks may look like:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"render\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"const\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" data\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" loading\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" error\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" todos \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"this\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"props\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"if\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"loading\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"return\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), \"p\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), \"Loading\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"...\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"/\"), \"p\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"if\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"error\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"return\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), \"p\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), \"Error\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"!\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"/\"), \"p\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"return\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), \"ul\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"todos\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"map\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token parameter\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" id\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" text \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=>\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), \"li key\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"id\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"text\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"/\"), \"li\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"/\"), \"ul\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"h3\", {\n    \"id\": \"dataloading\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#dataloading\",\n    \"aria-label\": \"dataloading permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"code\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"data.loading\")), mdx(\"p\", null, \"A boolean representing whether or not a query request is currently in flight for this component. This means that a query request has been sent using your network interface, and we have not yet gotten a response back. Use this property to render a loading component.\"), mdx(\"p\", null, \"However, just because \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"data.loading\"), \" is true it does not mean that you won\\u2019t have data. For instance, if you already have \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"data.todos\"), \", but you want to get the latest todos from your API \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"data.loading\"), \" might be true, but you will still have the todos from your previous request.\"), mdx(\"p\", null, \"There are multiple different network states that your query may be in. If you want to see what the network state of your component is in more detail then refer to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#datanetworkstatus\"\n  }), mdx(\"code\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"data.networkStatus\")), \".\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example:\")), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"function\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"MyComponent\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token parameter\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" data\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" loading \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"if\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"loading\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"return\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), \"div\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), \"Loading\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"...\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"/\"), \"div\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"else\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// ...\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"export\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"default\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"graphql\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"gql\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token template-string\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"query { ... }\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"MyComponent\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"h3\", {\n    \"id\": \"dataerror\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#dataerror\",\n    \"aria-label\": \"dataerror permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"code\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"data.error\")), mdx(\"p\", null, \"If an error occurred then this property will be an instance of \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"ApolloError\"), \". If you do not handle this error you will get a warning in your console that says something like: \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"\\\"Unhandled (in react-apollo) Error: ...\\\"\"), \".\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example:\")), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"function\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"MyComponent\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token parameter\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" data\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" error \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"if\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"error\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"return\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), \"div\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), \"Error\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"!\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"/\"), \"div\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"else\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// ...\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"export\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"default\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"graphql\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"gql\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token template-string\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"query { ... }\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"MyComponent\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"h3\", {\n    \"id\": \"datanetworkstatus\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#datanetworkstatus\",\n    \"aria-label\": \"datanetworkstatus permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"code\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"data.networkStatus\")), mdx(\"p\", null, mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"data.networkStatus\"), \" is useful if you want to display a different loading indicator (or no indicator at all) depending on your network status as it provides a more detailed view into the state of a network request on your component than \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#dataloading\"\n  }), mdx(\"code\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"data.loading\")), \" does. \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"data.networkStatus\"), \" is an enum with different number values between 1 and 8. These number values each represent a different network state.\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"loading\"), \": The query has never been run before and the request is now pending. A query will still have this network status even if a result was returned from the cache, but a query was dispatched anyway.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"setVariables\"), \": If a query\\u2019s variables change and a network request was fired then the network status will be \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"setVariables\"), \" until the result of that query comes back. React users will see this when \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#optionsvariables\"\n  }), mdx(\"code\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"options.variables\")), \" changes on their queries.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"fetchMore\"), \": Indicates that \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"fetchMore\"), \" was called on this query and that the network request created is currently in flight.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"refetch\"), \": It means that \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"refetch\"), \" was called on a query and the refetch request is currently in flight.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Unused.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"poll\"), \": Indicates that a polling query is currently in flight. So for example if you are polling a query every 10 seconds then the network status will switch to \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"poll\"), \" every 10 seconds whenever a poll request has been sent but not resolved.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"ready\"), \": No request is in flight for this query, and no errors happened. Everything is OK.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"error\"), \": No request is in flight for this query, but one or more errors were detected.\")), mdx(\"p\", null, \"If the network status is less then 7 then it is equivalent to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#dataloading\"\n  }), mdx(\"code\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"data.loading\")), \" being true. In fact you could replace all of your \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"data.loading\"), \" checks with \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"data.networkStatus < 7\"), \" and you would not see a difference. It is recommended that you use \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"data.loading\"), \", however.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example:\")), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"function\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"MyComponent\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token parameter\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" data\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" networkStatus \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"if\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"networkStatus \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"===\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"6\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"return\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), \"div\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), \"Polling\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"!\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"/\"), \"div\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"else\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"if\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"networkStatus \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"7\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"return\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), \"div\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), \"Loading\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"...\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"/\"), \"div\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"else\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// ...\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"export\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"default\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"graphql\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"gql\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token template-string\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"query { ... }\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"MyComponent\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"h3\", {\n    \"id\": \"datavariables\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#datavariables\",\n    \"aria-label\": \"datavariables permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"code\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"data.variables\")), mdx(\"p\", null, \"The variables that Apollo used to fetch data from your GraphQL endpoint. This property is helpful if you want to render some information based on the variables that were used to make a request against your server.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example:\")), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"function\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"MyComponent\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token parameter\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" data\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" variables \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"return\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), \"div\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), \"\\n      Query executed \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"with\"), \" the following variables\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), \"code\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"JSON\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"stringify\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"variables\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"/\"), \"code\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"/\"), \"div\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"export\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"default\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"graphql\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"gql\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token template-string\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"query { ... }\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"MyComponent\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"h3\", {\n    \"id\": \"datarefetchvariables\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#datarefetchvariables\",\n    \"aria-label\": \"datarefetchvariables permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"code\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"data.refetch(variables)\")), mdx(\"p\", null, \"Forces your component to refetch the query you defined in the \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"graphql()\"), \" function. This method is helpful when you want to reload the data in your component, or retry a fetch after an error.\"), mdx(\"p\", null, mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"data.refetch\"), \" returns a promise that resolves with the new data fetched from your API once the query has finished executing. The promise will reject if the query failed.\"), mdx(\"p\", null, \"The \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"data.refetch\"), \" function takes a single \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"variables\"), \" object argument. The \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"variables\"), \" argument will replace \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"variables\"), \" used with either the \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"query\"), \" option or the query from your \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"graphql()\"), \" HOC (depending on whether or not you specified a \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"query\"), \") option to refetch the query you defined in the \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"graphql()\"), \" function.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example:\")), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"function\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"MyComponent\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token parameter\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" data\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" refetch \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"return\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), \"button onClick\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=>\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"refetch\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), \"Reload\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"/\"), \"button\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"export\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"default\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"graphql\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"gql\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token template-string\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"query { ... }\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"MyComponent\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"h3\", {\n    \"id\": \"datafetchmoreoptions\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#datafetchmoreoptions\",\n    \"aria-label\": \"datafetchmoreoptions permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"code\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"data.fetchMore(options)\")), mdx(\"p\", null, \"The \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"data.fetchMore\"), \" function allows you to do pagination with your query component. To learn more about pagination with \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"data.fetchMore\"), \", be sure to read the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/apollo-client/data/pagination/\"\n  }), \"pagination\"), \" recipe which contains helpful illustrations on how you can do pagination with React Apollo.\"), mdx(\"p\", null, mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"data.fetchMore\"), \" returns a promise that resolves once the query executed to fetch more data has resolved.\"), mdx(\"p\", null, \"The \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"data.fetchMore\"), \" function takes a single \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"options\"), \" object argument. The \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"options\"), \" argument may take the following properties:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"[query]\"), \": This is an optional GraphQL document created with the \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"gql\"), \" GraphQL tag. If you specify a \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"query\"), \" then that query will be fetched when you call \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"data.fetchMore\"), \". If you do not specify a \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"query\"), \", then the query from your \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"graphql()\"), \" HOC will be used.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"[variables]\"), \": The optional variables you may provide that will be used with either the \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"query\"), \" option or the query from your \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"graphql()\"), \" HOC (depending on whether or not you specified a \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"query\"), \").\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"updateQuery(previousResultundefined { fetchMoreResultundefined variables })\"), \": This is the required function you define that will actually update your paginated list. The first argument, \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"previousResult\"), \", will be the previous data returned by the query you defined in your \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"graphql()\"), \" function. The second argument is an object with two properties, \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"fetchMoreResult\"), \" and \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"variables\"), \". \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"fetchMoreResult\"), \" is the data returned by the new fetch that used the \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"query\"), \" and \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"variables\"), \" options from \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"data.fetchMore\"), \". \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"variables\"), \" are the variables that were used when fetching more data. Using these arguments you should return a new data object with the same shape as the GraphQL query you defined in your \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"graphql()\"), \" function. See an example of this below, and also make sure to read the \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/apollo-client/data/pagination/\"\n  }), \"pagination\"), \" recipe which has a full example.\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example:\")), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"data\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"fetchMore\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function-variable function\"\n  }), \"updateQuery\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token parameter\"\n  }), \"previousResult\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" fetchMoreResult\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" variables \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=>\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"return\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"...\"), \"previousResult\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// Add the new feed data to the end of the old feed data.\"), \"\\n      feed\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"...\"), \"previousResult\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"feed\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"...\"), \"fetchMoreResult\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"feed\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"h3\", {\n    \"id\": \"datasubscribetomoreoptions\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#datasubscribetomoreoptions\",\n    \"aria-label\": \"datasubscribetomoreoptions permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"code\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"data.subscribeToMore(options)\")), mdx(\"p\", null, \"This function will set up a subscription, triggering updates whenever the server sends a subscription publication. This requires subscriptions to be set up on the server to properly work. Check out the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/apollo-client/data/subscriptions/\"\n  }), \"subscriptions guide\"), \" and the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/apollographql/subscriptions-transport-ws\"\n  }), \"subscriptions-transport-ws\"), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/apollographql/graphql-subscriptions\"\n  }), \"graphql-subscriptions\"), \" for more information on getting this set up.\"), mdx(\"p\", null, \"This function returns an \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"unsubscribe\"), \" function handler which can be used to unsubscribe later.\"), mdx(\"p\", null, \"A common practice is to wrap the \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"subscribeToMore\"), \" call within \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"getDerivedStateFromProps\"), \" and perform the subscription after the original query has completed. To ensure the subscription isn't created multiple times, you can add it to component state. See the example for more details.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"[document]\"), \": Document is a required property that accepts a GraphQL subscription created with \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"graphql-tag\"), \"\\u2019s \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"gql\"), \" template string tag. It should contain a single GraphQL subscription operation with the data that will be returned.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"[variables]\"), \": The optional variables you may provide that will be used with the \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"document\"), \" option.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"[updateQuery]\"), \": An optional function that runs every time the server sends an update. This modifies the results of the HOC query. The first argument, \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"previousResult\"), \", will be the previous data returned by the query you defined in your \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"graphql()\"), \" function. The second argument is an object with two properties. \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"subscriptionData\"), \" is result of the subscription. \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"variables\"), \" is the variables object used with the subscription query. Using these arguments you should return a new data object with the same shape as the GraphQL query you defined in your \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"graphql()\"), \" function. This is similar to the \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#datafetchmoreoptions\"\n  }), mdx(\"code\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"fetchMore\")), \" callback.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"[onError]\"), \": An optional error callback.\")), mdx(\"p\", null, \"In order to update the query's store with the result of the subscription, you must specify either the \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"updateQuery\"), \" option in \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"subscribeToMore\"), \" or the \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"reducer\"), \" option in your \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"graphql()\"), \" function.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example:\")), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"class\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token class-name\"\n  }), \"SubscriptionComponent\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"extends\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token class-name\"\n  }), \"Component\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n  state \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n    subscriptionParam\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"null\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n    unsubscribe\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"null\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"static\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"getDerivedStateFromProps\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token parameter\"\n  }), \"nextProps\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" prevState\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"if\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"!\"), \"nextProps\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"data\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"loading\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// Check for existing subscription\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"if\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"prevState\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"unsubscribe\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// Only unsubscribe/update state if subscription variable has changed\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"if\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"prevState\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"subscriptionParam \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"===\"), \" nextProps\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"subscriptionParam\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n          \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"return\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"null\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n        prevState\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"unsubscribe\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"return\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// Subscribe\"), \"\\n        unsubscribe\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" nextProps\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"data\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"subscribeToMore\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n          document\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" gql\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token template-string\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"subscription {...}\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n          variables\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n            param\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" nextProps\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"subscriptionParam\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n          \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n          \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function-variable function\"\n  }), \"updateQuery\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token parameter\"\n  }), \"previousResult\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" subscriptionData\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" variables \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=>\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n            \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// Perform updates on previousResult with subscriptionData\"), \"\\n            \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"return\"), \" updatedResult\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n          \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// Store subscriptionParam in state for next update\"), \"\\n        subscriptionParam\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" nextProps\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"subscriptionParam\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"return\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"null\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"render\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"...\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"h3\", {\n    \"id\": \"datastartpollinginterval\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#datastartpollinginterval\",\n    \"aria-label\": \"datastartpollinginterval permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"code\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"data.startPolling(interval)\")), mdx(\"p\", null, \"This function will set up an interval and send a fetch request every time that interval ellapses. The function takes only one integer argument which allows you to configure how often you want your query to be executed in milliseconds. In other words, the \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"interval\"), \" argument represents the milliseconds between polls.\"), mdx(\"p\", null, \"Polling is a good way to keep the data in your UI fresh. By refetching your data every 5,000 milliseconds (or 5 seconds, for example) you may effectively emulate realtime data without needing to build up a realtime backend.\"), mdx(\"p\", null, \"If you call \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"data.startPolling\"), \" when your query is already polling then the current polling process will be cancelled and a new process will be started with the interval you specified.\"), mdx(\"p\", null, \"You may also use \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#optionspollinterval\"\n  }), mdx(\"code\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"options.pollInterval\")), \" to start polling immediately after your component mounts. It is recommend that you use \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"options.pollInterval\"), \" if you don\\u2019t need to arbitrarily start and stop polling.\"), mdx(\"p\", null, \"If you set your \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"interval\"), \" to 0 then that means no polling instead of executing a request every JavaScript event loop tick.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example:\")), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"class\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token class-name\"\n  }), \"MyComponent\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"extends\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token class-name\"\n  }), \"Component\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"componentDidMount\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// In this specific case you may want to use `options.pollInterval` instead.\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"this\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"props\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"data\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"startPolling\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"1000\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"render\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// ...\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"export\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"default\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"graphql\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"gql\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token template-string\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"query { ... }\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"MyComponent\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"h3\", {\n    \"id\": \"datastoppolling\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#datastoppolling\",\n    \"aria-label\": \"datastoppolling permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"code\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"data.stopPolling()\")), mdx(\"p\", null, \"By calling this function you will stop any current polling process. Your query will not start polling again until you call \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"data.startPolling\"), \".\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example:\")), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"class\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token class-name\"\n  }), \"MyComponent\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"extends\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token class-name\"\n  }), \"Component\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"render\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"return\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), \"div\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), \"button\\n          onClick\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=>\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n            \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"this\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"props\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"data\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"startPolling\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"1000\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n          \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), \"\\n          Start Polling\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"/\"), \"button\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), \"button\\n          onClick\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=>\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n            \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"this\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"props\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"data\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"stopPolling\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n          \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), \"\\n          Stop Polling\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"/\"), \"button\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"/\"), \"div\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"export\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"default\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"graphql\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"gql\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token template-string\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"query { ... }\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"MyComponent\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"h3\", {\n    \"id\": \"dataupdatequeryupdaterfn\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#dataupdatequeryupdaterfn\",\n    \"aria-label\": \"dataupdatequeryupdaterfn permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"code\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"data.updateQuery(updaterFn)\")), mdx(\"p\", null, \"This function allows you to update the data for your query outside of the context of any mutation, subscription, or fetch. This function only takes a single argument which will be another function. The argument function has the following signature:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-text line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"(previousResultundefined { variables }) => nextResult\"), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"The first argument will be the data for your query that currently exists in the store, and you are expected to return a new data object with the same shape. That new data object will be written to the store and any components tracking that data will be updated reactively.\"), mdx(\"p\", null, \"The second argument is an object with a single property, \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"variables\"), \". The \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"variables\"), \" property allows you to see what variables were used when reading the \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"previousResult\"), \" from the store.\"), mdx(\"p\", null, \"This method will \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"not\"), \" update anything on the server. It will only update data in your client cache and if you reload your JavaScript environment then your update will disappear.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example:\")), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"data\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"updateQuery\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token parameter\"\n  }), \"previousResult\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=>\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"...\"), \"previousResult\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n  count\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" previousResult\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"count \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"+\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"1\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"h3\", {\n    \"id\": \"configoptions-1\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#configoptions-1\",\n    \"aria-label\": \"configoptions 1 permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"code\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"config.options\")), mdx(\"p\", null, \"An object or function that returns an object of options that are used to configure how the query is fetched and updated.\"), mdx(\"p\", null, \"If \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"config.options\"), \" is a function then it will take the component\\u2019s props as its first argument.\"), mdx(\"p\", null, \"The options available for use in this object depend on the operation type you pass in as the first argument to \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"graphql()\"), \". The references below will document which options are available when your operation is a query. To see what other options are available for different operations, see the generic documentation for \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#configoptions\"\n  }), mdx(\"code\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"config.options\")), \".\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example:\")), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"export\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"default\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"graphql\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"gql\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token template-string\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"{ ... }\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n  options\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// Options go here.\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"MyComponent\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"export\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"default\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"graphql\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"gql\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token template-string\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"{ ... }\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function-variable function\"\n  }), \"options\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token parameter\"\n  }), \"props\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=>\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// Options are computed from `props` here.\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"MyComponent\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"h3\", {\n    \"id\": \"optionsvariables\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#optionsvariables\",\n    \"aria-label\": \"optionsvariables permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"code\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"options.variables\")), mdx(\"p\", null, \"The variables that will be used when executing the query operation. These variables should correspond with the variables that your query definition accepts. If you define \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"config.options\"), \" as a function then you may compute your variables from your props.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example:\")), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"export\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"default\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"graphql\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"\\n  gql\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token template-string\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\n  query ($width: Int!, $height: Int!) {\\n    ...\\n  }\\n\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function-variable function\"\n  }), \"options\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token parameter\"\n  }), \"props\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=>\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n      variables\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n        width\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" props\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"size\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n        height\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" props\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"size\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"MyComponent\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"h3\", {\n    \"id\": \"optionsfetchpolicy\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#optionsfetchpolicy\",\n    \"aria-label\": \"optionsfetchpolicy permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"code\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"options.fetchPolicy\")), mdx(\"p\", null, \"The fetch policy is an option which allows you to specify how you want your component to interact with the Apollo data cache. By default your component will try to read from the cache first, and if the full data for your query is in the cache then Apollo simply returns the data from the cache. If the full data for your query is \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"not\"), \" in the cache then Apollo will execute your request using your network interface. By changing this option you can change this behavior.\"), mdx(\"p\", null, \"Valid \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"fetchPolicy\"), \" values are:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"cache-first\"), \": This is the default value where we always try reading data from your cache first. If all the data needed to fulfill your query is in the cache then that data will be returned. Apollo will only fetch from the network if a cached result is not available. This fetch policy aims to minimize the number of network requests sent when rendering your component.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"cache-and-network\"), \": This fetch policy will have Apollo first trying to read data from your cache. If all the data needed to fulfill your query is in the cache then that data will be returned. However, regardless of whether or not the full data is in your cache this \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"fetchPolicy\"), \" will \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"always\"), \" execute query with the network interface unlike \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"cache-first\"), \" which will only execute your query if the query data is not in your cache. This fetch policy optimizes for users getting a quick response while also trying to keep cached data consistent with your server data at the cost of extra network requests.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"network-only\"), \": This fetch policy will \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"never\"), \" return you initial data from the cache. Instead it will always make a request using your network interface to the server. This fetch policy optimizes for data consistency with the server, but at the cost of an instant response to the user when one is available.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"cache-only\"), \": This fetch policy will \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"never\"), \" execute a query using your network interface. Instead it will always try reading from the cache. If the data for your query does not exist in the cache then an error will be thrown. This fetch policy allows you to only interact with data in your local client cache without making any network requests which keeps your component fast, but means your local data might not be consistent with what is on the server. If you are interested in only interacting with data in your Apollo Client cache also be sure to look at the \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/apollo-client/caching/cache-interaction/#readquery\"\n  }), mdx(\"code\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"readQuery()\"), \" and \", mdx(\"code\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"readFragment()\")), \" methods available to you on your \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"ApolloClient\"), \" instance.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"no-cache\"), \": This fetch policy will \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"never\"), \" return your initial data from the cache. Instead it will always make a request using your network interface to the server. Unlike the \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"network-only\"), \" policy, it also will not write any data to the cache after the query completes.\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example:\")), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"export\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"default\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"graphql\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"gql\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token template-string\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"query { ... }\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n  options\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" fetchPolicy\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"'cache-and-network'\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"MyComponent\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"h3\", {\n    \"id\": \"optionserrorpolicy\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#optionserrorpolicy\",\n    \"aria-label\": \"optionserrorpolicy permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"code\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"options.errorPolicy\")), mdx(\"p\", null, \"The error policy is an option which allows you to specify how you want your component to handle errors that can happen when fetching data from GraphQL. There are two types of errors that can happen during your request; a runtime error on the client or server which results in no data, or some GraphQL errors which may be delivered alongside actual data. In order to control how your UI interacts with these errors, you can use the error policy to tell Apollo when you want to know about GraphQL Errors or not!\"), mdx(\"p\", null, \"Valid \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"errorPolicy\"), \" values are:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"none\"), \": This is the default value where we treat GraphQL errors as runtime errors. Apollo will discard any data that came back with the request and render your component with an \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"error\"), \" prop.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"ignore\"), \": Much like \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"none\"), \", this causes Apollo to ignore any data from your server, but it also won't update your UI aside from setting the loading state back to false.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"all\"), \": Selecting all means you want to be notified any time there are any GraphQL errors. It will render your component with any data from the request and any errors with their information. It is particularly helpful for server side rendering so your UI always shows something\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example:\")), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"export\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"default\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"graphql\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"gql\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token template-string\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"query { ... }\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n  options\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" errorPolicy\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"'all'\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"MyComponent\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"h3\", {\n    \"id\": \"optionspollinterval\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#optionspollinterval\",\n    \"aria-label\": \"optionspollinterval permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"code\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"options.pollInterval\")), mdx(\"p\", null, \"The interval in milliseconds at which you want to start polling. Whenever that number of milliseconds elapses your query will be executed using the network interface and another execution will be scheduled using the configured number of milliseconds.\"), mdx(\"p\", null, \"This option will start polling your query immediately when the component mounts. If you want to start and stop polling dynamically then you may use \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#datastartpollinginterval\"\n  }), mdx(\"code\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"data.startPolling\")), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#datastoppolling\"\n  }), mdx(\"code\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"data.stopPolling\")), \".\"), mdx(\"p\", null, \"If you set \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"options.pollInterval\"), \" to 0 then that means no polling instead of executing a request every JavaScript event loop tick.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example:\")), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"export\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"default\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"graphql\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"gql\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token template-string\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"query { ... }\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n  options\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" pollInterval\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"5000\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"MyComponent\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"h3\", {\n    \"id\": \"optionsnotifyonnetworkstatuschange\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#optionsnotifyonnetworkstatuschange\",\n    \"aria-label\": \"optionsnotifyonnetworkstatuschange permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"code\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"options.notifyOnNetworkStatusChange\")), mdx(\"p\", null, \"Whether or not updates to the network status or network error should trigger re-rendering of your component.\"), mdx(\"p\", null, \"The default value is \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"false\"), \".\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example:\")), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"export\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"default\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"graphql\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"gql\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token template-string\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"query { ... }\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n  options\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" notifyOnNetworkStatusChange\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token boolean\"\n  }), \"true\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"MyComponent\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"h3\", {\n    \"id\": \"optionscontext\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#optionscontext\",\n    \"aria-label\": \"optionscontext permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"code\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"options.context\")), mdx(\"p\", null, \"With the flexiblity and power of \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.apollographql.com/docs/link\"\n  }), \"Apollo Link\"), \" being part of Apollo Client, you may want to send information from your operation straight to a link in your network chain! This can be used to do things like set \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"headers\"), \" on HTTP requests from props, control which endpoint you send a query to, and so much more depending on what links your app is using. Everything under the \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"context\"), \" object gets passed directly to your network chain. For more information about using context, check out the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.apollographql.com/docs/link/overview#context\"\n  }), \"docs on context with links\")), mdx(\"h3\", {\n    \"id\": \"partialrefetch\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#partialrefetch\",\n    \"aria-label\": \"partialrefetch permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"code\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"partialRefetch\")), mdx(\"p\", null, \"If \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"true\"), \", perform a query \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"refetch\"), \" if the query result is marked as being partial, and the returned data is reset to an empty Object by the Apollo Client \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"QueryManager\"), \" (due to a cache miss).\"), mdx(\"p\", null, \"The default value is \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"false\"), \" for backwards-compatibility's sake, but should be changed to true for most use-cases.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example:\")), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"export\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"default\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"graphql\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"gql\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token template-string\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"query { ... }\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n  options\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" partialRefetch\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token boolean\"\n  }), \"true\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"MyComponent\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"h2\", {\n    \"id\": \"graphql-options-for-mutations\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#graphql-options-for-mutations\",\n    \"aria-label\": \"graphql options for mutations permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"code\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"graphql() options for mutations\")), mdx(\"h3\", {\n    \"id\": \"propsmutate\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#propsmutate\",\n    \"aria-label\": \"propsmutate permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"code\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"props.mutate\")), mdx(\"p\", null, \"The higher order component created when you pass a mutation to \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"graphql()\"), \" will provide your component with a single prop named \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"mutate\"), \". Unlike the \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"data\"), \" prop which you get when you pass a query to \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"graphql()\"), \", \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"mutate\"), \" is a function.\"), mdx(\"p\", null, \"The \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"mutate\"), \" function will actually execute your mutation using the network interface therefore mutating your data. The \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"mutate\"), \" function will also then update your cache in ways you define.\"), mdx(\"p\", null, \"To learn more about how mutations work, be sure to check out the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/apollo-client/data/mutations/\"\n  }), \"mutations usage documentation\"), \".\"), mdx(\"p\", null, \"The \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"mutate\"), \" function accepts the same options that \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#configoptions-2\"\n  }), mdx(\"code\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"config.options\")), \" for mutations accepts, so make sure to read through the documentation for that to know what you can pass into the \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"mutate\"), \" function.\"), mdx(\"p\", null, \"The reason the \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"mutate\"), \" function accepts the same options is that it will use the options from \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#configoptions-2\"\n  }), mdx(\"code\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"config.options\")), \" \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"by default\"), \". When you pass an object into the \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"mutate\"), \" function you are just overriding what is already in \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#configoptions-2\"\n  }), mdx(\"code\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"config.options\")), \".\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example:\")), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"function\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"MyComponent\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token parameter\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" mutate \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"return\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), \"button\\n      onClick\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=>\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"mutate\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n          variables\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" foo\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"42\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), \"\\n      Mutate\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"/\"), \"button\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"export\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"default\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"graphql\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"gql\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token template-string\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"mutation { ... }\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"MyComponent\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"h3\", {\n    \"id\": \"configoptions-2\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#configoptions-2\",\n    \"aria-label\": \"configoptions 2 permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"code\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"config.options\")), mdx(\"p\", null, \"An object or function that returns an object of options that are used to configure how the query is fetched and updated.\"), mdx(\"p\", null, \"If \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"config.options\"), \" is a function then it will take the component\\u2019s props as its first argument.\"), mdx(\"p\", null, \"The options available for use in this object depend on the operation type you pass in as the first argument to \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"graphql()\"), \". The references below will document which options are available when your operation is a mutation. To see what other options are available for different operations, see the generic documentation for \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#configoptions\"\n  }), mdx(\"code\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"config.options\")), \".\"), mdx(\"p\", null, \"The properties accepted in this options object may also be accepted by the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#propsmutate\"\n  }), mdx(\"code\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"props.mutate\")), \" function. Any options passed into the \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"mutate\"), \" function will take precedence over the options defined in the \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"config\"), \" object.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example:\")), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"export\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"default\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"graphql\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"gql\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token template-string\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"mutation { ... }\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n  options\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// Options go here.\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"MyComponent\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"export\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"default\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"graphql\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"gql\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token template-string\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"mutation { ... }\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function-variable function\"\n  }), \"options\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token parameter\"\n  }), \"props\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=>\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// Options are computed from `props` here.\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"MyComponent\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"function\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"MyComponent\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token parameter\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" mutate \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"return\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), \"button\\n      onClick\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=>\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"mutate\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n          \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// Options are component from `props` and component state here.\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), \"\\n      Mutate\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"/\"), \"button\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"export\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"default\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"graphql\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"gql\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token template-string\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"mutation { ... }\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"MyComponent\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"h3\", {\n    \"id\": \"optionsvariables-1\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#optionsvariables-1\",\n    \"aria-label\": \"optionsvariables 1 permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"code\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"options.variables\")), mdx(\"p\", null, \"The variables which will be used to execute the mutation operation. These variables should correspond to the variables that your mutation definition accepts. If you define \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"config.options\"), \" as a function, or you pass variables into the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#propsmutate\"\n  }), mdx(\"code\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"props.mutate\")), \" function then you may compute your variables from props and component state.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example:\")), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"export\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"default\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"graphql\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"\\n  gql\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token template-string\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\n  mutation ($foo: String!, $bar: String!) {\\n    ...\\n  }\\n\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function-variable function\"\n  }), \"options\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token parameter\"\n  }), \"props\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=>\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n      variables\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n        foo\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" props\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"foo\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n        bar\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" props\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"bar\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"MyComponent\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"h3\", {\n    \"id\": \"optionsoptimisticresponse\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#optionsoptimisticresponse\",\n    \"aria-label\": \"optionsoptimisticresponse permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"code\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"options.optimisticResponse\")), mdx(\"p\", null, \"Often when you mutate data it is fairly easy to predict what the response of the mutation will be before asking your server. The optimistic response option allows you to make your mutations feel faster by simulating the result of your mutation in your UI before the mutation actually finishes.\"), mdx(\"p\", null, \"To learn more about the benefits of optimistic data and how to use it be sure to read the recipe on \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/apollo-client/performance/optimistic-ui/\"\n  }), \"Optimistic UI\"), \".\"), mdx(\"p\", null, \"This optimistic response will be used with \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#optionsupdate\"\n  }), mdx(\"code\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"options.update\")), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#optionsupdatequeries\"\n  }), mdx(\"code\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"options.updateQueries\")), \" to apply an update to your cache which will be rolled back before applying the update from the actual response.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example:\")), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"function\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"MyComponent\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token parameter\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" newText\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" mutate \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"return\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), \"button\\n      onClick\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=>\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"mutate\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n          variables\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n            text\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" newText\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n          \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n          \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// The optimistic response has all of the fields that are included in\"), \"\\n          \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// the GraphQL mutation document below.\"), \"\\n          optimisticResponse\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n            createTodo\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n              id\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"-\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"1\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// A temporary id. The server decides the real id.\"), \"\\n              text\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" newText\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n              completed\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token boolean\"\n  }), \"false\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n            \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n          \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), \"\\n      Add Todo\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"/\"), \"button\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"export\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"default\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"graphql\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"gql\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token template-string\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\n  mutation($text: String!) {\\n    createTodo(text: $text) {\\n      id\\n      text\\n      completed\\n    }\\n  }\\n\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"MyComponent\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"h3\", {\n    \"id\": \"optionsupdate\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#optionsupdate\",\n    \"aria-label\": \"optionsupdate permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"code\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"options.update\")), mdx(\"p\", null, \"This option allows you to update your store based on your mutation\\u2019s result. By default Apollo Client will update all of the overlapping nodes in your store. Anything that shares the same id as returned by the \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"dataIdFromObject\"), \" you defined will be updated with the new fields from your mutation results. However, sometimes this alone is not sufficient. Sometimes you may want to update your cache in a way that is dependent on the data currently in your cache. For these updates you may use an \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"options.update\"), \" function.\"), mdx(\"p\", null, mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"options.update\"), \" takes two arguments. The first is an instance of a \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"DataProxy\"), \" object which has some methods which will allow you to interact with the data in your store. The second is the response from your mutation - either the optimistic response, or the actual response returned by your server (see the mutation result described in the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/apollo-client/api/react-components/#render-prop-function-1\"\n  }), \"mutation render prop\"), \" section for more details).\"), mdx(\"p\", null, \"In order to change the data in your store call methods on your \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"DataProxy\"), \" instance like \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/apollo-client/caching/cache-interaction/#writequery-and-writefragment\"\n  }), mdx(\"code\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"writeQuery\"), \" and \", mdx(\"code\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"writeFragment\")), \". This will update your cache and reactively re-render any of your GraphQL components which are querying affected data.\"), mdx(\"p\", null, \"To read the data from the store that you are changing, make sure to use methods on your \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"DataProxy\"), \" like \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/apollo-client/caching/cache-interaction/#readquery\"\n  }), mdx(\"code\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"readQuery\")), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/apollo-client/caching/cache-interaction/#readfragment\"\n  }), mdx(\"code\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"readFragment\")), \".\"), mdx(\"p\", null, \"For more information on updating your cache after a mutation with the \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"options.update\"), \" function make sure to read the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/apollo-client/caching/cache-interaction/#updating-after-a-mutation\"\n  }), \"Apollo Client technical documentation on the subject\"), \".\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example:\")), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"const\"), \" query \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" gql\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token template-string\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"{ todos { ... } }\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"export\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"default\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"graphql\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"\\n  gql\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token template-string\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\n  mutation ($text: String!) {\\n    createTodo(text: $text) { ... }\\n  }\\n\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n    options\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function-variable function\"\n  }), \"update\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token parameter\"\n  }), \"proxy\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" data\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" createTodo \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=>\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"const\"), \" data \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" proxy\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"readQuery\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" query \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n        data\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"todos\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"push\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"createTodo\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n        proxy\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"writeQuery\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" query\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" data \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"MyComponent\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"h3\", {\n    \"id\": \"optionsrefetchqueries\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#optionsrefetchqueries\",\n    \"aria-label\": \"optionsrefetchqueries permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"code\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"options.refetchQueries\")), mdx(\"p\", null, \"Sometimes when you make a mutation you also want to update the data in your queries so that your users may see an up-to-date user interface. There are more fine-grained ways to update the data in your cache which include \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#optionsupdatequeries\"\n  }), mdx(\"code\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"options.updateQueries\")), \", and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#optionsupdate\"\n  }), mdx(\"code\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"options.update\")), \". However, you can update the data in your cache more reliably at the cost of efficiency by using \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"options.refetchQueries\"), \".\"), mdx(\"p\", null, mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"options.refetchQueries\"), \" will execute one or more queries using your network interface and will then normalize the results of those queries into your cache. Allowing you to potentially refetch queries you had fetched before, or fetch brand new queries.\"), mdx(\"p\", null, mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"options.refetchQueries\"), \" is either an array of strings or objects, or a function which takes the result of the mutation and returns an array of strings or objects.\"), mdx(\"p\", null, \"If \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"options.refetchQueries\"), \" is an array of strings then Apollo Client will look for any queries with the same names as the provided strings and will refetch those queries with their current variables. So for example if you have a GraphQL query component with a query named \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"Comments\"), \" (the query may look like: \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"query Comments { ... }\"), \"), and you pass an array of strings containing \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"Comments\"), \" to \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"options.refetchQueries\"), \" then the \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"Comments\"), \" query will be re-executed and when it resolves the latest data will be reflected in your UI.\"), mdx(\"p\", null, \"If \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"options.refetchQueries\"), \" is an array of objects then the objects must have two properties:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"query\"), \": Query is a required property that accepts a GraphQL query created with \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"graphql-tag\"), \"\\u2019s \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"gql\"), \" template string tag. It should contain a single GraphQL query operation that will be executed once the mutation has completed.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"[variables]\"), \": Is an optional object of variables that is required when \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"query\"), \" accepts some variables.\")), mdx(\"p\", null, \"If an array of objects with this shape is specified then Apollo Client will refetch these queries with their variables.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example:\")), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"export\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"default\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"graphql\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"gql\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token template-string\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"mutation { ... }\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n  options\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n    refetchQueries\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"'CommentList'\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"'PostList'\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"MyComponent\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"import\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"COMMENT_LIST_QUERY\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"from\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"'../components/CommentList'\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"export\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"default\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"graphql\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"gql\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token template-string\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"mutation { ... }\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function-variable function\"\n  }), \"options\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token parameter\"\n  }), \"props\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=>\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n    refetchQueries\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n        query\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"COMMENT_LIST_QUERY\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n        query\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" gql\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token template-string\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\n          query($id: ID!) {\\n            post(id: $id) {\\n              commentCount\\n            }\\n          }\\n        \"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n        variables\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n          id\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" props\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"postID\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"MyComponent\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"export\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"default\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"graphql\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"gql\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token template-string\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"mutation { ... }\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n  options\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function-variable function\"\n  }), \"refetchQueries\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token parameter\"\n  }), \"mutationResult\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=>\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"'CommentList'\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"'PostList'\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"MyComponent\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"Please note that refetched queries are handled asynchronously, and by default are not necessarily completed before the mutation has completed. If you want to make sure refetched queries are completed before the mutation is considered done (or resolved), set \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#optionsawaitrefetchqueries\"\n  }), mdx(\"code\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"options.awaitRefetchQueries\")), \" to \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"true\"), \".\"), mdx(\"h3\", {\n    \"id\": \"optionsawaitrefetchqueries\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#optionsawaitrefetchqueries\",\n    \"aria-label\": \"optionsawaitrefetchqueries permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"code\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"options.awaitRefetchQueries\")), mdx(\"p\", null, \"Queries refetched using \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#optionsrefetchqueries\"\n  }), mdx(\"code\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"options.refetchQueries\")), \" are handled asynchronously, which means by default they are not necessarily completed before the mutation has completed. Setting \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"options.awaitRefetchQueries\"), \" to \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"true\"), \" will make sure refetched queries are completed before the mutation is considered done (or resolved). \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"options.awaitRefetchQueries\"), \" is \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"false\"), \" by default.\"), mdx(\"h3\", {\n    \"id\": \"optionsupdatequeries\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#optionsupdatequeries\",\n    \"aria-label\": \"optionsupdatequeries permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"code\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"options.updateQueries\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Note: We recommend using \", mdx(\"a\", _extends({\n    parentName: \"strong\"\n  }, {\n    \"href\": \"#optionsupdate\"\n  }), mdx(\"code\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"options.update\")), \" instead of \", mdx(\"code\", _extends({\n    parentName: \"strong\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"updateQueries\"), \". \", mdx(\"code\", _extends({\n    parentName: \"strong\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"updateQueries\"), \" will be removed in the next version of Apollo Client\")), mdx(\"p\", null, \"This option allows you to update your store based on your mutation\\u2019s result. By default Apollo Client will update all of the overlapping nodes in your store. Anything that shares the same id as returned by the \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"dataIdFromObject\"), \" you defined will be updated with the new fields from your mutation results. However, sometimes this alone is not sufficient. Sometimes you may want to update your cache in a way that is dependent on the data currently in your cache. For these updates you may use an \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"options.updateQueries\"), \" function.\"), mdx(\"p\", null, mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"options.updateQueries\"), \" takes an object where query names are the keys and reducer functions are the values. If you are familiar with Redux, defining your \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"options.updateQueries\"), \" reducers is very similar to defining your Redux reducers. The object looks something like this:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function-variable function\"\n  }), \"Comments\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token parameter\"\n  }), \"previousData\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" mutationResult\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" queryVariables \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=>\"), \" nextData\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"Make sure that the key of your \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"options.updateQueries\"), \" object corresponds to an actual query that you have made somewhere else in your app. The query name will be the name you put after specifying the \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"query\"), \" operation type. So for example in the following query:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"graphql\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-graphql line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"query\"), \" Comments \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n  entry\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token attr-name\"\n  }), \"id\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"5\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n    comments \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"...\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"The query name would be \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"Comments\"), \". If you have not executed a GraphQL query with the name of \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"Comments\"), \" before somewhere in your application, then the reducer function will never be run by Apollo and the key/value pair in \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"options.updateQueries\"), \" will be ignored.\"), mdx(\"p\", null, \"The first argument to the function you provide as the value for your object will be the previous data for your query. So if your key is \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"Comments\"), \" then the first argument will be the last data object that was returned for your \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"Comments\"), \" query, or the current object that is being rendered by any component using the \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"Comments\"), \" query.\"), mdx(\"p\", null, \"The second argument to your function value will be an object with three properties:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"mutationResult\"), \": The \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"mutationResult\"), \" property will represent the result of your mutation after hitting the server. If you provided an \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#optionsoptimisticresponse\"\n  }), mdx(\"code\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"options.optimisticResponse\")), \" then \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"mutationResult\"), \" may be that object.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"queryVariables\"), \": The last set of variables that the query was executed with. This is helpful because when you specify the query name it will only update the data in the store for your current variable set.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"queryName\"), \": This is the name of the query you are updating. It is the same name as the key you provided to \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"options.updateQueries\"), \".\")), mdx(\"p\", null, \"The return value of your \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"options.updateQueries\"), \" functions \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"must\"), \" have the same shape as your first \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"previousData\"), \" argument. However, you \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"must not\"), \" mutate the \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"previousData\"), \" object. Instead you must create a new object with your changes. Just like in a Redux reducer.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example:\")), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"export\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"default\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"graphql\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"\\n  gql\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token template-string\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\n  mutation ($text: String!) {\\n    submitComment(text: $text) { ... }\\n  }\\n\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token template-punctuation string\"\n  }), \"`\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n    options\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n      updateQueries\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function-variable function\"\n  }), \"Comments\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token parameter\"\n  }), \"previousData\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" mutationResult \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=>\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n          \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"const\"), \" newComment \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" mutationResult\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"data\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"submitComment\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n          \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// Note how we return a new copy of `previousData` instead of mutating\"), \"\\n          \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// it. This is just like a Redux reducer!\"), \"\\n          \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"return\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n            \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"...\"), \"previousData\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n            entry\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n              \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"...\"), \"previousData\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"entry\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n              comments\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"newComment\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"...\"), \"previousData\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"entry\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"comments\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n            \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n          \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"MyComponent\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"h2\", {\n    \"id\": \"withapollocomponent\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#withapollocomponent\",\n    \"aria-label\": \"withapollocomponent permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"code\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"withApollo(component)\")), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"import\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" withApollo \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"from\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"'@apollo/react-hoc'\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"A simple enhancer which provides direct access to your \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/apollo-client/api/apollo-client/\"\n  }), mdx(\"code\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"ApolloClient\")), \" instance. This is useful if you want to do custom logic with Apollo. Such as calling one-off queries. By calling this function with the component you want to enhance, \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"withApollo()\"), \" will create a new component which passes in an instance of \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"ApolloClient\"), \" as a \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"client\"), \" prop.\"), mdx(\"p\", null, \"If you are wondering when to use \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"withApollo()\"), \" and when to use \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#graphqlquery-configcomponent\"\n  }), mdx(\"code\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"graphql()\")), \" the answer is that most of the time you will want to use \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"graphql()\"), \". \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"graphql()\"), \" provides many of the advanced features you need to work with your GraphQL data. You should only use \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"withApollo()\"), \" if you want the GraphQL client without any of the other features.\"), mdx(\"p\", null, \"This will only be able to provide access to your client if there is an \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/apollo-client/api/react-common/#apolloprovider\"\n  }), mdx(\"code\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"<ApolloProvider/>\")), \" component higher up in your tree to actually provide the client.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example:\")), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-js line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"function\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"MyComponent\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token parameter\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" client \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n  console\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"log\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"client\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"export\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"default\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"withApollo\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"MyComponent\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"h3\", {\n    \"id\": \"apolloprovider\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#apolloprovider\",\n    \"aria-label\": \"apolloprovider permalink\",\n    \"className\": \"anchor\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"code\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"ApolloProvider\")), mdx(ApolloProvider, {\n    mdxType: \"ApolloProvider\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"7e4a7638-e5ee-5789-85e8-aeac3c9b1041","versionDifference":0,"versionBasePath":"/v2.6","sidebarContents":[{"title":null,"pages":[{"title":"Introduction","path":"/"},{"title":"Why Apollo Client?","path":"/why-apollo/"},{"title":"Get started","path":"/get-started/"}]},{"title":"Fetching data","pages":[{"title":"Queries","path":"/data/queries/"},{"title":"Mutations","path":"/data/mutations/"},{"title":"Local state management","path":"/data/local-state/"},{"title":"Subscriptions","path":"/data/subscriptions/"},{"title":"Pagination","path":"/data/pagination/"},{"title":"Using fragments","path":"/data/fragments/"},{"title":"Error handling","path":"/data/error-handling/"}]},{"title":"Caching","pages":[{"title":"Configuring the cache","path":"/caching/cache-configuration/"},{"title":"Interacting with cached data","path":"/caching/cache-interaction/"}]},{"title":"Development & Testing","pages":[{"title":"Using Apollo with TypeScript","path":"/development-testing/static-typing/"},{"title":"Testing React components","path":"/development-testing/testing/"},{"title":"Mocking new schema capabilities","path":"/development-testing/client-schema-mocking/"},{"title":"Developer tools","path":"/development-testing/developer-tooling/"}]},{"title":"Performance","pages":[{"title":"Improving performance","path":"/performance/performance/"},{"title":"Optimistic UI","path":"/performance/optimistic-ui/"},{"title":"Server-side rendering","path":"/performance/server-side-rendering/"},{"title":"Compiling queries with Babel","path":"/performance/babel/"}]},{"title":"Integrations","pages":[{"title":"View integrations","path":"/integrations/integrations/"},{"title":"Integrating with React Native","path":"/integrations/react-native/"},{"title":"Integrating with Meteor","path":"/integrations/meteor/"},{"title":"Loading queries with Webpack","path":"/integrations/webpack/"}]},{"title":"Networking","pages":[{"title":"Network layer (Apollo Link)","path":"/networking/network-layer/"},{"title":"Authentication","path":"/networking/authentication/"}]},{"title":"API Reference","pages":[{"title":"class ApolloClient","path":"/api/apollo-client/"},{"title":"@apollo/react-hooks","path":"/api/react-hooks/"},{"title":"@apollo/react-ssr","path":"/api/react-ssr/"},{"title":"@apollo/react-testing","path":"/api/react-testing/"},{"title":"@apollo/react-components","path":"/api/react-components/"},{"title":"@apollo/react-hoc","path":"/api/react-hoc/"},{"title":"@apollo/react-common","path":"/api/react-common/"}]},{"title":"Migrating","pages":[{"title":"Hooks migration guide","path":"/migrating/hooks-migration/"},{"title":"Apollo Boost migration","path":"/migrating/boost-migration/"}]}],"githubUrl":"https://github.com/apollographql/apollo-client/tree/master/docs/source/api/react-hoc.mdx","spectrumUrl":"https://spectrum.chat/apollo/apollo-client","typescriptApiBox":{"data":{"id":0,"name":"apollo-client","kind":0,"flags":{},"children":[{"id":300,"name":"\"ApolloClient\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"/home/timoaho/workspace/apollo-client/packages/apollo-client/src/ApolloClient.ts","children":[{"id":305,"name":"ApolloClient","kind":128,"kindString":"Class","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"This is the primary Apollo Client class. It is used to send GraphQL documents (i.e. queries\nand mutations) to a GraphQL spec-compliant server over a {@link NetworkInterface} instance,\nreceive results from the server and cache the results in a store. It also delivers updates\nto GraphQL queries through {@link Observable} instances."},"typeParameter":[{"id":306,"name":"TCacheShape","kind":131072,"kindString":"Type parameter","flags":{}}],"children":[{"id":324,"name":"constructor","kind":512,"kindString":"Constructor","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"Constructs an instance of {@link ApolloClient}."},"signatures":[{"id":325,"name":"new ApolloClient","kind":16384,"kindString":"Constructor signature","flags":{},"comment":{"shortText":"Constructs an instance of {@link ApolloClient}."},"parameters":[{"id":326,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ApolloClientOptions","id":424,"typeArguments":[{"type":"typeParameter","name":"TCacheShape"}]}}],"type":{"type":"reference","name":"ApolloClient","id":305}}],"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":78,"character":46}]},{"id":309,"name":"cache","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":67,"character":14}],"type":{"type":"reference","name":"ApolloCache","typeArguments":[{"type":"typeParameter","name":"TCacheShape"}]}},{"id":320,"name":"clearStoreCallbacks","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":77,"character":29}],"type":{"type":"reference","name":"Array","typeArguments":[{"type":"reflection","declaration":{"id":321,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":322,"name":"__call","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"intrinsic","name":"any"}]}}],"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":77,"character":37}]}}]},"defaultValue":" []"},{"id":314,"name":"defaultOptions","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":72,"character":23}],"type":{"type":"reference","name":"DefaultOptions","id":301}},{"id":316,"name":"devToolsHookCb","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":75,"character":24}],"type":{"type":"reference","name":"Function"}},{"id":311,"name":"disableNetworkFetches","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":69,"character":30}],"type":{"type":"intrinsic","name":"boolean"}},{"id":307,"name":"link","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":65,"character":13}],"type":{"type":"reference","name":"ApolloLink"}},{"id":323,"name":"localState","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":78,"character":20}],"type":{"type":"reference","name":"LocalState","id":445,"typeArguments":[{"type":"typeParameter","name":"TCacheShape"}]}},{"id":313,"name":"queryDeduplication","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":71,"character":27}],"type":{"type":"intrinsic","name":"boolean"}},{"id":310,"name":"queryManager","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":68,"character":30}],"type":{"type":"reference","name":"QueryManager","id":775,"typeArguments":[{"type":"typeParameter","name":"TCacheShape"}]}},{"id":317,"name":"resetStoreCallbacks","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":76,"character":29}],"type":{"type":"reference","name":"Array","typeArguments":[{"type":"reflection","declaration":{"id":318,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":319,"name":"__call","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"intrinsic","name":"any"}]}}],"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":76,"character":37}]}}]},"defaultValue":" []"},{"id":308,"name":"store","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":66,"character":14}],"type":{"type":"reference","name":"DataStore","id":645,"typeArguments":[{"type":"typeParameter","name":"TCacheShape"}]}},{"id":315,"name":"typeDefs","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":73,"character":26}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"},{"type":"reference","name":"DocumentNode"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}},{"type":"array","elementType":{"type":"reference","name":"DocumentNode"}}]}},{"id":312,"name":"version","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":70,"character":16}],"type":{"type":"intrinsic","name":"string"}},{"id":375,"name":"__actionHookForDevTools","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":376,"name":"__actionHookForDevTools","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":377,"name":"cb","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":378,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExported":true},"signatures":[{"id":379,"name":"__call","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"any"}}],"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":448,"character":36}]}}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":448,"character":32}]},{"id":380,"name":"__requestRaw","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":381,"name":"__requestRaw","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":382,"name":"payload","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GraphQLRequest"}}],"type":{"type":"reference","name":"Observable","id":14,"typeArguments":[{"type":"reference","name":"ExecutionResult"}]}}],"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":452,"character":21}]},{"id":412,"name":"addResolvers","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":413,"name":"addResolvers","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Add additional local resolvers."},"parameters":[{"id":414,"name":"resolvers","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"Resolvers","id":591},{"type":"array","elementType":{"type":"reference","name":"Resolvers","id":591}}]}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":563,"character":21}]},{"id":387,"name":"clearStore","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":388,"name":"clearStore","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Remove all data from the store. Unlike `resetStore`, `clearStore` will\nnot refetch any active queries."},"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"array","elementType":{"type":"intrinsic","name":"any"}}]}}],"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":494,"character":19}]},{"id":406,"name":"extract","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":407,"name":"extract","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Exposes the cache's complete state, in a serializable format for later restoration."},"parameters":[{"id":408,"name":"optimistic","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"false"},{"type":"intrinsic","name":"true"}]}}],"type":{"type":"typeParameter","name":"TCacheShape"}}],"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":545,"character":16}]},{"id":418,"name":"getResolvers","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":419,"name":"getResolvers","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Get all registered local resolvers."},"type":{"type":"reference","name":"Resolvers","id":591}}],"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":577,"character":21}]},{"id":383,"name":"initQueryManager","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":384,"name":"initQueryManager","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"This initializes the query manager that tracks queries and the cache"},"type":{"type":"reference","name":"QueryManager","id":775,"typeArguments":[{"type":"typeParameter","name":"TCacheShape"}]}}],"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":459,"character":25}]},{"id":339,"name":"mutate","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":340,"name":"mutate","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"This resolves a single mutation according to the options specified and returns a\n{@link Promise} which is either resolved with the resulting data or rejected with an\nerror.","text":"It takes options as an object with the following keys and values:\n"},"typeParameter":[{"id":341,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}},{"id":342,"name":"TVariables","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":343,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"MutationOptions","id":244,"typeArguments":[{"type":"typeParameter","name":"T"},{"type":"typeParameter","name":"TVariables"}]}}],"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"reference","name":"FetchResult","typeArguments":[{"type":"typeParameter","name":"T"}]}]}}],"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":338,"character":15}]},{"id":396,"name":"onClearStore","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":397,"name":"onClearStore","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Allows callbacks to be registered that are executed when the store is\ncleared. `onClearStore` returns an unsubscribe function that can be used\nto remove registered callbacks."},"parameters":[{"id":398,"name":"cb","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":399,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExported":true},"signatures":[{"id":400,"name":"__call","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"intrinsic","name":"any"}]}}],"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":517,"character":25}]}}}],"type":{"type":"reflection","declaration":{"id":401,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExported":true},"signatures":[{"id":402,"name":"__call","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":517,"character":46}]}}}],"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":517,"character":21}]},{"id":389,"name":"onResetStore","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":390,"name":"onResetStore","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Allows callbacks to be registered that are executed when the store is\nreset. `onResetStore` returns an unsubscribe function that can be used\nto remove registered callbacks."},"parameters":[{"id":391,"name":"cb","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":392,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExported":true},"signatures":[{"id":393,"name":"__call","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"intrinsic","name":"any"}]}}],"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":505,"character":25}]}}}],"type":{"type":"reflection","declaration":{"id":394,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExported":true},"signatures":[{"id":395,"name":"__call","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":505,"character":46}]}}}],"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":505,"character":21}]},{"id":334,"name":"query","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":335,"name":"query","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"This resolves a single query according to the options specified and\nreturns a {@link Promise} which is either resolved with the resulting data\nor rejected with an error."},"typeParameter":[{"id":336,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}},{"id":337,"name":"TVariables","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":338,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"An object of type {@link QueryOptions} that allows us to\ndescribe how this query should be treated e.g. whether it should hit the\nserver at all or just resolve from the cache, etc.\n"},"type":{"type":"reference","name":"QueryOptions","id":185,"typeArguments":[{"type":"typeParameter","name":"TVariables"}]}}],"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"reference","name":"ApolloQueryResult","id":615,"typeArguments":[{"type":"typeParameter","name":"T"}]}]}}],"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":307,"character":14}]},{"id":403,"name":"reFetchObservableQueries","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":404,"name":"reFetchObservableQueries","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Refetches all of your active queries.","text":"`reFetchObservableQueries()` is useful if you want to bring the client back to proper state in case of a network outage\n\nIt is important to remember that `reFetchObservableQueries()` *will* refetch any active\nqueries. This means that any components that might be mounted will execute\ntheir queries again using your network interface. If you do not want to\nre-execute any queries then you should make sure to stop watching any\nactive queries.\nTakes optional parameter `includeStandby` which will include queries in standby-mode when refetching.\n"},"parameters":[{"id":405,"name":"includeStandby","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"false"},{"type":"intrinsic","name":"true"}]}}],"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"ApolloQueryResult","id":615,"typeArguments":[{"type":"intrinsic","name":"any"}]}}]}}],"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":536,"character":33}]},{"id":355,"name":"readFragment","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":356,"name":"readFragment","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Tries to read some data from the store in the shape of the provided\nGraphQL fragment without making a network request. This method will read a\nGraphQL fragment from any arbitrary id that is currently cached, unlike\n`readQuery` which will only read from the root query.","text":"You must pass in a GraphQL document with a single fragment or a document\nwith multiple fragments that represent what you are reading. If you pass\nin a document with multiple fragments then you must also specify a\n`fragmentName`.\n"},"typeParameter":[{"id":357,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}},{"id":358,"name":"TVariables","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":359,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Fragment","typeArguments":[{"type":"typeParameter","name":"TVariables"}]}},{"id":360,"name":"optimistic","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Set to `true` to allow `readFragment` to return\noptimistic results. Is `false` by default.\n"},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"union","types":[{"type":"typeParameter","name":"T"},{"type":"intrinsic","name":"null"}]}}],"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":391,"character":21}]},{"id":349,"name":"readQuery","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":350,"name":"readQuery","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Tries to read some data from the store in the shape of the provided\nGraphQL query without making a network request. This method will start at\nthe root query. To start at a specific id returned by `dataIdFromObject`\nuse `readFragment`."},"typeParameter":[{"id":351,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}},{"id":352,"name":"TVariables","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":353,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Query","typeArguments":[{"type":"typeParameter","name":"TVariables"}]}},{"id":354,"name":"optimistic","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Set to `true` to allow `readQuery` to return\noptimistic results. Is `false` by default.\n"},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"union","types":[{"type":"typeParameter","name":"T"},{"type":"intrinsic","name":"null"}]}}],"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":370,"character":18}]},{"id":385,"name":"resetStore","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":386,"name":"resetStore","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Resets your entire store by clearing out your cache and then re-executing\nall of your active queries. This makes it so that you may guarantee that\nthere is no data left in your store from a time before you called this\nmethod.","text":"`resetStore()` is useful when your user just logged out. You’ve removed the\nuser session, and you now want to make sure that any references to data you\nmight have fetched while the user session was active is gone.\n\nIt is important to remember that `resetStore()` *will* refetch any active\nqueries. This means that any components that might be mounted will execute\ntheir queries again using your network interface. If you do not want to\nre-execute any queries then you should make sure to stop watching any\nactive queries.\n"},"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"union","types":[{"type":"array","elementType":{"type":"reference","name":"ApolloQueryResult","id":615,"typeArguments":[{"type":"intrinsic","name":"any"}]}},{"type":"intrinsic","name":"null"}]}]}}],"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":483,"character":19}]},{"id":409,"name":"restore","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":410,"name":"restore","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Replaces existing state in the cache (if any) with the values expressed by\n`serializedState`.","text":"Called when hydrating a cache (server side rendering, or offline storage),\nand also (potentially) during hot reloads.\n"},"parameters":[{"id":411,"name":"serializedState","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"typeParameter","name":"TCacheShape"}}],"type":{"type":"reference","name":"ApolloCache","typeArguments":[{"type":"typeParameter","name":"TCacheShape"}]}}],"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":556,"character":16}]},{"id":420,"name":"setLocalStateFragmentMatcher","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":421,"name":"setLocalStateFragmentMatcher","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Set a custom local state fragment matcher."},"parameters":[{"id":422,"name":"fragmentMatcher","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"FragmentMatcher","id":564}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":584,"character":37}]},{"id":415,"name":"setResolvers","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":416,"name":"setResolvers","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Set (override existing) local resolvers."},"parameters":[{"id":417,"name":"resolvers","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"Resolvers","id":591},{"type":"array","elementType":{"type":"reference","name":"Resolvers","id":591}}]}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":570,"character":21}]},{"id":327,"name":"stop","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":328,"name":"stop","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Call this method to terminate any active client processes, making it safe\nto dispose of this `ApolloClient` instance."},"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":253,"character":13}]},{"id":344,"name":"subscribe","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":345,"name":"subscribe","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"This subscribes to a graphql subscription according to the options specified and returns an\n{@link Observable} which either emits received data or an error."},"typeParameter":[{"id":346,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}},{"id":347,"name":"TVariables","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":348,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"SubscriptionOptions","id":223,"typeArguments":[{"type":"typeParameter","name":"TVariables"}]}}],"type":{"type":"reference","name":"Observable","id":14,"typeArguments":[{"type":"reference","name":"FetchResult","typeArguments":[{"type":"typeParameter","name":"T"}]}]}}],"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":355,"character":18}]},{"id":329,"name":"watchQuery","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":330,"name":"watchQuery","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"This watches the cache store of the query according to the options specified and\nreturns an {@link ObservableQuery}. We can subscribe to this {@link ObservableQuery} and\nreceive updated results through a GraphQL observer when the cache store changes.\n<p /><p />\nNote that this method is not an implementation of GraphQL subscriptions. Rather,\nit uses Apollo's store in order to reactively deliver updates to your query results.\n<p /><p />\nFor example, suppose you call watchQuery on a GraphQL query that fetches a person's\nfirst and last name and this person has a particular object identifer, provided by\ndataIdFromObject. Later, a different query fetches that same person's\nfirst and last name and the first name has now changed. Then, any observers associated\nwith the results of the first query will be updated with a new result object.\n<p /><p />\nNote that if the cache does not change, the subscriber will *not* be notified.\n<p /><p />\nSee [here](https://medium.com/apollo-stack/the-concepts-of-graphql-bc68bd819be3#.3mb0cbcmc) for\na description of store reactivity."},"typeParameter":[{"id":331,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}},{"id":332,"name":"TVariables","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":333,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"WatchQueryOptions","id":205,"typeArguments":[{"type":"typeParameter","name":"TVariables"}]}}],"type":{"type":"reference","name":"ObservableQuery","id":1066,"typeArguments":[{"type":"typeParameter","name":"T"},{"type":"typeParameter","name":"TVariables"}]}}],"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":276,"character":19}]},{"id":371,"name":"writeData","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":372,"name":"writeData","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Sugar for writeQuery & writeFragment\nThis method will construct a query from the data object passed in.\nIf no id is supplied, writeData will write the data to the root.\nIf an id is supplied, writeData will write a fragment to the object\nspecified by the id in the store.","text":"Since you aren't passing in a query to check the shape of the data,\nyou must pass in an object that conforms to the shape of valid GraphQL data.\n"},"typeParameter":[{"id":373,"name":"TData","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":374,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"WriteDataOptions","typeArguments":[{"type":"typeParameter","name":"TData"}]}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":440,"character":18}]},{"id":366,"name":"writeFragment","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":367,"name":"writeFragment","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Writes some data in the shape of the provided GraphQL fragment directly to\nthe store. This method will write to a GraphQL fragment from any arbitrary\nid that is currently cached, unlike `writeQuery` which will only write\nfrom the root query.","text":"You must pass in a GraphQL document with a single fragment or a document\nwith multiple fragments that represent what you are writing. If you pass\nin a document with multiple fragments then you must also specify a\n`fragmentName`.\n"},"typeParameter":[{"id":368,"name":"TData","kind":131072,"kindString":"Type parameter","flags":{}},{"id":369,"name":"TVariables","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":370,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"WriteFragmentOptions","typeArguments":[{"type":"typeParameter","name":"TData"},{"type":"typeParameter","name":"TVariables"}]}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":422,"character":22}]},{"id":361,"name":"writeQuery","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":362,"name":"writeQuery","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Writes some data in the shape of the provided GraphQL query directly to\nthe store. This method will start at the root query. To start at a\nspecific id returned by `dataIdFromObject` then use `writeFragment`."},"typeParameter":[{"id":363,"name":"TData","kind":131072,"kindString":"Type parameter","flags":{}},{"id":364,"name":"TVariables","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":365,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"WriteQueryOptions","typeArguments":[{"type":"typeParameter","name":"TData"},{"type":"typeParameter","name":"TVariables"}]}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":403,"character":19}]}],"groups":[{"title":"Constructors","kind":512,"children":[324]},{"title":"Properties","kind":1024,"children":[309,320,314,316,311,307,323,313,310,317,308,315,312]},{"title":"Methods","kind":2048,"children":[375,380,412,387,406,418,383,339,396,389,334,403,355,349,385,409,420,415,327,344,329,371,366,361]}],"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":64,"character":33}],"implementedTypes":[{"type":"reference","name":"DataProxy"}]},{"id":301,"name":"DefaultOptions","kind":256,"kindString":"Interface","flags":{"isExported":true,"isExternal":true},"children":[{"id":304,"name":"mutate","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":37,"character":8}],"type":{"type":"reference","name":"Partial","typeArguments":[{"type":"reference","name":"MutationOptions","id":244}]}},{"id":303,"name":"query","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":36,"character":7}],"type":{"type":"reference","name":"Partial","typeArguments":[{"type":"reference","name":"QueryOptions","id":185}]}},{"id":302,"name":"watchQuery","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":35,"character":12}],"type":{"type":"reference","name":"Partial","typeArguments":[{"type":"reference","name":"WatchQueryOptions","id":205}]}}],"groups":[{"title":"Properties","kind":1024,"children":[304,303,302]}],"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":34,"character":31}]},{"id":424,"name":"ApolloClientOptions","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"typeParameter":[{"id":425,"name":"TCacheShape","kind":131072,"kindString":"Type parameter","flags":{}}],"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":42,"character":31}],"type":{"type":"reflection","declaration":{"id":426,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":434,"name":"assumeImmutableResults","kind":32,"kindString":"Variable","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":50,"character":24}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"false"},{"type":"intrinsic","name":"true"}]}},{"id":428,"name":"cache","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":44,"character":7}],"type":{"type":"reference","name":"ApolloCache","typeArguments":[{"type":"typeParameter","name":"TCacheShape"}]}},{"id":431,"name":"connectToDevTools","kind":32,"kindString":"Variable","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":47,"character":19}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"false"},{"type":"intrinsic","name":"true"}]}},{"id":433,"name":"defaultOptions","kind":32,"kindString":"Variable","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":49,"character":16}],"type":{"type":"reference","name":"DefaultOptions","id":301}},{"id":437,"name":"fragmentMatcher","kind":32,"kindString":"Variable","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":53,"character":17}],"type":{"type":"reference","name":"FragmentMatcher","id":564}},{"id":427,"name":"link","kind":32,"kindString":"Variable","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":43,"character":6}],"type":{"type":"reference","name":"ApolloLink"}},{"id":438,"name":"name","kind":32,"kindString":"Variable","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":54,"character":6}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]}},{"id":432,"name":"queryDeduplication","kind":32,"kindString":"Variable","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":48,"character":20}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"false"},{"type":"intrinsic","name":"true"}]}},{"id":435,"name":"resolvers","kind":32,"kindString":"Variable","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":51,"character":11}],"type":{"type":"union","types":[{"type":"reference","name":"Resolvers","id":591},{"type":"array","elementType":{"type":"reference","name":"Resolvers","id":591}}]}},{"id":429,"name":"ssrForceFetchDelay","kind":32,"kindString":"Variable","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":45,"character":20}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"number"}]}},{"id":430,"name":"ssrMode","kind":32,"kindString":"Variable","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":46,"character":9}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"false"},{"type":"intrinsic","name":"true"}]}},{"id":436,"name":"typeDefs","kind":32,"kindString":"Variable","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":52,"character":10}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}},{"type":"reference","name":"DocumentNode"},{"type":"array","elementType":{"type":"reference","name":"DocumentNode"}}]}},{"id":439,"name":"version","kind":32,"kindString":"Variable","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":55,"character":9}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]}}],"groups":[{"title":"Variables","kind":32,"children":[434,428,431,433,437,427,438,432,435,429,430,436,439]}],"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":42,"character":46}]}}},{"id":423,"name":"hasSuggestedDevtools","kind":32,"kindString":"Variable","flags":{"isExternal":true,"isLet":true},"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":40,"character":24}],"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"groups":[{"title":"Classes","kind":128,"children":[305]},{"title":"Interfaces","kind":256,"children":[301]},{"title":"Type aliases","kind":4194304,"children":[424]},{"title":"Variables","kind":32,"children":[423]}],"sources":[{"fileName":"packages/apollo-client/src/ApolloClient.ts","line":1,"character":0}]},{"id":444,"name":"\"core/LocalState\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"/home/timoaho/workspace/apollo-client/packages/apollo-client/src/core/LocalState.ts","children":[{"id":445,"name":"LocalState","kind":128,"kindString":"Class","flags":{"isExported":true,"isExternal":true},"typeParameter":[{"id":446,"name":"TCacheShape","kind":131072,"kindString":"Type parameter","flags":{}}],"children":[{"id":451,"name":"constructor","kind":512,"kindString":"Constructor","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":452,"name":"new LocalState","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":453,"name":"__namedParameters","kind":32768,"kindString":"Parameter","flags":{},"originalName":"__0","type":{"type":"reflection","declaration":{"id":454,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":455,"name":"cache","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":80,"character":9}],"type":{"type":"reference","name":"ApolloCache","typeArguments":[{"type":"unknown","name":"TCacheShape"}]}},{"id":456,"name":"client","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":81,"character":10}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","name":"ApolloClient","id":305,"typeArguments":[{"type":"unknown","name":"TCacheShape"}]}]}},{"id":458,"name":"fragmentMatcher","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":83,"character":19}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reflection","declaration":{"id":459,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":460,"name":"__call","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":461,"name":"rootValue","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":462,"name":"typeCondition","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":463,"name":"context","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"boolean"}}]}}]}},{"id":457,"name":"resolvers","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":82,"character":13}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","name":"Resolvers","id":591},{"type":"array","elementType":{"type":"reference","name":"Resolvers","id":591}}]}}],"groups":[{"title":"Variables","kind":32,"children":[455,456,458,457]}],"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":79,"character":14}]}}}],"type":{"type":"reference","name":"LocalState","id":445}}],"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":77,"character":43}]},{"id":447,"name":"cache","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":74,"character":15}],"type":{"type":"reference","name":"ApolloCache","typeArguments":[{"type":"typeParameter","name":"TCacheShape"}]}},{"id":448,"name":"client","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":75,"character":16}],"type":{"type":"reference","name":"ApolloClient","id":305,"typeArguments":[{"type":"typeParameter","name":"TCacheShape"}]}},{"id":450,"name":"fragmentMatcher","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":77,"character":25}],"type":{"type":"reference","name":"FragmentMatcher","id":564}},{"id":449,"name":"resolvers","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":76,"character":19}],"type":{"type":"reference","name":"Resolvers","id":591}},{"id":507,"name":"addExportedVariables","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":508,"name":"addExportedVariables","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":509,"name":"document","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"DocumentNode"}},{"id":510,"name":"variables","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"OperationVariables","id":603},"defaultValue":" {}"},{"id":511,"name":"context","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":512,"name":"__type","kind":65536,"kindString":"Type literal","flags":{}}},"defaultValue":" {}"}],"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"reflection","declaration":{"id":513,"name":"__type","kind":65536,"kindString":"Type literal","flags":{}}}]}}],"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":209,"character":35}]},{"id":464,"name":"addResolvers","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":465,"name":"addResolvers","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":466,"name":"resolvers","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"Resolvers","id":591},{"type":"array","elementType":{"type":"reference","name":"Resolvers","id":591}}]}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":100,"character":21}]},{"id":517,"name":"buildRootValueFromCache","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":518,"name":"buildRootValueFromCache","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":519,"name":"document","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"DocumentNode"}},{"id":520,"name":"variables","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","name":"Record","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}]}}],"type":{"type":"intrinsic","name":"unknown"}}],"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":254,"character":33}]},{"id":489,"name":"clientQuery","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":490,"name":"clientQuery","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":491,"name":"document","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"DocumentNode"}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"null"},{"type":"reference","name":"DocumentNode"}]}}],"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":164,"character":20}]},{"id":487,"name":"getFragmentMatcher","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":488,"name":"getFragmentMatcher","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","name":"FragmentMatcher","id":564}}],"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":158,"character":27}]},{"id":470,"name":"getResolvers","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":471,"name":"getResolvers","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","name":"Resolvers","id":591}}],"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":116,"character":21}]},{"id":495,"name":"prepareContext","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":496,"name":"prepareContext","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":497,"name":"context","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":498,"name":"__type","kind":65536,"kindString":"Type literal","flags":{}}},"defaultValue":" {}"}],"type":{"type":"reflection","declaration":{"id":499,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":500,"name":"cache","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":189,"character":11}],"type":{"type":"reference","name":"ApolloCache","typeArguments":[{"type":"unknown","name":"TCacheShape"}]}},{"id":501,"name":"getCacheKey","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":502,"name":"getCacheKey","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":503,"name":"obj","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":504,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":505,"name":"__typename","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":191,"character":37}],"type":{"type":"intrinsic","name":"string"}},{"id":506,"name":"id","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":191,"character":49}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}}],"groups":[{"title":"Variables","kind":32,"children":[505,506]}],"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":191,"character":24}]}}}],"type":{"type":"intrinsic","name":"any"}}],"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":191,"character":17}]}],"groups":[{"title":"Variables","kind":32,"children":[500]},{"title":"Functions","kind":64,"children":[501]}]}}}],"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":184,"character":23}]},{"id":521,"name":"resolveDocument","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":522,"name":"resolveDocument","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":523,"name":"TData","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":524,"name":"document","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"DocumentNode"}},{"id":525,"name":"rootValue","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"typeParameter","name":"TData"}},{"id":526,"name":"context","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"},"defaultValue":" {}"},{"id":527,"name":"variables","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"VariableMap","id":560},"defaultValue":" {}"},{"id":528,"name":"fragmentMatcher","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"FragmentMatcher","id":564},"defaultValue":" () => true"},{"id":529,"name":"onlyRunForcedResolvers","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"reflection","declaration":{"id":530,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":532,"name":"exportedVariables","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":306,"character":23}],"type":{"type":"reflection","declaration":{"id":533,"name":"__type","kind":65536,"kindString":"Type literal","flags":{}}},"defaultValue":" execContext.exportedVariables"},{"id":531,"name":"result","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":305,"character":12}],"type":{"type":"unknown","name":"TData"}}],"groups":[{"title":"Variables","kind":32,"children":[532,531]}]}}]}}],"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":266,"character":31}]},{"id":540,"name":"resolveField","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":541,"name":"resolveField","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":542,"name":"field","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"FieldNode"}},{"id":543,"name":"rootValue","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":544,"name":"execContext","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ExecContext","id":570}}],"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"intrinsic","name":"any"}]}}],"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":365,"character":28}]},{"id":534,"name":"resolveSelectionSet","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":535,"name":"resolveSelectionSet","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":536,"name":"TData","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":537,"name":"selectionSet","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"SelectionSetNode"}},{"id":538,"name":"rootValue","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"typeParameter","name":"TData"}},{"id":539,"name":"execContext","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ExecContext","id":570}}],"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"unknown","name":"TData"}]}}],"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":310,"character":35}]},{"id":545,"name":"resolveSubSelectedArray","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":546,"name":"resolveSubSelectedArray","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":547,"name":"field","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"FieldNode"}},{"id":548,"name":"result","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}},{"id":549,"name":"execContext","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ExecContext","id":570}}],"type":{"type":"intrinsic","name":"any"}}],"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":443,"character":33}]},{"id":472,"name":"runResolvers","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":473,"name":"runResolvers","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":474,"name":"TData","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":475,"name":"__namedParameters","kind":32768,"kindString":"Parameter","flags":{},"originalName":"__0","type":{"type":"reflection","declaration":{"id":476,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":479,"name":"context","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":127,"character":11}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reflection","declaration":{"id":480,"name":"__type","kind":65536,"kindString":"Type literal","flags":{}}}]}},{"id":477,"name":"document","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":125,"character":12}],"type":{"type":"union","types":[{"type":"intrinsic","name":"null"},{"type":"reference","name":"DocumentNode"}]}},{"id":483,"name":"onlyRunForcedResolvers","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":129,"character":26}],"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"},{"id":478,"name":"remoteResult","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":126,"character":16}],"type":{"type":"reference","name":"ExecutionResult","typeArguments":[{"type":"unknown","name":"TData"}]}},{"id":481,"name":"variables","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":128,"character":13}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reflection","declaration":{"id":482,"name":"__type","kind":65536,"kindString":"Type literal","flags":{}}}]}}],"groups":[{"title":"Variables","kind":32,"children":[479,477,483,478,481]}],"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":124,"character":35}]}}}],"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"reference","name":"ExecutionResult","typeArguments":[{"type":"typeParameter","name":"TData"}]}]}}],"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":124,"character":27}]},{"id":492,"name":"serverQuery","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":493,"name":"serverQuery","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":494,"name":"document","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"DocumentNode"}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"null"},{"type":"reference","name":"DocumentNode"}]}}],"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":180,"character":20}]},{"id":484,"name":"setFragmentMatcher","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":485,"name":"setFragmentMatcher","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":486,"name":"fragmentMatcher","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"FragmentMatcher","id":564}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":154,"character":27}]},{"id":467,"name":"setResolvers","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":468,"name":"setResolvers","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":469,"name":"resolvers","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"Resolvers","id":591},{"type":"array","elementType":{"type":"reference","name":"Resolvers","id":591}}]}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":111,"character":21}]},{"id":514,"name":"shouldForceResolvers","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":515,"name":"shouldForceResolvers","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":516,"name":"document","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ASTNode"}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":231,"character":29}]}],"groups":[{"title":"Constructors","kind":512,"children":[451]},{"title":"Properties","kind":1024,"children":[447,448,450,449]},{"title":"Methods","kind":2048,"children":[507,464,517,489,487,470,495,521,540,534,545,472,492,484,467,514]}],"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":73,"character":23}]},{"id":570,"name":"ExecContext","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":56,"character":23}],"type":{"type":"reflection","declaration":{"id":571,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":573,"name":"context","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":58,"character":9}],"type":{"type":"intrinsic","name":"any"}},{"id":576,"name":"defaultOperationType","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":61,"character":22}],"type":{"type":"intrinsic","name":"string"}},{"id":577,"name":"exportedVariables","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":62,"character":19}],"type":{"type":"reference","name":"Record","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}]}},{"id":572,"name":"fragmentMap","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":57,"character":13}],"type":{"type":"reference","name":"FragmentMap"}},{"id":575,"name":"fragmentMatcher","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":60,"character":17}],"type":{"type":"reference","name":"FragmentMatcher","id":564}},{"id":578,"name":"onlyRunForcedResolvers","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":63,"character":24}],"type":{"type":"intrinsic","name":"boolean"}},{"id":574,"name":"variables","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":59,"character":11}],"type":{"type":"reference","name":"VariableMap","id":560}}],"groups":[{"title":"Variables","kind":32,"children":[573,576,577,572,575,578,574]}],"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":56,"character":25}]}}},{"id":564,"name":"FragmentMatcher","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":50,"character":27}],"type":{"type":"reflection","declaration":{"id":565,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":566,"name":"__call","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":567,"name":"rootValue","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":568,"name":"typeCondition","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":569,"name":"context","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":50,"character":29}]}}},{"id":579,"name":"LocalStateOptions","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"typeParameter":[{"id":580,"name":"TCacheShape","kind":131072,"kindString":"Type parameter","flags":{}}],"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":66,"character":29}],"type":{"type":"reflection","declaration":{"id":581,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":582,"name":"cache","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":67,"character":7}],"type":{"type":"reference","name":"ApolloCache","typeArguments":[{"type":"typeParameter","name":"TCacheShape"}]}},{"id":583,"name":"client","kind":32,"kindString":"Variable","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":68,"character":8}],"type":{"type":"reference","name":"ApolloClient","id":305,"typeArguments":[{"type":"typeParameter","name":"TCacheShape"}]}},{"id":585,"name":"fragmentMatcher","kind":32,"kindString":"Variable","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":70,"character":17}],"type":{"type":"reference","name":"FragmentMatcher","id":564}},{"id":584,"name":"resolvers","kind":32,"kindString":"Variable","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":69,"character":11}],"type":{"type":"union","types":[{"type":"reference","name":"Resolvers","id":591},{"type":"array","elementType":{"type":"reference","name":"Resolvers","id":591}}]}}],"groups":[{"title":"Variables","kind":32,"children":[582,583,585,584]}],"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":66,"character":44}]}}},{"id":550,"name":"Resolver","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":38,"character":20}],"type":{"type":"reflection","declaration":{"id":551,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":552,"name":"__call","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":553,"name":"rootValue","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"any"}},{"id":554,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"any"}},{"id":555,"name":"context","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"any"}},{"id":556,"name":"info","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reflection","declaration":{"id":557,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":558,"name":"field","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":43,"character":9}],"type":{"type":"reference","name":"FieldNode"}},{"id":559,"name":"fragmentMap","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":44,"character":15}],"type":{"type":"reference","name":"FragmentMap"}}],"groups":[{"title":"Variables","kind":32,"children":[558,559]}]}}]}}],"type":{"type":"intrinsic","name":"any"}}],"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":38,"character":22}]}}},{"id":560,"name":"VariableMap","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":48,"character":23}],"type":{"type":"reflection","declaration":{"id":561,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"indexSignature":[{"id":562,"name":"__index","kind":8192,"kindString":"Index signature","flags":{},"parameters":[{"id":563,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}],"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":48,"character":25}]}}}],"groups":[{"title":"Classes","kind":128,"children":[445]},{"title":"Type aliases","kind":4194304,"children":[570,564,579,550,560]}],"sources":[{"fileName":"packages/apollo-client/src/core/LocalState.ts","line":1,"character":0}]},{"id":1051,"name":"\"core/ObservableQuery\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"/home/timoaho/workspace/apollo-client/packages/apollo-client/src/core/ObservableQuery.ts","children":[{"id":1066,"name":"ObservableQuery","kind":128,"kindString":"Class","flags":{"isExported":true,"isExternal":true},"typeParameter":[{"id":1067,"name":"TData","kind":131072,"kindString":"Type parameter","flags":{}},{"id":1068,"name":"TVariables","kind":131072,"kindString":"Type parameter","flags":{}}],"children":[{"id":1087,"name":"constructor","kind":512,"kindString":"Constructor","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":1088,"name":"new ObservableQuery","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":1089,"name":"__namedParameters","kind":32768,"kindString":"Parameter","flags":{},"originalName":"__0","type":{"type":"reflection","declaration":{"id":1090,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1092,"name":"options","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":96,"character":11}],"type":{"type":"reference","name":"WatchQueryOptions","id":205,"typeArguments":[{"type":"unknown","name":"TVariables"}]}},{"id":1091,"name":"queryManager","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":95,"character":16}],"type":{"type":"reference","name":"QueryManager","id":775,"typeArguments":[{"type":"intrinsic","name":"any"}]}},{"id":1093,"name":"shouldSubscribe","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":97,"character":19}],"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"true"}],"groups":[{"title":"Variables","kind":32,"children":[1092,1091,1093]}],"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":94,"character":14}]}}}],"type":{"type":"reference","name":"ObservableQuery","id":1066}}],"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":92,"character":33}]},{"id":1074,"name":"isTornDown","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":85,"character":20}],"type":{"type":"intrinsic","name":"boolean"}},{"id":1086,"name":"lastError","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":92,"character":19}],"type":{"type":"reference","name":"ApolloError","id":99}},{"id":1084,"name":"lastResult","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":90,"character":20}],"type":{"type":"reference","name":"ApolloQueryResult","id":615,"typeArguments":[{"type":"typeParameter","name":"TData"}]}},{"id":1085,"name":"lastResultSnapshot","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":91,"character":28}],"type":{"type":"reference","name":"ApolloQueryResult","id":615,"typeArguments":[{"type":"typeParameter","name":"TData"}]}},{"id":1076,"name":"observers","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":87,"character":19}],"type":{"type":"reference","name":"Set","typeArguments":[{"type":"reference","name":"Observer","typeArguments":[{"type":"reflection","declaration":{"id":1077,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1078,"name":"data","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/types.ts","line":23,"character":6}],"type":{"type":"typeParameter","name":"T"}},{"id":1079,"name":"errors","kind":32,"kindString":"Variable","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/apollo-client/src/core/types.ts","line":24,"character":8}],"type":{"type":"reference","name":"ReadonlyArray","typeArguments":[{"type":"reference","name":"GraphQLError"}]}},{"id":1080,"name":"loading","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/types.ts","line":25,"character":9}],"type":{"type":"intrinsic","name":"boolean"}},{"id":1081,"name":"networkStatus","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/types.ts","line":26,"character":15}],"type":{"type":"reference","name":"NetworkStatus","id":2}},{"id":1082,"name":"stale","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/types.ts","line":27,"character":7}],"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Variables","kind":32,"children":[1078,1079,1080,1081,1082]}]}}]}]},"defaultValue":" new Set<Observer<ApolloQueryResult<TData>>>()"},{"id":1069,"name":"options","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":75,"character":16}],"type":{"type":"reference","name":"WatchQueryOptions","id":205,"typeArguments":[{"type":"typeParameter","name":"TVariables"}]}},{"id":1070,"name":"queryId","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":76,"character":25}],"type":{"type":"intrinsic","name":"string"}},{"id":1075,"name":"queryManager","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":86,"character":22}],"type":{"type":"reference","name":"QueryManager","id":775,"typeArguments":[{"type":"intrinsic","name":"any"}]}},{"id":1071,"name":"queryName","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isExported":true,"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":77,"character":27}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]}},{"id":1073,"name":"shouldSubscribe","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":84,"character":25}],"type":{"type":"intrinsic","name":"boolean"}},{"id":1083,"name":"subscriptions","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":88,"character":23}],"type":{"type":"reference","name":"Set","typeArguments":[{"type":"reference","name":"Subscription"}]},"defaultValue":" new Set<Subscription>()"},{"id":1072,"name":"variables","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isExported":true,"isExternal":true},"comment":{"shortText":"The current value of the variables for this query. Can change."},"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":82,"character":18}],"type":{"type":"typeParameter","name":"TVariables"}},{"id":1164,"name":"Observable","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/node_modules/zen-observable-ts/lib/zenObservable.d.ts","line":6,"character":31}],"type":{"type":"reflection","declaration":{"id":1165,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1166,"name":"constructor","kind":512,"kindString":"Constructor","flags":{"isExternal":true},"signatures":[{"id":1167,"name":"new __type","kind":16384,"kindString":"Constructor signature","flags":{},"typeParameter":[{"id":1168,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":1169,"name":"subscriber","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Subscriber","typeArguments":[{"type":"typeParameter","name":"T"}]}}],"type":{"type":"reference","name":"Observable","typeArguments":[{"type":"typeParameter","name":"T"}]}}],"sources":[{"fileName":"packages/apollo-client/node_modules/zen-observable-ts/lib/zenObservable.d.ts","line":6,"character":34}]},{"id":1170,"name":"from","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":1171,"name":"from","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":1172,"name":"R","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":1173,"name":"observable","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"Observable","typeArguments":[{"type":"typeParameter","name":"R"}]},{"type":"reference","name":"ObservableLike","typeArguments":[{"type":"typeParameter","name":"R"}]},{"type":"reference","name":"ArrayLike","typeArguments":[{"type":"typeParameter","name":"R"}]}]}}],"type":{"type":"reference","name":"Observable","typeArguments":[{"type":"typeParameter","name":"R"}]}}],"sources":[{"fileName":"packages/apollo-client/node_modules/zen-observable-ts/lib/zenObservable.d.ts","line":8,"character":8}]},{"id":1174,"name":"of","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":1175,"name":"of","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":1176,"name":"R","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":1177,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"reference","name":"Array","typeArguments":[{"type":"typeParameter","name":"R"}]}}],"type":{"type":"reference","name":"Observable","typeArguments":[{"type":"typeParameter","name":"R"}]}}],"sources":[{"fileName":"packages/apollo-client/node_modules/zen-observable-ts/lib/zenObservable.d.ts","line":9,"character":6}]}],"groups":[{"title":"Constructors","kind":512,"children":[1166]},{"title":"Functions","kind":64,"children":[1170,1174]}],"sources":[{"fileName":"packages/apollo-client/node_modules/zen-observable-ts/lib/zenObservable.d.ts","line":6,"character":32}]}}},{"id":1160,"name":"[$$observable]","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":1161,"name":"[$$observable]","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"unknown","name":"this"},"inheritedFrom":{"type":"reference","name":"Observable.[$$observable]","id":16}}],"sources":[{"fileName":"packages/apollo-client/src/util/Observable.ts","line":12,"character":23}],"inheritedFrom":{"type":"reference","name":"Observable.[$$observable]","id":16}},{"id":1162,"name":"['@@observable' as any]","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":1163,"name":"['@@observable' as any]","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"unknown","name":"this"},"inheritedFrom":{"type":"reference","name":"Observable.['@@observable' as any]","id":18}}],"sources":[{"fileName":"packages/apollo-client/src/util/Observable.ts","line":16,"character":32}],"inheritedFrom":{"type":"reference","name":"Observable.['@@observable' as any]","id":18}},{"id":1096,"name":"currentResult","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":1097,"name":"currentResult","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","name":"ApolloCurrentResult","id":1178,"typeArguments":[{"type":"typeParameter","name":"TData"}]}}],"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":156,"character":22}]},{"id":1114,"name":"fetchMore","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":1115,"name":"fetchMore","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":1116,"name":"K","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"typeOperator","operator":"keyof","target":{"type":"typeParameter","name":"TVariables"}}}],"parameters":[{"id":1117,"name":"fetchMoreOptions","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","name":"FetchMoreQueryOptions","id":217,"typeArguments":[{"type":"typeParameter","name":"TVariables"},{"type":"typeParameter","name":"K","constraint":{"type":"typeOperator","operator":"keyof","target":{"type":"typeParameter","name":"TVariables"}}}]},{"type":"reference","name":"FetchMoreOptions","id":1052,"typeArguments":[{"type":"typeParameter","name":"TData"},{"type":"typeParameter","name":"TVariables"}]}]}}],"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"reference","name":"ApolloQueryResult","id":615,"typeArguments":[{"type":"typeParameter","name":"TData"}]}]}}],"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":338,"character":18}]},{"id":1098,"name":"getCurrentResult","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":1099,"name":"getCurrentResult","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Return the result of the query from the local cache as well as some fetching status\n`loading` and `networkStatus` allow to know if a request is in flight\n`partial` lets you know if the result from the local cache is complete or partial","returns":"\n"},"type":{"type":"reference","name":"ApolloCurrentQueryResult","id":1187,"typeArguments":[{"type":"typeParameter","name":"TData"}]}}],"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":170,"character":25}]},{"id":1105,"name":"getLastError","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":1106,"name":"getLastError","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","name":"ApolloError","id":99}}],"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":272,"character":21}]},{"id":1103,"name":"getLastResult","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":1104,"name":"getLastResult","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","name":"ApolloQueryResult","id":615,"typeArguments":[{"type":"typeParameter","name":"TData"}]}}],"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":268,"character":22}]},{"id":1100,"name":"isDifferentFromLastResult","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":1101,"name":"isDifferentFromLastResult","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1102,"name":"newResult","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ApolloQueryResult","id":615,"typeArguments":[{"type":"typeParameter","name":"TData"}]}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":255,"character":34}]},{"id":1153,"name":"onSubscribe","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":1154,"name":"onSubscribe","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1155,"name":"observer","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Observer","typeArguments":[{"type":"reference","name":"ApolloQueryResult","id":615,"typeArguments":[{"type":"typeParameter","name":"TData"}]}]}}],"type":{"type":"reference","name":"(Anonymous function)"}}],"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":577,"character":21}]},{"id":1111,"name":"refetch","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":1112,"name":"refetch","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Update the variables of this observable query, and fetch the new results.\nThis method should be preferred over `setVariables` in most use cases."},"parameters":[{"id":1113,"name":"variables","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","name":"TVariables","id":1068}}],"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"reference","name":"ApolloQueryResult","id":615,"typeArguments":[{"type":"typeParameter","name":"TData"}]}]}}],"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":298,"character":16}]},{"id":1107,"name":"resetLastResults","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":1108,"name":"resetLastResults","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":276,"character":25}]},{"id":1109,"name":"resetQueryStoreErrors","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":1110,"name":"resetQueryStoreErrors","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":283,"character":30}]},{"id":1094,"name":"result","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":1095,"name":"result","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"reference","name":"ApolloQueryResult","id":615,"typeArguments":[{"type":"typeParameter","name":"TData"}]}]}}],"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":123,"character":15}]},{"id":1123,"name":"setOptions","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":1124,"name":"setOptions","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1125,"name":"opts","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"WatchQueryOptions","id":205}}],"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"union","types":[{"type":"reference","name":"ApolloQueryResult","id":615,"typeArguments":[{"type":"typeParameter","name":"TData"}]},{"type":"intrinsic","name":"void"}]}]}}],"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":438,"character":19}]},{"id":1156,"name":"setUpQuery","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":1157,"name":"setUpQuery","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":606,"character":20}]},{"id":1126,"name":"setVariables","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":1127,"name":"setVariables","kind":4096,"kindString":"Call signature","flags":{"isPrivate":true},"comment":{"shortText":"This is for *internal* use only. Most users should instead use `refetch`\nin order to be properly notified of results even when they come from cache.","text":"Update the variables of this observable query, and fetch the new results\nif they've changed. If you want to force new results, use `refetch`.\n\nNote: the `next` callback will *not* fire if the variables have not changed\nor if the result is coming from cache.\n\nNote: the promise will return the old results immediately if the variables\nhave not changed.\n\nNote: the promise will return null immediately if the query is not active\n(there are no subscribers).\n"},"parameters":[{"id":1128,"name":"variables","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"typeParameter","name":"TVariables"}},{"id":1129,"name":"tryFetch","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"},{"id":1130,"name":"fetchResults","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"true"}],"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"union","types":[{"type":"reference","name":"ApolloQueryResult","id":615,"typeArguments":[{"type":"typeParameter","name":"TData"}]},{"type":"intrinsic","name":"void"}]}]}}],"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":495,"character":21}]},{"id":1141,"name":"startPolling","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":1142,"name":"startPolling","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1143,"name":"pollInterval","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":562,"character":21}]},{"id":1139,"name":"stopPolling","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":1140,"name":"stopPolling","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":557,"character":20}]},{"id":1118,"name":"subscribeToMore","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":1119,"name":"subscribeToMore","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":1120,"name":"TSubscriptionData","kind":131072,"kindString":"Type parameter","flags":{}},{"id":1121,"name":"TSubscriptionVariables","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":1122,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"SubscribeToMoreOptions","id":279,"typeArguments":[{"type":"typeParameter","name":"TData"},{"type":"typeParameter","name":"TSubscriptionVariables"},{"type":"typeParameter","name":"TSubscriptionData"}]}}],"type":{"type":"reference","name":"(Anonymous function)"}}],"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":390,"character":24}]},{"id":1158,"name":"tearDownQuery","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":1159,"name":"tearDownQuery","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":670,"character":23}]},{"id":1144,"name":"updateLastResult","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":1145,"name":"updateLastResult","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1146,"name":"newResult","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ApolloQueryResult","id":615,"typeArguments":[{"type":"typeParameter","name":"TData"}]}}],"type":{"type":"reflection","declaration":{"id":1147,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1148,"name":"data","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/types.ts","line":23,"character":6}],"type":{"type":"typeParameter","name":"T"}},{"id":1149,"name":"errors","kind":32,"kindString":"Variable","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/apollo-client/src/core/types.ts","line":24,"character":8}],"type":{"type":"reference","name":"ReadonlyArray","typeArguments":[{"type":"reference","name":"GraphQLError"}]}},{"id":1150,"name":"loading","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/types.ts","line":25,"character":9}],"type":{"type":"intrinsic","name":"boolean"}},{"id":1151,"name":"networkStatus","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/types.ts","line":26,"character":15}],"type":{"type":"reference","name":"NetworkStatus","id":2}},{"id":1152,"name":"stale","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/types.ts","line":27,"character":7}],"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Variables","kind":32,"children":[1148,1149,1150,1151,1152]}]}}}],"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":568,"character":26}]},{"id":1131,"name":"updateQuery","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":1132,"name":"updateQuery","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":1133,"name":"TVars","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":1134,"name":"mapFn","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":1135,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":1136,"name":"__call","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1137,"name":"previousQueryResult","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"typeParameter","name":"TData"}},{"id":1138,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"UpdateQueryOptions","id":1063,"typeArguments":[{"type":"typeParameter","name":"TVars"}]}}],"type":{"type":"typeParameter","name":"TData"}}],"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":529,"character":10}]}}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":528,"character":20}]}],"groups":[{"title":"Constructors","kind":512,"children":[1087]},{"title":"Properties","kind":1024,"children":[1074,1086,1084,1085,1076,1069,1070,1075,1071,1073,1083,1072,1164]},{"title":"Methods","kind":2048,"children":[1160,1162,1096,1114,1098,1105,1103,1100,1153,1111,1107,1109,1094,1123,1156,1126,1141,1139,1118,1158,1144,1131]}],"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":71,"character":28}],"extendedTypes":[{"type":"reference","name":"Observable","id":14,"typeArguments":[{"type":"reference","name":"ApolloQueryResult","id":615,"typeArguments":[{"type":"typeParameter","name":"TData"}]}]}]},{"id":1052,"name":"FetchMoreOptions","kind":256,"kindString":"Interface","flags":{"isExported":true,"isExternal":true},"typeParameter":[{"id":1053,"name":"TData","kind":131072,"kindString":"Type parameter","flags":{}},{"id":1054,"name":"TVariables","kind":131072,"kindString":"Type parameter","flags":{}}],"children":[{"id":1055,"name":"updateQuery","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":50,"character":13}],"type":{"type":"reflection","declaration":{"id":1056,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":1057,"name":"__call","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1058,"name":"previousQueryResult","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"typeParameter","name":"TData"}},{"id":1059,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":1060,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1061,"name":"fetchMoreResult","kind":32,"kindString":"Variable","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":53,"character":21}],"type":{"type":"reference","name":"TData","id":1053}},{"id":1062,"name":"variables","kind":32,"kindString":"Variable","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":54,"character":15}],"type":{"type":"reference","name":"TVariables","id":1054}}],"groups":[{"title":"Variables","kind":32,"children":[1061,1062]}],"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":52,"character":12}]}}}],"type":{"type":"typeParameter","name":"TData"}}],"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":50,"character":14}]}}}],"groups":[{"title":"Properties","kind":1024,"children":[1055]}],"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":46,"character":33}]},{"id":1063,"name":"UpdateQueryOptions","kind":256,"kindString":"Interface","flags":{"isExported":true,"isExternal":true},"typeParameter":[{"id":1064,"name":"TVariables","kind":131072,"kindString":"Type parameter","flags":{}}],"children":[{"id":1065,"name":"variables","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":60,"character":11}],"type":{"type":"reference","name":"TVariables","id":1064}}],"groups":[{"title":"Properties","kind":1024,"children":[1065]}],"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":59,"character":35}]},{"id":1187,"name":"ApolloCurrentQueryResult","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"typeParameter":[{"id":1188,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":36,"character":36}],"type":{"type":"reflection","declaration":{"id":1189,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1190,"name":"data","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":37,"character":6}],"type":{"type":"union","types":[{"type":"typeParameter","name":"T"},{"type":"intrinsic","name":"undefined"}]}},{"id":1194,"name":"error","kind":32,"kindString":"Variable","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":41,"character":7}],"type":{"type":"reference","name":"ApolloError","id":99}},{"id":1191,"name":"errors","kind":32,"kindString":"Variable","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":38,"character":8}],"type":{"type":"reference","name":"ReadonlyArray","typeArguments":[{"type":"reference","name":"GraphQLError"}]}},{"id":1192,"name":"loading","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":39,"character":9}],"type":{"type":"intrinsic","name":"boolean"}},{"id":1193,"name":"networkStatus","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":40,"character":15}],"type":{"type":"reference","name":"NetworkStatus","id":2}},{"id":1195,"name":"partial","kind":32,"kindString":"Variable","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":42,"character":9}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"false"},{"type":"intrinsic","name":"true"}]}},{"id":1196,"name":"stale","kind":32,"kindString":"Variable","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":43,"character":7}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"false"},{"type":"intrinsic","name":"true"}]}}],"groups":[{"title":"Variables","kind":32,"children":[1190,1194,1191,1192,1193,1195,1196]}],"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":36,"character":41}]}}},{"id":1178,"name":"ApolloCurrentResult","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"typeParameter":[{"id":1179,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":27,"character":31}],"type":{"type":"reflection","declaration":{"id":1180,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1181,"name":"data","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":28,"character":6}],"type":{"type":"union","types":[{"type":"typeParameter","name":"T"},{"type":"reference","name":"__type"}]}},{"id":1185,"name":"error","kind":32,"kindString":"Variable","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":32,"character":7}],"type":{"type":"reference","name":"ApolloError","id":99}},{"id":1182,"name":"errors","kind":32,"kindString":"Variable","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":29,"character":8}],"type":{"type":"reference","name":"ReadonlyArray","typeArguments":[{"type":"reference","name":"GraphQLError"}]}},{"id":1183,"name":"loading","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":30,"character":9}],"type":{"type":"intrinsic","name":"boolean"}},{"id":1184,"name":"networkStatus","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":31,"character":15}],"type":{"type":"reference","name":"NetworkStatus","id":2}},{"id":1186,"name":"partial","kind":32,"kindString":"Variable","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":33,"character":9}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"false"},{"type":"intrinsic","name":"true"}]}}],"groups":[{"title":"Variables","kind":32,"children":[1181,1185,1182,1183,1184,1186]}],"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":27,"character":36}]}}},{"id":1211,"name":"assertNotCacheFirstOrOnly","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":1212,"name":"assertNotCacheFirstOrOnly","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":1213,"name":"TData","kind":131072,"kindString":"Type parameter","flags":{}},{"id":1214,"name":"TVariables","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":1215,"name":"obsQuery","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ObservableQuery","id":1066,"typeArguments":[{"type":"typeParameter","name":"TData"},{"type":"typeParameter","name":"TVariables"}]}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":704,"character":34}]},{"id":1201,"name":"defaultSubscriptionObserverErrorCallback","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":1202,"name":"defaultSubscriptionObserverErrorCallback","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1203,"name":"error","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ApolloError","id":99}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":687,"character":49}]},{"id":1197,"name":"hasError","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true,"isConst":true},"signatures":[{"id":1198,"name":"hasError","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1199,"name":"storeValue","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"QueryStoreValue","id":167}},{"id":1200,"name":"policy","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ErrorPolicy","id":265},"defaultValue":"\"none\""}],"type":{"type":"union","types":[{"type":"intrinsic","name":"false"},{"type":"intrinsic","name":"true"},{"type":"reference","name":"Error"}]}}],"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":63,"character":21}]},{"id":1204,"name":"iterateObserversSafely","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":1205,"name":"iterateObserversSafely","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":1206,"name":"E","kind":131072,"kindString":"Type parameter","flags":{}},{"id":1207,"name":"A","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":1208,"name":"observers","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Set","typeArguments":[{"type":"reference","name":"Observer","typeArguments":[{"type":"typeParameter","name":"E"}]}]}},{"id":1209,"name":"method","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","name":"Observer","typeArguments":[{"type":"typeParameter","name":"E"}]}}},{"id":1210,"name":"argument","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","name":"A","id":1207}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":691,"character":31}]}],"groups":[{"title":"Classes","kind":128,"children":[1066]},{"title":"Interfaces","kind":256,"children":[1052,1063]},{"title":"Type aliases","kind":4194304,"children":[1187,1178]},{"title":"Functions","kind":64,"children":[1211,1201,1197,1204]}],"sources":[{"fileName":"packages/apollo-client/src/core/ObservableQuery.ts","line":1,"character":0}]},{"id":763,"name":"\"core/QueryManager\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"/home/timoaho/workspace/apollo-client/packages/apollo-client/src/core/QueryManager.ts","children":[{"id":775,"name":"QueryManager","kind":128,"kindString":"Class","flags":{"isExported":true,"isExternal":true},"typeParameter":[{"id":776,"name":"TStore","kind":131072,"kindString":"Type parameter","flags":{}}],"children":[{"id":792,"name":"constructor","kind":512,"kindString":"Constructor","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":793,"name":"new QueryManager","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":794,"name":"__namedParameters","kind":32768,"kindString":"Parameter","flags":{},"originalName":"__0","type":{"type":"reflection","declaration":{"id":795,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":805,"name":"assumeImmutableResults","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":95,"character":26}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"false"},{"type":"intrinsic","name":"true"}]}},{"id":802,"name":"clientAwareness","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":93,"character":19}],"type":{"type":"reflection","declaration":{"id":803,"name":"__type","kind":65536,"kindString":"Type literal","flags":{}}}},{"id":796,"name":"link","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":88,"character":8}],"type":{"type":"reference","name":"ApolloLink"}},{"id":804,"name":"localState","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":94,"character":14}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","name":"LocalState","id":445,"typeArguments":[{"type":"unknown","name":"TStore"}]}]}},{"id":797,"name":"queryDeduplication","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":89,"character":22}],"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"},{"id":801,"name":"ssrMode","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":92,"character":11}],"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"},{"id":798,"name":"store","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":90,"character":9}],"type":{"type":"reference","name":"DataStore","id":645,"typeArguments":[{"type":"unknown","name":"TStore"}]}},{"id":799,"name":"onBroadcast","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":800,"name":"onBroadcast","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"undefined"}}],"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":91,"character":15}]}],"groups":[{"title":"Variables","kind":32,"children":[805,802,796,804,797,801,798]},{"title":"Functions","kind":64,"children":[799]}],"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":87,"character":14}]}}}],"type":{"type":"reference","name":"QueryManager","id":775}}],"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":85,"character":60}]},{"id":781,"name":"assumeImmutableResults","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":63,"character":40}],"type":{"type":"intrinsic","name":"boolean"}},{"id":783,"name":"clientAwareness","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":66,"character":25}],"type":{"type":"reference","name":"Record","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}]}},{"id":780,"name":"dataStore","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":62,"character":18}],"type":{"type":"reference","name":"DataStore","id":645,"typeArguments":[{"type":"typeParameter","name":"TStore"}]}},{"id":791,"name":"fetchQueryRejectFns","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":85,"character":29}],"type":{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"Function"}]},"defaultValue":" new Map<string, Function>()"},{"id":789,"name":"idCounter","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":74,"character":19}],"type":{"type":"intrinsic","name":"number"},"defaultValue":"1"},{"id":985,"name":"inFlightLinkObservables","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":1102,"character":33}],"type":{"type":"reference","name":"Map","typeArguments":[{"type":"reference","name":"DocumentNode"},{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"Observable","id":14,"typeArguments":[{"type":"intersection","types":[{"type":"reference","name":"ExecutionResult","typeArguments":[{"type":"reflection","declaration":{"id":986,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"indexSignature":[{"id":987,"name":"__index","kind":8192,"kindString":"Index signature","flags":{},"parameters":[{"id":988,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}]}}]},{"type":"reflection","declaration":{"id":989,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":991,"name":"context","kind":32,"kindString":"Variable","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/apollo-client/node_modules/apollo-link/lib/types.d.ts","line":25,"character":11}],"type":{"type":"reference","name":"C"}},{"id":990,"name":"extensions","kind":32,"kindString":"Variable","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/apollo-client/node_modules/apollo-link/lib/types.d.ts","line":24,"character":14}],"type":{"type":"reference","name":"E","id":1206}}],"groups":[{"title":"Variables","kind":32,"children":[991,990]}]}}]}]}]}]},"defaultValue":" new Map<\n    DocumentNode,\n    Map<string, Observable<FetchResult>>\n  >()"},{"id":777,"name":"link","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":59,"character":13}],"type":{"type":"reference","name":"ApolloLink"}},{"id":784,"name":"localState","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":67,"character":20}],"type":{"type":"reference","name":"LocalState","id":445,"typeArguments":[{"type":"typeParameter","name":"TStore"}]}},{"id":778,"name":"mutationStore","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":60,"character":22}],"type":{"type":"reference","name":"MutationStore","id":717},"defaultValue":" new MutationStore()"},{"id":785,"name":"onBroadcast","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":69,"character":21}],"type":{"type":"reflection","declaration":{"id":786,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":787,"name":"__call","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":69,"character":22}]}}},{"id":1037,"name":"pollingInfoByQueryId","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":1342,"character":30}],"type":{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":1038,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1039,"name":"interval","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":1343,"character":12}],"type":{"type":"intrinsic","name":"number"}},{"id":1041,"name":"options","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":1345,"character":11}],"type":{"type":"reference","name":"WatchQueryOptions","id":205}},{"id":1040,"name":"timeout","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":1344,"character":11}],"type":{"type":"reference","name":"Timeout"}}],"groups":[{"title":"Variables","kind":32,"children":[1039,1041,1040]}]}}]},"defaultValue":" new Map<string, {\n    interval: number;\n    timeout: NodeJS.Timeout;\n    options: WatchQueryOptions;\n  }>()"},{"id":790,"name":"queries","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":78,"character":17}],"type":{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"QueryInfo","id":764}]},"defaultValue":" new Map()"},{"id":782,"name":"queryDeduplication","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":65,"character":28}],"type":{"type":"intrinsic","name":"boolean"}},{"id":779,"name":"queryStore","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":61,"character":19}],"type":{"type":"reference","name":"QueryStore","id":122},"defaultValue":" new QueryStore()"},{"id":788,"name":"ssrMode","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":71,"character":17}],"type":{"type":"intrinsic","name":"boolean"}},{"id":875,"name":"transformCache","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":652,"character":24}],"type":{"type":"reference","name":"WeakMap","typeArguments":[{"type":"reference","name":"DocumentNode"},{"type":"reflection","declaration":{"id":876,"name":"__type","kind":65536,"kindString":"Type literal","flags":{}}}]},"defaultValue":" new (canUseWeakMap ? WeakMap : Map)<\n    DocumentNode,\n    Readonly<{\n      document: Readonly<DocumentNode>;\n      hasClientExports: boolean;\n      hasForcedResolvers: boolean;\n      clientQuery: Readonly<DocumentNode> | null;\n      serverQuery: Readonly<DocumentNode> | null;\n      defaultVars: Readonly<OperationVariables>;\n    }>\n  >()"},{"id":914,"name":"addObservableQuery","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":915,"name":"addObservableQuery","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":916,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":917,"name":"queryId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":918,"name":"observableQuery","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ObservableQuery","id":1066,"typeArguments":[{"type":"typeParameter","name":"T"}]}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":841,"character":27}]},{"id":903,"name":"addQueryListener","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":904,"name":"addQueryListener","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":905,"name":"queryId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":906,"name":"listener","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"QueryListener","id":597}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":803,"character":25}]},{"id":981,"name":"broadcastQueries","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":982,"name":"broadcastQueries","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":1083,"character":25}]},{"id":1034,"name":"checkInFlight","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":1035,"name":"checkInFlight","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1036,"name":"queryId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":1331,"character":22}]},{"id":922,"name":"clearStore","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":923,"name":"clearStore","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"intrinsic","name":"void"}]}}],"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":854,"character":19}]},{"id":849,"name":"fetchQuery","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":850,"name":"fetchQuery","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":851,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":852,"name":"queryId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":853,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"WatchQueryOptions","id":205}},{"id":854,"name":"fetchType","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","name":"FetchType","id":587}},{"id":855,"name":"fetchMoreForQueryId","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]}}],"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"reference","name":"FetchResult","typeArguments":[{"type":"typeParameter","name":"T"}]}]}}],"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":336,"character":25}]},{"id":999,"name":"fetchRequest","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":1000,"name":"fetchRequest","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":1001,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":1002,"name":"__namedParameters","kind":32768,"kindString":"Parameter","flags":{},"originalName":"__0","type":{"type":"reflection","declaration":{"id":1003,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1006,"name":"document","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":1188,"character":12}],"type":{"type":"reference","name":"DocumentNode"}},{"id":1011,"name":"fetchMoreForQueryId","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":1190,"character":23}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]}},{"id":1007,"name":"options","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":1189,"character":11}],"type":{"type":"reference","name":"WatchQueryOptions","id":205,"typeArguments":[{"type":"reflection","declaration":{"id":1008,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"indexSignature":[{"id":1009,"name":"__index","kind":8192,"kindString":"Index signature","flags":{},"parameters":[{"id":1010,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}]}}]}},{"id":1005,"name":"queryId","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":1187,"character":11}],"type":{"type":"intrinsic","name":"string"}},{"id":1004,"name":"requestId","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":1186,"character":13}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Variables","kind":32,"children":[1006,1011,1007,1005,1004]}],"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":1185,"character":26}]}}}],"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"reference","name":"FetchResult","typeArguments":[{"type":"typeParameter","name":"T"}]}]}}],"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":1185,"character":22}]},{"id":895,"name":"generateQueryId","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":896,"name":"generateQueryId","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"string"}}],"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":788,"character":24}]},{"id":964,"name":"getCurrentQueryResult","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":965,"name":"getCurrentQueryResult","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":966,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":967,"name":"observableQuery","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ObservableQuery","id":1066,"typeArguments":[{"type":"typeParameter","name":"T"}]}},{"id":968,"name":"optimistic","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"true"}],"type":{"type":"reflection","declaration":{"id":969,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":970,"name":"data","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":1025,"character":8}],"type":{"type":"union","types":[{"type":"typeParameter","name":"T"},{"type":"intrinsic","name":"undefined"}]}},{"id":971,"name":"partial","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":1026,"character":11}],"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Variables","kind":32,"children":[970,971]}],"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":1024,"character":4}]}}}],"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":1021,"character":30}]},{"id":983,"name":"getLocalState","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":984,"name":"getLocalState","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","name":"LocalState","id":445,"typeArguments":[{"type":"typeParameter","name":"TStore"}]}}],"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":1098,"character":22}]},{"id":992,"name":"getObservableFromLink","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":993,"name":"getObservableFromLink","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":994,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":995,"name":"query","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"DocumentNode"}},{"id":996,"name":"context","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":997,"name":"variables","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","name":"OperationVariables","id":603}},{"id":998,"name":"deduplication","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":" this.queryDeduplication"}],"type":{"type":"reference","name":"Observable","id":14,"typeArguments":[{"type":"reference","name":"FetchResult","typeArguments":[{"type":"typeParameter","name":"T"}]}]}}],"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":1107,"character":31}]},{"id":1012,"name":"getQuery","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":1013,"name":"getQuery","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1014,"name":"queryId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"QueryInfo","id":764}}],"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":1291,"character":18}]},{"id":972,"name":"getQueryWithPreviousResult","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":973,"name":"getQueryWithPreviousResult","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":974,"name":"TData","kind":131072,"kindString":"Type parameter","flags":{}},{"id":975,"name":"TVariables","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":976,"name":"queryIdOrObservable","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"ObservableQuery","id":1066,"typeArguments":[{"type":"typeParameter","name":"TData"},{"type":"typeParameter","name":"TVariables"}]}]}}],"type":{"type":"reflection","declaration":{"id":977,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":980,"name":"document","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":1059,"character":12}],"type":{"type":"reference","name":"DocumentNode"}},{"id":978,"name":"previousResult","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":1057,"character":18}],"type":{"type":"intrinsic","name":"any"}},{"id":979,"name":"variables","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":1058,"character":13}],"type":{"type":"union","types":[{"type":"typeParameter","name":"TVariables"},{"type":"intrinsic","name":"undefined"}]}}],"groups":[{"title":"Variables","kind":32,"children":[980,978,979]}],"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":1056,"character":4}]}}}],"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":1054,"character":35}]},{"id":881,"name":"getVariables","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":882,"name":"getVariables","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":883,"name":"document","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"DocumentNode"}},{"id":884,"name":"variables","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","name":"OperationVariables","id":603}}],"type":{"type":"reference","name":"OperationVariables","id":603}}],"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":706,"character":22}]},{"id":1023,"name":"invalidate","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":1024,"name":"invalidate","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1025,"name":"queryId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"undefined"}]}},{"id":1026,"name":"invalidated","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"true"}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":1314,"character":20}]},{"id":856,"name":"markQueryResult","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":857,"name":"markQueryResult","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":858,"name":"queryId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":859,"name":"result","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ExecutionResult"}},{"id":860,"name":"__namedParameters","kind":32768,"kindString":"Parameter","flags":{},"originalName":"__2","type":{"type":"reflection","declaration":{"id":861,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":867,"name":"errorPolicy","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":489,"character":17}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"stringLiteral","value":"none"},{"type":"stringLiteral","value":"ignore"},{"type":"stringLiteral","value":"all"}]}},{"id":862,"name":"fetchPolicy","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":487,"character":17}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"stringLiteral","value":"cache-first"},{"type":"stringLiteral","value":"network-only"},{"type":"stringLiteral","value":"cache-only"},{"type":"stringLiteral","value":"no-cache"},{"type":"stringLiteral","value":"standby"},{"type":"stringLiteral","value":"cache-and-network"}]}},{"id":863,"name":"variables","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":488,"character":15}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reflection","declaration":{"id":864,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"indexSignature":[{"id":865,"name":"__index","kind":8192,"kindString":"Index signature","flags":{},"parameters":[{"id":866,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}]}}]}}],"groups":[{"title":"Variables","kind":32,"children":[867,862,863]}],"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":485,"character":28}]}}},{"id":868,"name":"fetchMoreForQueryId","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":483,"character":25}]},{"id":808,"name":"mutate","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":809,"name":"mutate","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":810,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":811,"name":"__namedParameters","kind":32768,"kindString":"Parameter","flags":{},"originalName":"__0","type":{"type":"reflection","declaration":{"id":812,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":840,"name":"awaitRefetchQueries","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":138,"character":23}],"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"},{"id":848,"name":"context","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":142,"character":11}],"type":{"type":"intrinsic","name":"any"}},{"id":846,"name":"errorPolicy","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":140,"character":15}],"type":{"type":"union","types":[{"type":"stringLiteral","value":"none"},{"type":"stringLiteral","value":"ignore"},{"type":"stringLiteral","value":"all"}]},"defaultValue":"\"none\""},{"id":847,"name":"fetchPolicy","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":141,"character":15}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"stringLiteral","value":"cache-first"},{"type":"stringLiteral","value":"network-only"},{"type":"stringLiteral","value":"cache-only"},{"type":"stringLiteral","value":"no-cache"},{"type":"stringLiteral","value":"standby"}]}},{"id":813,"name":"mutation","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":133,"character":12}],"type":{"type":"reference","name":"DocumentNode"}},{"id":818,"name":"optimisticResponse","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":135,"character":22}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reflection","declaration":{"id":819,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"indexSignature":[{"id":820,"name":"__index","kind":8192,"kindString":"Index signature","flags":{},"parameters":[{"id":821,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}]}},{"type":"reflection","declaration":{"id":822,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":823,"name":"__call","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":824,"name":"vars","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"typeParameter","name":"TVariables"}}],"type":{"type":"typeParameter","name":"T"}}]}}]}},{"id":829,"name":"refetchQueries","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":137,"character":18}],"type":{"type":"union","types":[{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":830,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":836,"name":"context","kind":32,"kindString":"Variable","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/apollo-client/src/core/types.ts","line":19,"character":9}],"type":{"type":"intrinsic","name":"any"}},{"id":831,"name":"query","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/types.ts","line":17,"character":7}],"type":{"type":"reference","name":"DocumentNode"}},{"id":832,"name":"variables","kind":32,"kindString":"Variable","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/apollo-client/src/core/types.ts","line":18,"character":11}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reflection","declaration":{"id":833,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"indexSignature":[{"id":834,"name":"__index","kind":8192,"kindString":"Index signature","flags":{},"parameters":[{"id":835,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}]}}]}}],"groups":[{"title":"Variables","kind":32,"children":[836,831,832]}]}}]}},{"type":"reflection","declaration":{"id":837,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":838,"name":"__call","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":839,"name":"result","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ExecutionResult","typeArguments":[{"type":"typeParameter","name":"T"}]}}],"type":{"type":"reference","name":"RefetchQueryDescription","id":291}}]}}]},"defaultValue":" []"},{"id":825,"name":"updateQueriesByName","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":136,"character":38}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reflection","declaration":{"id":826,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"indexSignature":[{"id":827,"name":"__index","kind":8192,"kindString":"Index signature","flags":{},"parameters":[{"id":828,"name":"queryName","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"MutationQueryReducer","id":623,"typeArguments":[{"type":"typeParameter","name":"T"}]}}]}}]}},{"id":841,"name":"updateWithProxyFn","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":139,"character":29}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reflection","declaration":{"id":842,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":843,"name":"__call","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":844,"name":"proxy","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"DataProxy"}},{"id":845,"name":"mutationResult","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"FetchResult","typeArguments":[{"type":"typeParameter","name":"T"}]}}],"type":{"type":"intrinsic","name":"void"}}]}}]}},{"id":814,"name":"variables","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":134,"character":13}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reflection","declaration":{"id":815,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"indexSignature":[{"id":816,"name":"__index","kind":8192,"kindString":"Index signature","flags":{},"parameters":[{"id":817,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}]}}]}}],"groups":[{"title":"Variables","kind":32,"children":[840,848,846,847,813,818,829,825,841,814]}],"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":132,"character":25}]}}}],"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"reference","name":"FetchResult","typeArguments":[{"type":"typeParameter","name":"T"}]}]}}],"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":132,"character":21}]},{"id":929,"name":"observeQuery","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":930,"name":"observeQuery","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":931,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":932,"name":"queryId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":933,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"WatchQueryOptions","id":205}},{"id":934,"name":"observer","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Observer","typeArguments":[{"type":"reference","name":"ApolloQueryResult","id":615,"typeArguments":[{"type":"typeParameter","name":"T"}]}]}}],"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"intersection","types":[{"type":"reference","name":"ExecutionResult","typeArguments":[{"type":"unknown","name":"T"}]},{"type":"reflection","declaration":{"id":935,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":937,"name":"context","kind":32,"kindString":"Variable","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/apollo-client/node_modules/apollo-link/lib/types.d.ts","line":25,"character":11}],"type":{"type":"reference","name":"C"}},{"id":936,"name":"extensions","kind":32,"kindString":"Variable","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/apollo-client/node_modules/apollo-link/lib/types.d.ts","line":24,"character":14}],"type":{"type":"reference","name":"E","id":1206}}],"groups":[{"title":"Variables","kind":32,"children":[937,936]}]}}]}]}}],"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":918,"character":21}]},{"id":1027,"name":"prepareContext","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":1028,"name":"prepareContext","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1029,"name":"context","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":1030,"name":"__type","kind":65536,"kindString":"Type literal","flags":{}}},"defaultValue":" {}"}],"type":{"type":"reflection","declaration":{"id":1031,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1032,"name":"clientAwareness","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":1327,"character":21}],"type":{"type":"reflection","declaration":{"id":1033,"name":"__type","kind":65536,"kindString":"Type literal","flags":{}}},"defaultValue":" this.clientAwareness"}],"groups":[{"title":"Variables","kind":32,"children":[1032]}]}}}],"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":1323,"character":24}]},{"id":891,"name":"query","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":892,"name":"query","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":893,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":894,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"QueryOptions","id":185}}],"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"reference","name":"ApolloQueryResult","id":615,"typeArguments":[{"type":"typeParameter","name":"T"}]}]}}],"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":748,"character":14}]},{"id":869,"name":"queryListenerForObserver","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":870,"name":"queryListenerForObserver","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":871,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":872,"name":"queryId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":873,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"WatchQueryOptions","id":205}},{"id":874,"name":"observer","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Observer","typeArguments":[{"type":"reference","name":"ApolloQueryResult","id":615,"typeArguments":[{"type":"typeParameter","name":"T"}]}]}}],"type":{"type":"reference","name":"QueryListener","id":597}}],"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":510,"character":33}]},{"id":926,"name":"reFetchObservableQueries","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":927,"name":"reFetchObservableQueries","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":928,"name":"includeStandby","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"ApolloQueryResult","id":615,"typeArguments":[{"type":"intrinsic","name":"any"}]}}]}}],"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":891,"character":33}]},{"id":919,"name":"removeObservableQuery","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":920,"name":"removeObservableQuery","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":921,"name":"queryId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":848,"character":30}]},{"id":961,"name":"removeQuery","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":962,"name":"removeQuery","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":963,"name":"queryId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":1009,"character":20}]},{"id":924,"name":"resetStore","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":925,"name":"resetStore","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"ApolloQueryResult","id":615,"typeArguments":[{"type":"intrinsic","name":"any"}]}}]}}],"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":879,"character":19}]},{"id":1015,"name":"setQuery","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":1016,"name":"setQuery","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":1017,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","name":"QueryInfo"}}}],"parameters":[{"id":1018,"name":"queryId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1019,"name":"updater","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":1020,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":1021,"name":"__call","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1022,"name":"prev","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"QueryInfo","id":764}}],"type":{"type":"union","types":[{"type":"reference","name":"Pick","typeArguments":[{"type":"reference","name":"QueryInfo","id":764},{"type":"typeParameter","name":"T","constraint":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","name":"QueryInfo"}}}]},{"type":"intrinsic","name":"void"}]}}],"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":1307,"character":12}]}}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":1305,"character":18}]},{"id":944,"name":"startGraphQLSubscription","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":945,"name":"startGraphQLSubscription","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":946,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":947,"name":"__namedParameters","kind":32768,"kindString":"Parameter","flags":{},"originalName":"__0","type":{"type":"reflection","declaration":{"id":948,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":950,"name":"fetchPolicy","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":949,"character":15}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"stringLiteral","value":"cache-first"},{"type":"stringLiteral","value":"network-only"},{"type":"stringLiteral","value":"cache-only"},{"type":"stringLiteral","value":"no-cache"},{"type":"stringLiteral","value":"standby"}]}},{"id":949,"name":"query","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":948,"character":9}],"type":{"type":"reference","name":"DocumentNode"}},{"id":951,"name":"variables","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":950,"character":13}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reflection","declaration":{"id":952,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"indexSignature":[{"id":953,"name":"__index","kind":8192,"kindString":"Index signature","flags":{},"parameters":[{"id":954,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}]}}]}}],"groups":[{"title":"Variables","kind":32,"children":[950,949,951]}],"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":947,"character":43}]}}}],"type":{"type":"reference","name":"Observable","id":14,"typeArguments":[{"type":"reference","name":"FetchResult","typeArguments":[{"type":"typeParameter","name":"T"}]}]}}],"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":947,"character":33}]},{"id":1042,"name":"startPollingQuery","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":1043,"name":"startPollingQuery","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1044,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"WatchQueryOptions","id":205}},{"id":1045,"name":"queryId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1046,"name":"listener","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","name":"QueryListener","id":597}}],"type":{"type":"intrinsic","name":"string"}}],"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":1348,"character":26}]},{"id":938,"name":"startQuery","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":939,"name":"startQuery","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":940,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":941,"name":"queryId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":942,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"WatchQueryOptions","id":205}},{"id":943,"name":"listener","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"QueryListener","id":597}}],"type":{"type":"intrinsic","name":"string"}}],"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":930,"character":19}]},{"id":806,"name":"stop","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":807,"name":"stop","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Call this method to terminate any active query processes, making it safe\nto dispose of this QueryManager instance."},"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":120,"character":13}]},{"id":1047,"name":"stopPollingQuery","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":1048,"name":"stopPollingQuery","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1049,"name":"queryId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":1405,"character":25}]},{"id":955,"name":"stopQuery","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":956,"name":"stopQuery","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":957,"name":"queryId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":999,"character":18}]},{"id":897,"name":"stopQueryInStore","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":898,"name":"stopQueryInStore","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":899,"name":"queryId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":792,"character":25}]},{"id":900,"name":"stopQueryInStoreNoBroadcast","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":901,"name":"stopQueryInStoreNoBroadcast","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":902,"name":"queryId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":797,"character":37}]},{"id":958,"name":"stopQueryNoBroadcast","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":959,"name":"stopQueryNoBroadcast","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":960,"name":"queryId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":1004,"character":30}]},{"id":877,"name":"transform","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":878,"name":"transform","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":879,"name":"document","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"DocumentNode"}}],"type":{"type":"reflection","declaration":{"id":880,"name":"__type","kind":65536,"kindString":"Type literal","flags":{}}}}],"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":664,"character":18}]},{"id":907,"name":"updateQueryWatch","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":908,"name":"updateQueryWatch","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":909,"name":"queryId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":910,"name":"document","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"DocumentNode"}},{"id":911,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"WatchQueryOptions","id":205}}],"type":{"type":"reflection","declaration":{"id":912,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":913,"name":"__call","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"void"}}]}}}],"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":810,"character":25}]},{"id":885,"name":"watchQuery","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":886,"name":"watchQuery","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":887,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}},{"id":888,"name":"TVariables","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":889,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"WatchQueryOptions","id":205}},{"id":890,"name":"shouldSubscribe","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"true"}],"type":{"type":"reference","name":"ObservableQuery","id":1066,"typeArguments":[{"type":"typeParameter","name":"T"},{"type":"typeParameter","name":"TVariables"}]}}],"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":723,"character":19}]}],"groups":[{"title":"Constructors","kind":512,"children":[792]},{"title":"Properties","kind":1024,"children":[781,783,780,791,789,985,777,784,778,785,1037,790,782,779,788,875]},{"title":"Methods","kind":2048,"children":[914,903,981,1034,922,849,999,895,964,983,992,1012,972,881,1023,856,808,929,1027,891,869,926,919,961,924,1015,944,1042,938,806,1047,955,897,900,958,877,907,885]}],"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":58,"character":25}]},{"id":764,"name":"QueryInfo","kind":256,"kindString":"Interface","flags":{"isExported":true,"isExternal":true},"children":[{"id":772,"name":"cancel","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":55,"character":8}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reflection","declaration":{"id":773,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":774,"name":"__call","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"void"}}]}}]}},{"id":768,"name":"document","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":48,"character":10}],"type":{"type":"union","types":[{"type":"reference","name":"DocumentNode"},{"type":"intrinsic","name":"null"}]}},{"id":766,"name":"invalidated","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":46,"character":13}],"type":{"type":"intrinsic","name":"boolean"}},{"id":769,"name":"lastRequestId","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":49,"character":15}],"type":{"type":"intrinsic","name":"number"}},{"id":765,"name":"listeners","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":45,"character":11}],"type":{"type":"reference","name":"Set","typeArguments":[{"type":"reference","name":"QueryListener","id":597}]}},{"id":767,"name":"newData","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":47,"character":9}],"type":{"type":"union","types":[{"type":"reference","name":"Cache.DiffResult","typeArguments":[{"type":"intrinsic","name":"any"}]},{"type":"intrinsic","name":"null"}]}},{"id":770,"name":"observableQuery","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":53,"character":17}],"type":{"type":"union","types":[{"type":"reference","name":"ObservableQuery","id":1066,"typeArguments":[{"type":"intrinsic","name":"any"}]},{"type":"intrinsic","name":"null"}]}},{"id":771,"name":"subscriptions","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":54,"character":15}],"type":{"type":"reference","name":"Set","typeArguments":[{"type":"reference","name":"Subscription"}]}}],"groups":[{"title":"Properties","kind":1024,"children":[772,768,766,769,765,767,770,771]}],"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":44,"character":26}]},{"id":1050,"name":"hasOwnProperty","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":42,"character":22}],"type":{"type":"reference","name":"hasOwnProperty"}}],"groups":[{"title":"Classes","kind":128,"children":[775]},{"title":"Interfaces","kind":256,"children":[764]},{"title":"Variables","kind":32,"children":[1050]}],"sources":[{"fileName":"packages/apollo-client/src/core/QueryManager.ts","line":1,"character":0}]},{"id":1,"name":"\"core/networkStatus\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"/home/timoaho/workspace/apollo-client/packages/apollo-client/src/core/networkStatus.ts","children":[{"id":2,"name":"NetworkStatus","kind":4,"kindString":"Enumeration","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"The current status of a query’s execution in our system."},"children":[{"id":9,"name":"error","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"No request is in flight for this query, but one or more errors were detected."},"sources":[{"fileName":"packages/apollo-client/src/core/networkStatus.ts","line":45,"character":7}],"defaultValue":"8"},{"id":5,"name":"fetchMore","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"Indicates that `fetchMore` was called on this query and that the query created is currently in\nflight."},"sources":[{"fileName":"packages/apollo-client/src/core/networkStatus.ts","line":22,"character":11}],"defaultValue":"3"},{"id":3,"name":"loading","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"The query has never been run before and the query is now currently running. A query will still\nhave this network status even if a partial data result was returned from the cache, but a\nquery was dispatched anyway."},"sources":[{"fileName":"packages/apollo-client/src/core/networkStatus.ts","line":10,"character":9}],"defaultValue":"1"},{"id":7,"name":"poll","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"Indicates that a polling query is currently in flight. So for example if you are polling a\nquery every 10 seconds then the network status will switch to `poll` every 10 seconds whenever\na poll request has been sent but not resolved."},"sources":[{"fileName":"packages/apollo-client/src/core/networkStatus.ts","line":35,"character":6}],"defaultValue":"6"},{"id":8,"name":"ready","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"No request is in flight for this query, and no errors happened. Everything is OK."},"sources":[{"fileName":"packages/apollo-client/src/core/networkStatus.ts","line":40,"character":7}],"defaultValue":"7"},{"id":6,"name":"refetch","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"Similar to the `setVariables` network status. It means that `refetch` was called on a query\nand the refetch request is currently in flight."},"sources":[{"fileName":"packages/apollo-client/src/core/networkStatus.ts","line":28,"character":9}],"defaultValue":"4"},{"id":4,"name":"setVariables","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"If `setVariables` was called and a query was fired because of that then the network status\nwill be `setVariables` until the result of that query comes back."},"sources":[{"fileName":"packages/apollo-client/src/core/networkStatus.ts","line":16,"character":14}],"defaultValue":"2"}],"groups":[{"title":"Enumeration members","kind":16,"children":[9,5,3,7,8,6,4]}],"sources":[{"fileName":"packages/apollo-client/src/core/networkStatus.ts","line":4,"character":25}]},{"id":10,"name":"isNetworkRequestInFlight","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":11,"name":"isNetworkRequestInFlight","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns true if there is currently a network request in flight according to a given network\nstatus."},"parameters":[{"id":12,"name":"networkStatus","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"NetworkStatus","id":2}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"packages/apollo-client/src/core/networkStatus.ts","line":52,"character":40}]}],"groups":[{"title":"Enumerations","kind":4,"children":[2]},{"title":"Functions","kind":64,"children":[10]}],"sources":[{"fileName":"packages/apollo-client/src/core/networkStatus.ts","line":1,"character":0}]},{"id":586,"name":"\"core/types\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"/home/timoaho/workspace/apollo-client/packages/apollo-client/src/core/types.ts","children":[{"id":587,"name":"FetchType","kind":4,"kindString":"Enumeration","flags":{"isExported":true,"isExternal":true},"children":[{"id":588,"name":"normal","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/types.ts","line":31,"character":8}],"defaultValue":"1"},{"id":590,"name":"poll","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/types.ts","line":33,"character":6}],"defaultValue":"3"},{"id":589,"name":"refetch","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/types.ts","line":32,"character":9}],"defaultValue":"2"}],"groups":[{"title":"Enumeration members","kind":16,"children":[588,590,589]}],"sources":[{"fileName":"packages/apollo-client/src/core/types.ts","line":30,"character":21}]},{"id":591,"name":"Resolvers","kind":256,"kindString":"Interface","flags":{"isExported":true,"isExternal":true},"indexSignature":[{"id":592,"name":"__index","kind":8192,"kindString":"Index signature","flags":{},"parameters":[{"id":593,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reflection","declaration":{"id":594,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"indexSignature":[{"id":595,"name":"__index","kind":8192,"kindString":"Index signature","flags":{},"parameters":[{"id":596,"name":"field","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"Resolver","id":550}}],"sources":[{"fileName":"packages/apollo-client/src/core/types.ts","line":51,"character":16}]}}}],"sources":[{"fileName":"packages/apollo-client/src/core/types.ts","line":50,"character":26}]},{"id":615,"name":"ApolloQueryResult","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"typeParameter":[{"id":616,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"sources":[{"fileName":"packages/apollo-client/src/core/types.ts","line":22,"character":29}],"type":{"type":"reflection","declaration":{"id":617,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":618,"name":"data","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/types.ts","line":23,"character":6}],"type":{"type":"typeParameter","name":"T"}},{"id":619,"name":"errors","kind":32,"kindString":"Variable","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/apollo-client/src/core/types.ts","line":24,"character":8}],"type":{"type":"reference","name":"ReadonlyArray","typeArguments":[{"type":"reference","name":"GraphQLError"}]}},{"id":620,"name":"loading","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/types.ts","line":25,"character":9}],"type":{"type":"intrinsic","name":"boolean"}},{"id":621,"name":"networkStatus","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/types.ts","line":26,"character":15}],"type":{"type":"reference","name":"NetworkStatus","id":2}},{"id":622,"name":"stale","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/types.ts","line":27,"character":7}],"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Variables","kind":32,"children":[618,619,620,621,622]}],"sources":[{"fileName":"packages/apollo-client/src/core/types.ts","line":22,"character":34}]}}},{"id":623,"name":"MutationQueryReducer","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"typeParameter":[{"id":624,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"sources":[{"fileName":"packages/apollo-client/src/core/types.ts","line":37,"character":32}],"type":{"type":"reflection","declaration":{"id":625,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":626,"name":"__call","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":627,"name":"previousResult","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Record","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}]}},{"id":628,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":629,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":630,"name":"mutationResult","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/types.ts","line":40,"character":18}],"type":{"type":"reference","name":"FetchResult","typeArguments":[{"type":"typeParameter","name":"T"}]}},{"id":631,"name":"queryName","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/types.ts","line":41,"character":13}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"undefined"}]}},{"id":632,"name":"queryVariables","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/types.ts","line":42,"character":18}],"type":{"type":"reference","name":"Record","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}]}}],"groups":[{"title":"Variables","kind":32,"children":[630,631,632]}],"sources":[{"fileName":"packages/apollo-client/src/core/types.ts","line":39,"character":10}]}}}],"type":{"type":"reference","name":"Record","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}]}}],"sources":[{"fileName":"packages/apollo-client/src/core/types.ts","line":37,"character":37}]}}},{"id":633,"name":"MutationQueryReducersMap","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"typeParameter":[{"id":634,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"sources":[{"fileName":"packages/apollo-client/src/core/types.ts","line":46,"character":36}],"type":{"type":"reflection","declaration":{"id":635,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"indexSignature":[{"id":636,"name":"__index","kind":8192,"kindString":"Index signature","flags":{},"parameters":[{"id":637,"name":"queryName","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"MutationQueryReducer","id":623,"typeArguments":[{"type":"typeParameter","name":"T"}]}}],"sources":[{"fileName":"packages/apollo-client/src/core/types.ts","line":46,"character":66}]}}},{"id":603,"name":"OperationVariables","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/types.ts","line":14,"character":30}],"type":{"type":"reflection","declaration":{"id":604,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"indexSignature":[{"id":605,"name":"__index","kind":8192,"kindString":"Index signature","flags":{},"parameters":[{"id":606,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}],"sources":[{"fileName":"packages/apollo-client/src/core/types.ts","line":14,"character":32}]}}},{"id":607,"name":"PureQueryOptions","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/types.ts","line":16,"character":28}],"type":{"type":"reflection","declaration":{"id":608,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":614,"name":"context","kind":32,"kindString":"Variable","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/apollo-client/src/core/types.ts","line":19,"character":9}],"type":{"type":"intrinsic","name":"any"}},{"id":609,"name":"query","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/types.ts","line":17,"character":7}],"type":{"type":"reference","name":"DocumentNode"}},{"id":610,"name":"variables","kind":32,"kindString":"Variable","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/apollo-client/src/core/types.ts","line":18,"character":11}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reflection","declaration":{"id":611,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"indexSignature":[{"id":612,"name":"__index","kind":8192,"kindString":"Index signature","flags":{},"parameters":[{"id":613,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}]}}]}}],"groups":[{"title":"Variables","kind":32,"children":[614,609,610]}],"sources":[{"fileName":"packages/apollo-client/src/core/types.ts","line":16,"character":30}]}}},{"id":597,"name":"QueryListener","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/types.ts","line":8,"character":25}],"type":{"type":"reflection","declaration":{"id":598,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":599,"name":"__call","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":600,"name":"queryStoreValue","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"QueryStoreValue","id":167}},{"id":601,"name":"newData","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"any"}},{"id":602,"name":"forceResolvers","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"false"},{"type":"intrinsic","name":"true"}]}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/apollo-client/src/core/types.ts","line":8,"character":27}]}}}],"groups":[{"title":"Enumerations","kind":4,"children":[587]},{"title":"Interfaces","kind":256,"children":[591]},{"title":"Type aliases","kind":4194304,"children":[615,623,633,603,607,597]}],"sources":[{"fileName":"packages/apollo-client/src/core/types.ts","line":1,"character":0}]},{"id":176,"name":"\"core/watchQueryOptions\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"/home/timoaho/workspace/apollo-client/packages/apollo-client/src/core/watchQueryOptions.ts","children":[{"id":217,"name":"FetchMoreQueryOptions","kind":256,"kindString":"Interface","flags":{"isExported":true,"isExternal":true},"typeParameter":[{"id":218,"name":"TVariables","kind":131072,"kindString":"Type parameter","flags":{}},{"id":219,"name":"K","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"typeOperator","operator":"keyof","target":{"type":"typeParameter","name":"TVariables"}}}],"children":[{"id":222,"name":"context","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":124,"character":9}],"type":{"type":"intrinsic","name":"any"}},{"id":220,"name":"query","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":122,"character":7}],"type":{"type":"reference","name":"DocumentNode"}},{"id":221,"name":"variables","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":123,"character":11}],"type":{"type":"reference","name":"Pick","typeArguments":[{"type":"typeParameter","name":"TVariables"},{"type":"typeParameter","name":"K","constraint":{"type":"typeOperator","operator":"keyof","target":{"type":"typeParameter","name":"TVariables"}}}]}}],"groups":[{"title":"Properties","kind":1024,"children":[222,220,221]}],"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":121,"character":38}]},{"id":194,"name":"ModifiableWatchQueryOptions","kind":256,"kindString":"Interface","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"We can change these options to an ObservableQuery"},"typeParameter":[{"id":195,"name":"TVariables","kind":131072,"kindString":"Type parameter","flags":{}}],"children":[{"id":204,"name":"context","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"Context to be passed to link execution chain"},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":72,"character":9}],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"QueryBaseOptions.context","id":184}},{"id":201,"name":"errorPolicy","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"Specifies the {@link ErrorPolicy} to be used for this query"},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":56,"character":13}],"type":{"type":"reference","name":"ErrorPolicy","id":265},"inheritedFrom":{"type":"reference","name":"QueryBaseOptions.errorPolicy","id":181}},{"id":202,"name":"fetchResults","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"Whether or not to fetch results"},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":61,"character":14}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"false"},{"type":"intrinsic","name":"true"}]},"inheritedFrom":{"type":"reference","name":"QueryBaseOptions.fetchResults","id":182}},{"id":203,"name":"metadata","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"Arbitrary metadata stored in the store with this query.  Designed for debugging,\ndeveloper tools, etc."},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":67,"character":10}],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"QueryBaseOptions.metadata","id":183}},{"id":197,"name":"notifyOnNetworkStatusChange","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"Whether or not updates to the network status should trigger next on the observer of this query"},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":100,"character":29}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"false"},{"type":"intrinsic","name":"true"}]}},{"id":196,"name":"pollInterval","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"The time interval (in milliseconds) on which this query should be\nrefetched from the server."},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":95,"character":14}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"number"}]}},{"id":199,"name":"query","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"A GraphQL document that consists of a single query to be sent down to the\nserver."},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":45,"character":7}],"type":{"type":"reference","name":"DocumentNode"},"inheritedFrom":{"type":"reference","name":"QueryBaseOptions.query","id":179}},{"id":198,"name":"returnPartialData","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"Allow returning incomplete data from the cache when a larger query cannot\nbe fully satisfied by the cache, instead of returning nothing."},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":106,"character":19}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"false"},{"type":"intrinsic","name":"true"}]}},{"id":200,"name":"variables","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"A map going from variable name to variable value, where the variables are used\nwithin the GraphQL query."},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":51,"character":11}],"type":{"type":"reference","name":"TVariables","id":195},"inheritedFrom":{"type":"reference","name":"QueryBaseOptions.variables","id":180}}],"groups":[{"title":"Properties","kind":1024,"children":[204,201,202,203,197,196,199,198,200]}],"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":89,"character":44}],"extendedTypes":[{"type":"reference","name":"QueryBaseOptions","id":177,"typeArguments":[{"type":"typeParameter","name":"TVariables"}]}],"extendedBy":[{"type":"reference","name":"WatchQueryOptions","id":205}]},{"id":228,"name":"MutationBaseOptions","kind":256,"kindString":"Interface","flags":{"isExported":true,"isExternal":true},"typeParameter":[{"id":229,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}},{"id":230,"name":"TVariables","kind":131072,"kindString":"Type parameter","flags":{}}],"children":[{"id":240,"name":"awaitRefetchQueries","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"By default, `refetchQueries` does not wait for the refetched queries to\nbe completed, before resolving the mutation `Promise`. This ensures that\nquery refetching does not hold up mutation response handling (query\nrefetching is handled asynchronously). Set `awaitRefetchQueries` to\n`true` if you would like to wait for the refetched queries to complete,\nbefore the mutation can be marked as resolved."},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":212,"character":21}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"false"},{"type":"intrinsic","name":"true"}]}},{"id":242,"name":"errorPolicy","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"Specifies the {@link ErrorPolicy} to be used for this operation"},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":242,"character":13}],"type":{"type":"reference","name":"ErrorPolicy","id":265}},{"id":231,"name":"optimisticResponse","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"An object that represents the result of this mutation that will be\noptimistically stored before the server has actually returned a result.\nThis is most often used for optimistic UI, where we want to be able to see\nthe result of a mutation immediately, and update the UI later if any errors\nappear."},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":182,"character":20}],"type":{"type":"union","types":[{"type":"typeParameter","name":"T"},{"type":"reflection","declaration":{"id":232,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":233,"name":"__call","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":234,"name":"vars","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"typeParameter","name":"TVariables"}}],"type":{"type":"typeParameter","name":"T"}}],"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":182,"character":26}]}}]}},{"id":236,"name":"refetchQueries","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"A list of query names which will be refetched once this mutation has\nreturned. This is often used if you have a set of queries which may be\naffected by a mutation and will have to update. Rather than writing a\nmutation query reducer (i.e. `updateQueries`) for this, you can simply\nrefetch the queries that will be affected and achieve a consistent store\nonce these queries return."},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":200,"character":16}],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":237,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":238,"name":"__call","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":239,"name":"result","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ExecutionResult","typeArguments":[{"type":"typeParameter","name":"T"}]}}],"type":{"type":"reference","name":"RefetchQueryDescription","id":291}}],"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":201,"character":5}]}},{"type":"reference","name":"RefetchQueryDescription","id":291}]}},{"id":241,"name":"update","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"A function which provides a {@link DataProxy} and the result of the\nmutation to allow the user to update the store based on the results of the\nmutation.","text":"This function will be called twice over the lifecycle of a mutation. Once\nat the very beginning if an `optimisticResponse` was provided. The writes\ncreated from the optimistic data will be rolled back before the second time\nthis function is called which is when the mutation has succesfully\nresolved. At that point `update` will be called with the *actual* mutation\nresult and those writes will not be rolled back.\n\nThe reason a {@link DataProxy} is provided instead of the user calling the\nmethods directly on {@link ApolloClient} is that all of the writes are\nbatched together at the end of the update, and it allows for writes\ngenerated by optimistic data to be rolled back.\n\nNote that since this function is intended to be used to update the\nstore, it cannot be used with a `no-cache` fetch policy. If you're\ninterested in performing some action after a mutation has completed,\nand you don't need to update the store, use the Promise returned from\n`client.mutate` instead.\n"},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":237,"character":8}],"type":{"type":"reference","name":"MutationUpdaterFn","id":292,"typeArguments":[{"type":"typeParameter","name":"T"}]}},{"id":235,"name":"updateQueries","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"A {@link MutationQueryReducersMap}, which is map from query names to\nmutation query reducers. Briefly, this map defines how to incorporate the\nresults of the mutation into the results of queries that are currently\nbeing watched by your application."},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":190,"character":15}],"type":{"type":"reference","name":"MutationQueryReducersMap","id":633,"typeArguments":[{"type":"typeParameter","name":"T"}]}},{"id":243,"name":"variables","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"An object that maps from the name of a variable as used in the mutation\nGraphQL document to that variable's value."},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":248,"character":11}],"type":{"type":"reference","name":"TVariables","id":230}}],"groups":[{"title":"Properties","kind":1024,"children":[240,242,231,236,241,235,243]}],"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":171,"character":36}],"extendedBy":[{"type":"reference","name":"MutationOptions","id":244}]},{"id":244,"name":"MutationOptions","kind":256,"kindString":"Interface","flags":{"isExported":true,"isExternal":true},"typeParameter":[{"id":245,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}},{"id":246,"name":"TVariables","kind":131072,"kindString":"Type parameter","flags":{}}],"children":[{"id":259,"name":"awaitRefetchQueries","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"By default, `refetchQueries` does not wait for the refetched queries to\nbe completed, before resolving the mutation `Promise`. This ensures that\nquery refetching does not hold up mutation response handling (query\nrefetching is handled asynchronously). Set `awaitRefetchQueries` to\n`true` if you would like to wait for the refetched queries to complete,\nbefore the mutation can be marked as resolved."},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":212,"character":21}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"false"},{"type":"intrinsic","name":"true"}]},"inheritedFrom":{"type":"reference","name":"MutationBaseOptions.awaitRefetchQueries","id":240}},{"id":248,"name":"context","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"The context to be passed to the link execution chain. This context will\nonly be used with the mutation. It will not be used with\n`refetchQueries`. Refetched queries use the context they were\ninitialized with (since the intitial context is stored as part of the\n`ObservableQuery` instance). If a specific context is needed when\nrefetching queries, make sure it is configured (via the\n[`query` `context` option](https://www.apollographql.com/docs/react/api/apollo-client#ApolloClient.query))\nwhen the query is first initialized/run."},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":271,"character":9}],"type":{"type":"intrinsic","name":"any"}},{"id":261,"name":"errorPolicy","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"Specifies the {@link ErrorPolicy} to be used for this operation"},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":242,"character":13}],"type":{"type":"reference","name":"ErrorPolicy","id":265},"inheritedFrom":{"type":"reference","name":"MutationBaseOptions.errorPolicy","id":242}},{"id":249,"name":"fetchPolicy","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"Specifies the {@link FetchPolicy} to be used for this query"},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":276,"character":13}],"type":{"type":"reference","name":"FetchPolicy","id":263}},{"id":247,"name":"mutation","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"A GraphQL document, often created with `gql` from the `graphql-tag`\npackage, that contains a single mutation inside of it."},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":259,"character":10}],"type":{"type":"reference","name":"DocumentNode"}},{"id":250,"name":"optimisticResponse","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"An object that represents the result of this mutation that will be\noptimistically stored before the server has actually returned a result.\nThis is most often used for optimistic UI, where we want to be able to see\nthe result of a mutation immediately, and update the UI later if any errors\nappear."},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":182,"character":20}],"type":{"type":"union","types":[{"type":"typeParameter","name":"T"},{"type":"reflection","declaration":{"id":251,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":252,"name":"__call","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":253,"name":"vars","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"typeParameter","name":"TVariables"}}],"type":{"type":"typeParameter","name":"T"}}],"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":182,"character":26}]}}]},"inheritedFrom":{"type":"reference","name":"MutationBaseOptions.optimisticResponse","id":231}},{"id":255,"name":"refetchQueries","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"A list of query names which will be refetched once this mutation has\nreturned. This is often used if you have a set of queries which may be\naffected by a mutation and will have to update. Rather than writing a\nmutation query reducer (i.e. `updateQueries`) for this, you can simply\nrefetch the queries that will be affected and achieve a consistent store\nonce these queries return."},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":200,"character":16}],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":256,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":257,"name":"__call","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":258,"name":"result","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ExecutionResult","typeArguments":[{"type":"typeParameter","name":"T"}]}}],"type":{"type":"reference","name":"RefetchQueryDescription","id":291}}],"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":201,"character":5}]}},{"type":"reference","name":"RefetchQueryDescription","id":291}]},"inheritedFrom":{"type":"reference","name":"MutationBaseOptions.refetchQueries","id":236}},{"id":260,"name":"update","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"A function which provides a {@link DataProxy} and the result of the\nmutation to allow the user to update the store based on the results of the\nmutation.","text":"This function will be called twice over the lifecycle of a mutation. Once\nat the very beginning if an `optimisticResponse` was provided. The writes\ncreated from the optimistic data will be rolled back before the second time\nthis function is called which is when the mutation has succesfully\nresolved. At that point `update` will be called with the *actual* mutation\nresult and those writes will not be rolled back.\n\nThe reason a {@link DataProxy} is provided instead of the user calling the\nmethods directly on {@link ApolloClient} is that all of the writes are\nbatched together at the end of the update, and it allows for writes\ngenerated by optimistic data to be rolled back.\n\nNote that since this function is intended to be used to update the\nstore, it cannot be used with a `no-cache` fetch policy. If you're\ninterested in performing some action after a mutation has completed,\nand you don't need to update the store, use the Promise returned from\n`client.mutate` instead.\n"},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":237,"character":8}],"type":{"type":"reference","name":"MutationUpdaterFn","id":292,"typeArguments":[{"type":"typeParameter","name":"T"}]},"inheritedFrom":{"type":"reference","name":"MutationBaseOptions.update","id":241}},{"id":254,"name":"updateQueries","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"A {@link MutationQueryReducersMap}, which is map from query names to\nmutation query reducers. Briefly, this map defines how to incorporate the\nresults of the mutation into the results of queries that are currently\nbeing watched by your application."},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":190,"character":15}],"type":{"type":"reference","name":"MutationQueryReducersMap","id":633,"typeArguments":[{"type":"typeParameter","name":"T"}]},"inheritedFrom":{"type":"reference","name":"MutationBaseOptions.updateQueries","id":235}},{"id":262,"name":"variables","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"An object that maps from the name of a variable as used in the mutation\nGraphQL document to that variable's value."},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":248,"character":11}],"type":{"type":"reference","name":"TVariables","id":246},"inheritedFrom":{"type":"reference","name":"MutationBaseOptions.variables","id":243}}],"groups":[{"title":"Properties","kind":1024,"children":[259,248,261,249,247,250,255,260,254,262]}],"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":251,"character":32}],"extendedTypes":[{"type":"reference","name":"MutationBaseOptions","id":228,"typeArguments":[{"type":"typeParameter","name":"T"},{"type":"typeParameter","name":"TVariables"}]}]},{"id":177,"name":"QueryBaseOptions","kind":256,"kindString":"Interface","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"Common options shared across all query interfaces."},"typeParameter":[{"id":178,"name":"TVariables","kind":131072,"kindString":"Type parameter","flags":{}}],"children":[{"id":184,"name":"context","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"Context to be passed to link execution chain"},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":72,"character":9}],"type":{"type":"intrinsic","name":"any"}},{"id":181,"name":"errorPolicy","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"Specifies the {@link ErrorPolicy} to be used for this query"},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":56,"character":13}],"type":{"type":"reference","name":"ErrorPolicy","id":265}},{"id":182,"name":"fetchResults","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"Whether or not to fetch results"},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":61,"character":14}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"false"},{"type":"intrinsic","name":"true"}]}},{"id":183,"name":"metadata","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"Arbitrary metadata stored in the store with this query.  Designed for debugging,\ndeveloper tools, etc."},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":67,"character":10}],"type":{"type":"intrinsic","name":"any"}},{"id":179,"name":"query","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"A GraphQL document that consists of a single query to be sent down to the\nserver."},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":45,"character":7}],"type":{"type":"reference","name":"DocumentNode"}},{"id":180,"name":"variables","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"A map going from variable name to variable value, where the variables are used\nwithin the GraphQL query."},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":51,"character":11}],"type":{"type":"reference","name":"TVariables","id":178}}],"groups":[{"title":"Properties","kind":1024,"children":[184,181,182,183,179,180]}],"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":38,"character":33}],"extendedBy":[{"type":"reference","name":"QueryOptions","id":185},{"type":"reference","name":"ModifiableWatchQueryOptions","id":194},{"type":"reference","name":"WatchQueryOptions","id":205}]},{"id":185,"name":"QueryOptions","kind":256,"kindString":"Interface","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"Query options."},"typeParameter":[{"id":186,"name":"TVariables","kind":131072,"kindString":"Type parameter","flags":{}}],"children":[{"id":193,"name":"context","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"Context to be passed to link execution chain"},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":72,"character":9}],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"QueryBaseOptions.context","id":184}},{"id":190,"name":"errorPolicy","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"Specifies the {@link ErrorPolicy} to be used for this query"},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":56,"character":13}],"type":{"type":"reference","name":"ErrorPolicy","id":265},"inheritedFrom":{"type":"reference","name":"QueryBaseOptions.errorPolicy","id":181}},{"id":187,"name":"fetchPolicy","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"Specifies the {@link FetchPolicy} to be used for this query"},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":83,"character":13}],"type":{"type":"reference","name":"FetchPolicy","id":263}},{"id":191,"name":"fetchResults","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"Whether or not to fetch results"},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":61,"character":14}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"false"},{"type":"intrinsic","name":"true"}]},"inheritedFrom":{"type":"reference","name":"QueryBaseOptions.fetchResults","id":182}},{"id":192,"name":"metadata","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"Arbitrary metadata stored in the store with this query.  Designed for debugging,\ndeveloper tools, etc."},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":67,"character":10}],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"QueryBaseOptions.metadata","id":183}},{"id":188,"name":"query","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"A GraphQL document that consists of a single query to be sent down to the\nserver."},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":45,"character":7}],"type":{"type":"reference","name":"DocumentNode"},"inheritedFrom":{"type":"reference","name":"QueryBaseOptions.query","id":179}},{"id":189,"name":"variables","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"A map going from variable name to variable value, where the variables are used\nwithin the GraphQL query."},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":51,"character":11}],"type":{"type":"reference","name":"TVariables","id":186},"inheritedFrom":{"type":"reference","name":"QueryBaseOptions.variables","id":180}}],"groups":[{"title":"Properties","kind":1024,"children":[193,190,187,191,192,188,189]}],"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":78,"character":29}],"extendedTypes":[{"type":"reference","name":"QueryBaseOptions","id":177,"typeArguments":[{"type":"typeParameter","name":"TVariables"}]}]},{"id":223,"name":"SubscriptionOptions","kind":256,"kindString":"Interface","flags":{"isExported":true,"isExternal":true},"typeParameter":[{"id":224,"name":"TVariables","kind":131072,"kindString":"Type parameter","flags":{}}],"children":[{"id":227,"name":"fetchPolicy","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"Specifies the {@link FetchPolicy} to be used for this subscription."},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":166,"character":13}],"type":{"type":"reference","name":"FetchPolicy","id":263}},{"id":225,"name":"query","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"A GraphQL document, often created with `gql` from the `graphql-tag`\npackage, that contains a single subscription inside of it."},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":155,"character":7}],"type":{"type":"reference","name":"DocumentNode"}},{"id":226,"name":"variables","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"An object that maps from the name of a variable as used in the subscription\nGraphQL document to that variable's value."},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":161,"character":11}],"type":{"type":"reference","name":"TVariables","id":224}}],"groups":[{"title":"Properties","kind":1024,"children":[227,225,226]}],"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":150,"character":36}]},{"id":205,"name":"WatchQueryOptions","kind":256,"kindString":"Interface","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"Watched query options."},"typeParameter":[{"id":206,"name":"TVariables","kind":131072,"kindString":"Type parameter","flags":{}}],"children":[{"id":213,"name":"context","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"Context to be passed to link execution chain"},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":72,"character":9}],"type":{"type":"intrinsic","name":"any"},"overwrites":{"type":"reference","name":"QueryBaseOptions.context","id":184},"inheritedFrom":{"type":"reference","name":"QueryBaseOptions.context","id":184}},{"id":210,"name":"errorPolicy","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"Specifies the {@link ErrorPolicy} to be used for this query"},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":56,"character":13}],"type":{"type":"reference","name":"ErrorPolicy","id":265},"overwrites":{"type":"reference","name":"QueryBaseOptions.errorPolicy","id":181},"inheritedFrom":{"type":"reference","name":"QueryBaseOptions.errorPolicy","id":181}},{"id":207,"name":"fetchPolicy","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"Specifies the {@link FetchPolicy} to be used for this query"},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":118,"character":13}],"type":{"type":"reference","name":"WatchQueryFetchPolicy","id":264}},{"id":211,"name":"fetchResults","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"Whether or not to fetch results"},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":61,"character":14}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"false"},{"type":"intrinsic","name":"true"}]},"overwrites":{"type":"reference","name":"QueryBaseOptions.fetchResults","id":182},"inheritedFrom":{"type":"reference","name":"QueryBaseOptions.fetchResults","id":182}},{"id":212,"name":"metadata","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"Arbitrary metadata stored in the store with this query.  Designed for debugging,\ndeveloper tools, etc."},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":67,"character":10}],"type":{"type":"intrinsic","name":"any"},"overwrites":{"type":"reference","name":"QueryBaseOptions.metadata","id":183},"inheritedFrom":{"type":"reference","name":"QueryBaseOptions.metadata","id":183}},{"id":215,"name":"notifyOnNetworkStatusChange","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"Whether or not updates to the network status should trigger next on the observer of this query"},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":100,"character":29}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"false"},{"type":"intrinsic","name":"true"}]},"inheritedFrom":{"type":"reference","name":"ModifiableWatchQueryOptions.notifyOnNetworkStatusChange","id":197}},{"id":214,"name":"pollInterval","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"The time interval (in milliseconds) on which this query should be\nrefetched from the server."},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":95,"character":14}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"number"}]},"inheritedFrom":{"type":"reference","name":"ModifiableWatchQueryOptions.pollInterval","id":196}},{"id":208,"name":"query","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"A GraphQL document that consists of a single query to be sent down to the\nserver."},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":45,"character":7}],"type":{"type":"reference","name":"DocumentNode"},"overwrites":{"type":"reference","name":"QueryBaseOptions.query","id":179},"inheritedFrom":{"type":"reference","name":"QueryBaseOptions.query","id":179}},{"id":216,"name":"returnPartialData","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"Allow returning incomplete data from the cache when a larger query cannot\nbe fully satisfied by the cache, instead of returning nothing."},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":106,"character":19}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"false"},{"type":"intrinsic","name":"true"}]},"inheritedFrom":{"type":"reference","name":"ModifiableWatchQueryOptions.returnPartialData","id":198}},{"id":209,"name":"variables","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"A map going from variable name to variable value, where the variables are used\nwithin the GraphQL query."},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":51,"character":11}],"type":{"type":"reference","name":"TVariables","id":206},"overwrites":{"type":"reference","name":"QueryBaseOptions.variables","id":180},"inheritedFrom":{"type":"reference","name":"QueryBaseOptions.variables","id":180}}],"groups":[{"title":"Properties","kind":1024,"children":[213,210,207,211,212,215,214,208,216,209]}],"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":112,"character":34}],"extendedTypes":[{"type":"reference","name":"QueryBaseOptions","id":177,"typeArguments":[{"type":"typeParameter","name":"TVariables"}]},{"type":"reference","name":"ModifiableWatchQueryOptions","id":194,"typeArguments":[{"type":"typeParameter","name":"TVariables"}]}]},{"id":265,"name":"ErrorPolicy","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"errorPolicy determines the level of events for errors in the execution result. The options are:\n- none (default): any errors from the request are treated like runtime errors and the observable is stopped (XXX this is default to lower breaking changes going from AC 1.0 => 2.0)\n- ignore: errors from the request do not stop the observable, but also don't call `next`\n- all: errors are treated like data and will notify observables"},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":33,"character":23}],"type":{"type":"union","types":[{"type":"stringLiteral","value":"none"},{"type":"stringLiteral","value":"ignore"},{"type":"stringLiteral","value":"all"}]}},{"id":263,"name":"FetchPolicy","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"fetchPolicy determines where the client may return a result from. The options are:\n- cache-first (default): return result from cache. Only fetch from network if cached result is not available.\n- cache-and-network: return result from cache first (if it exists), then return network result once it's available.\n- cache-only: return result from cache if available, fail otherwise.\n- no-cache: return result from network, fail if network call doesn't succeed, don't save to cache\n- network-only: return result from network, fail if network call doesn't succeed, save to cache\n- standby: only for queries that aren't actively watched, but should be available for refetch and updateQueries."},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":18,"character":23}],"type":{"type":"union","types":[{"type":"stringLiteral","value":"cache-first"},{"type":"stringLiteral","value":"network-only"},{"type":"stringLiteral","value":"cache-only"},{"type":"stringLiteral","value":"no-cache"},{"type":"stringLiteral","value":"standby"}]}},{"id":292,"name":"MutationUpdaterFn","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"typeParameter":[{"id":293,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":280,"character":29}],"type":{"type":"reflection","declaration":{"id":294,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":295,"name":"__call","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":296,"name":"proxy","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"DataProxy"}},{"id":297,"name":"mutationResult","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"FetchResult","typeArguments":[{"type":"typeParameter","name":"T"}]}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":280,"character":59}]}}},{"id":291,"name":"RefetchQueryDescription","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":169,"character":35}],"type":{"type":"reference","name":"Array","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"PureQueryOptions","id":607}]}]}},{"id":279,"name":"SubscribeToMoreOptions","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"typeParameter":[{"id":280,"name":"TData","kind":131072,"kindString":"Type parameter","flags":{}},{"id":281,"name":"TSubscriptionVariables","kind":131072,"kindString":"Type parameter","flags":{}},{"id":282,"name":"TSubscriptionData","kind":131072,"kindString":"Type parameter","flags":{}}],"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":139,"character":34}],"type":{"type":"reflection","declaration":{"id":283,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":284,"name":"document","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":144,"character":10}],"type":{"type":"reference","name":"DocumentNode"}},{"id":287,"name":"onError","kind":32,"kindString":"Variable","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":147,"character":9}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reflection","declaration":{"id":288,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":289,"name":"__call","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":290,"name":"error","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Error"}}],"type":{"type":"intrinsic","name":"void"}}]}}]}},{"id":286,"name":"updateQuery","kind":32,"kindString":"Variable","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":146,"character":13}],"type":{"type":"reference","name":"UpdateQueryFn","id":266,"typeArguments":[{"type":"typeParameter","name":"TData"},{"type":"typeParameter","name":"TSubscriptionVariables"},{"type":"typeParameter","name":"TSubscriptionData"}]}},{"id":285,"name":"variables","kind":32,"kindString":"Variable","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":145,"character":11}],"type":{"type":"reference","name":"TSubscriptionVariables","id":281}}],"groups":[{"title":"Variables","kind":32,"children":[284,287,286,285]}],"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":143,"character":3}]}}},{"id":266,"name":"UpdateQueryFn","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"typeParameter":[{"id":267,"name":"TData","kind":131072,"kindString":"Type parameter","flags":{}},{"id":268,"name":"TSubscriptionVariables","kind":131072,"kindString":"Type parameter","flags":{}},{"id":269,"name":"TSubscriptionData","kind":131072,"kindString":"Type parameter","flags":{}}],"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":127,"character":25}],"type":{"type":"reflection","declaration":{"id":270,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":271,"name":"__call","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":272,"name":"previousQueryResult","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"typeParameter","name":"TData"}},{"id":273,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":274,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":275,"name":"subscriptionData","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":134,"character":20}],"type":{"type":"reflection","declaration":{"id":276,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":277,"name":"data","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":134,"character":28}],"type":{"type":"typeParameter","name":"TSubscriptionData"}}],"groups":[{"title":"Variables","kind":32,"children":[277]}],"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":134,"character":21}]}}},{"id":278,"name":"variables","kind":32,"kindString":"Variable","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":135,"character":13}],"type":{"type":"reference","name":"TSubscriptionVariables","id":268}}],"groups":[{"title":"Variables","kind":32,"children":[275,278]}],"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":133,"character":10}]}}}],"type":{"type":"typeParameter","name":"TData"}}],"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":131,"character":3}]}}},{"id":264,"name":"WatchQueryFetchPolicy","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":25,"character":33}],"type":{"type":"union","types":[{"type":"reference","name":"FetchPolicy","id":263},{"type":"stringLiteral","value":"cache-and-network"}]}}],"groups":[{"title":"Interfaces","kind":256,"children":[217,194,228,244,177,185,223,205]},{"title":"Type aliases","kind":4194304,"children":[265,263,292,291,279,266,264]}],"sources":[{"fileName":"packages/apollo-client/src/core/watchQueryOptions.ts","line":1,"character":0}]},{"id":716,"name":"\"data/mutations\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"/home/timoaho/workspace/apollo-client/packages/apollo-client/src/data/mutations.ts","children":[{"id":717,"name":"MutationStore","kind":128,"kindString":"Class","flags":{"isExported":true,"isExternal":true},"children":[{"id":718,"name":"store","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/data/mutations.ts","line":4,"character":15}],"type":{"type":"reflection","declaration":{"id":719,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"indexSignature":[{"id":720,"name":"__index","kind":8192,"kindString":"Index signature","flags":{},"parameters":[{"id":721,"name":"mutationId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"MutationStoreValue","id":744}}],"sources":[{"fileName":"packages/apollo-client/src/data/mutations.ts","line":4,"character":16}]}}},{"id":727,"name":"get","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":728,"name":"get","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":729,"name":"mutationId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"MutationStoreValue","id":744}}],"sources":[{"fileName":"packages/apollo-client/src/data/mutations.ts","line":10,"character":12}]},{"id":722,"name":"getStore","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":723,"name":"getStore","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reflection","declaration":{"id":724,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"indexSignature":[{"id":725,"name":"__index","kind":8192,"kindString":"Index signature","flags":{},"parameters":[{"id":726,"name":"mutationId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"MutationStoreValue","id":744}}],"sources":[{"fileName":"packages/apollo-client/src/data/mutations.ts","line":6,"character":20}]}}}],"sources":[{"fileName":"packages/apollo-client/src/data/mutations.ts","line":6,"character":17}]},{"id":730,"name":"initMutation","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":731,"name":"initMutation","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":732,"name":"mutationId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":733,"name":"mutation","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"DocumentNode"}},{"id":734,"name":"variables","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"Object"},{"type":"intrinsic","name":"undefined"}]}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/apollo-client/src/data/mutations.ts","line":14,"character":21}]},{"id":735,"name":"markMutationError","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":736,"name":"markMutationError","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":737,"name":"mutationId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":738,"name":"error","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Error"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/apollo-client/src/data/mutations.ts","line":27,"character":26}]},{"id":739,"name":"markMutationResult","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":740,"name":"markMutationResult","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":741,"name":"mutationId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/apollo-client/src/data/mutations.ts","line":35,"character":27}]},{"id":742,"name":"reset","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":743,"name":"reset","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/apollo-client/src/data/mutations.ts","line":43,"character":14}]}],"groups":[{"title":"Properties","kind":1024,"children":[718]},{"title":"Methods","kind":2048,"children":[727,722,730,735,739,742]}],"sources":[{"fileName":"packages/apollo-client/src/data/mutations.ts","line":3,"character":26}]},{"id":744,"name":"MutationStoreValue","kind":256,"kindString":"Interface","flags":{"isExported":true,"isExternal":true},"children":[{"id":748,"name":"error","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/data/mutations.ts","line":52,"character":7}],"type":{"type":"union","types":[{"type":"reference","name":"Error"},{"type":"intrinsic","name":"null"}]}},{"id":747,"name":"loading","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/data/mutations.ts","line":51,"character":9}],"type":{"type":"intrinsic","name":"boolean"}},{"id":745,"name":"mutation","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/data/mutations.ts","line":49,"character":10}],"type":{"type":"reference","name":"DocumentNode"}},{"id":746,"name":"variables","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/data/mutations.ts","line":50,"character":11}],"type":{"type":"reference","name":"Object"}}],"groups":[{"title":"Properties","kind":1024,"children":[748,747,745,746]}],"sources":[{"fileName":"packages/apollo-client/src/data/mutations.ts","line":48,"character":35}]}],"groups":[{"title":"Classes","kind":128,"children":[717]},{"title":"Interfaces","kind":256,"children":[744]}],"sources":[{"fileName":"packages/apollo-client/src/data/mutations.ts","line":1,"character":0}]},{"id":121,"name":"\"data/queries\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"/home/timoaho/workspace/apollo-client/packages/apollo-client/src/data/queries.ts","children":[{"id":122,"name":"QueryStore","kind":128,"kindString":"Class","flags":{"isExported":true,"isExternal":true},"children":[{"id":123,"name":"store","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/data/queries.ts","line":18,"character":15}],"type":{"type":"reflection","declaration":{"id":124,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"indexSignature":[{"id":125,"name":"__index","kind":8192,"kindString":"Index signature","flags":{},"parameters":[{"id":126,"name":"queryId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"QueryStoreValue","id":167}}],"sources":[{"fileName":"packages/apollo-client/src/data/queries.ts","line":18,"character":16}]}}},{"id":132,"name":"get","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":133,"name":"get","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":134,"name":"queryId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"QueryStoreValue","id":167}}],"sources":[{"fileName":"packages/apollo-client/src/data/queries.ts","line":24,"character":12}]},{"id":127,"name":"getStore","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":128,"name":"getStore","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reflection","declaration":{"id":129,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"indexSignature":[{"id":130,"name":"__index","kind":8192,"kindString":"Index signature","flags":{},"parameters":[{"id":131,"name":"queryId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"QueryStoreValue","id":167}}],"sources":[{"fileName":"packages/apollo-client/src/data/queries.ts","line":20,"character":20}]}}}],"sources":[{"fileName":"packages/apollo-client/src/data/queries.ts","line":20,"character":17}]},{"id":135,"name":"initQuery","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":136,"name":"initQuery","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":137,"name":"query","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":138,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":140,"name":"document","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/data/queries.ts","line":30,"character":12}],"type":{"type":"reference","name":"DocumentNode"}},{"id":146,"name":"fetchMoreForQueryId","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/data/queries.ts","line":36,"character":23}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"undefined"}]}},{"id":143,"name":"isPoll","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/data/queries.ts","line":33,"character":10}],"type":{"type":"intrinsic","name":"boolean"}},{"id":144,"name":"isRefetch","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/data/queries.ts","line":34,"character":13}],"type":{"type":"intrinsic","name":"boolean"}},{"id":145,"name":"metadata","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/data/queries.ts","line":35,"character":12}],"type":{"type":"intrinsic","name":"any"}},{"id":139,"name":"queryId","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/data/queries.ts","line":29,"character":11}],"type":{"type":"intrinsic","name":"string"}},{"id":141,"name":"storePreviousVariables","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/data/queries.ts","line":31,"character":26}],"type":{"type":"intrinsic","name":"boolean"}},{"id":142,"name":"variables","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/data/queries.ts","line":32,"character":13}],"type":{"type":"reference","name":"Object"}}],"groups":[{"title":"Variables","kind":32,"children":[140,146,143,144,145,139,141,142]}],"sources":[{"fileName":"packages/apollo-client/src/data/queries.ts","line":28,"character":25}]}}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/apollo-client/src/data/queries.ts","line":28,"character":18}]},{"id":152,"name":"markQueryError","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":153,"name":"markQueryError","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":154,"name":"queryId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":155,"name":"error","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Error"}},{"id":156,"name":"fetchMoreForQueryId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"undefined"}]}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/apollo-client/src/data/queries.ts","line":135,"character":23}]},{"id":147,"name":"markQueryResult","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":148,"name":"markQueryResult","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":149,"name":"queryId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":150,"name":"result","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ExecutionResult"}},{"id":151,"name":"fetchMoreForQueryId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"undefined"}]}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/apollo-client/src/data/queries.ts","line":112,"character":24}]},{"id":157,"name":"markQueryResultClient","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":158,"name":"markQueryResultClient","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":159,"name":"queryId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":160,"name":"complete","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/apollo-client/src/data/queries.ts","line":153,"character":30}]},{"id":164,"name":"reset","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":165,"name":"reset","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":166,"name":"observableQueryIds","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/apollo-client/src/data/queries.ts","line":168,"character":14}]},{"id":161,"name":"stopQuery","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":162,"name":"stopQuery","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":163,"name":"queryId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/apollo-client/src/data/queries.ts","line":164,"character":18}]}],"groups":[{"title":"Properties","kind":1024,"children":[123]},{"title":"Methods","kind":2048,"children":[132,127,135,152,147,157,164,161]}],"sources":[{"fileName":"packages/apollo-client/src/data/queries.ts","line":17,"character":23}]},{"id":167,"name":"QueryStoreValue","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/data/queries.ts","line":7,"character":27}],"type":{"type":"reflection","declaration":{"id":168,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":169,"name":"document","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/data/queries.ts","line":8,"character":10}],"type":{"type":"reference","name":"DocumentNode"}},{"id":174,"name":"graphQLErrors","kind":32,"kindString":"Variable","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/apollo-client/src/data/queries.ts","line":13,"character":15}],"type":{"type":"reference","name":"ReadonlyArray","typeArguments":[{"type":"reference","name":"GraphQLError"}]}},{"id":175,"name":"metadata","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/data/queries.ts","line":14,"character":10}],"type":{"type":"intrinsic","name":"any"}},{"id":173,"name":"networkError","kind":32,"kindString":"Variable","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/apollo-client/src/data/queries.ts","line":12,"character":14}],"type":{"type":"union","types":[{"type":"reference","name":"Error"},{"type":"intrinsic","name":"null"}]}},{"id":172,"name":"networkStatus","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/data/queries.ts","line":11,"character":15}],"type":{"type":"reference","name":"NetworkStatus","id":2}},{"id":171,"name":"previousVariables","kind":32,"kindString":"Variable","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/apollo-client/src/data/queries.ts","line":10,"character":19}],"type":{"type":"union","types":[{"type":"reference","name":"Object"},{"type":"intrinsic","name":"null"}]}},{"id":170,"name":"variables","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/data/queries.ts","line":9,"character":11}],"type":{"type":"reference","name":"Object"}}],"groups":[{"title":"Variables","kind":32,"children":[169,174,175,173,172,171,170]}],"sources":[{"fileName":"packages/apollo-client/src/data/queries.ts","line":7,"character":29}]}}}],"groups":[{"title":"Classes","kind":128,"children":[122]},{"title":"Type aliases","kind":4194304,"children":[167]}],"sources":[{"fileName":"packages/apollo-client/src/data/queries.ts","line":1,"character":0}]},{"id":638,"name":"\"data/store\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"/home/timoaho/workspace/apollo-client/packages/apollo-client/src/data/store.ts","children":[{"id":645,"name":"DataStore","kind":128,"kindString":"Class","flags":{"isExported":true,"isExternal":true},"typeParameter":[{"id":646,"name":"TSerialized","kind":131072,"kindString":"Type parameter","flags":{}}],"children":[{"id":648,"name":"constructor","kind":512,"kindString":"Constructor","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":649,"name":"new DataStore","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":650,"name":"initialCache","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ApolloCache","typeArguments":[{"type":"typeParameter","name":"TSerialized"}]}}],"type":{"type":"reference","name":"DataStore","id":645}}],"sources":[{"fileName":"packages/apollo-client/src/data/store.ts","line":26,"character":42}]},{"id":647,"name":"cache","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/data/store.ts","line":26,"character":15}],"type":{"type":"reference","name":"ApolloCache","typeArguments":[{"type":"typeParameter","name":"TSerialized"}]}},{"id":651,"name":"getCache","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":652,"name":"getCache","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","name":"ApolloCache","typeArguments":[{"type":"typeParameter","name":"TSerialized"}]}}],"sources":[{"fileName":"packages/apollo-client/src/data/store.ts","line":32,"character":17}]},{"id":699,"name":"markMutationComplete","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":700,"name":"markMutationComplete","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":701,"name":"__namedParameters","kind":32768,"kindString":"Parameter","flags":{},"originalName":"__0","type":{"type":"reflection","declaration":{"id":702,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":703,"name":"mutationId","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/data/store.ts","line":178,"character":14}],"type":{"type":"intrinsic","name":"string"}},{"id":704,"name":"optimisticResponse","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/data/store.ts","line":179,"character":22}],"type":{"type":"intrinsic","name":"any"}}],"groups":[{"title":"Variables","kind":32,"children":[703,704]}],"sources":[{"fileName":"packages/apollo-client/src/data/store.ts","line":177,"character":30}]}}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/apollo-client/src/data/store.ts","line":177,"character":29}]},{"id":665,"name":"markMutationInit","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":666,"name":"markMutationInit","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":667,"name":"mutation","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":668,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":670,"name":"document","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/data/store.ts","line":76,"character":12}],"type":{"type":"reference","name":"DocumentNode"}},{"id":669,"name":"mutationId","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/data/store.ts","line":75,"character":14}],"type":{"type":"intrinsic","name":"string"}},{"id":681,"name":"optimisticResponse","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/data/store.ts","line":80,"character":22}],"type":{"type":"union","types":[{"type":"reference","name":"Object"},{"type":"reference","name":"Function"},{"type":"intrinsic","name":"undefined"}]}},{"id":676,"name":"update","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/data/store.ts","line":79,"character":10}],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":677,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":678,"name":"__call","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":679,"name":"proxy","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"DataProxy"}},{"id":680,"name":"mutationResult","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Object"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/apollo-client/src/data/store.ts","line":79,"character":11}]}},{"type":"intrinsic","name":"undefined"}]}},{"id":672,"name":"updateQueries","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/data/store.ts","line":78,"character":17}],"type":{"type":"reflection","declaration":{"id":673,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"indexSignature":[{"id":674,"name":"__index","kind":8192,"kindString":"Index signature","flags":{},"parameters":[{"id":675,"name":"queryId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"QueryWithUpdater","id":712}}],"sources":[{"fileName":"packages/apollo-client/src/data/store.ts","line":78,"character":18}]}}},{"id":671,"name":"variables","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/data/store.ts","line":77,"character":13}],"type":{"type":"intrinsic","name":"any"}}],"groups":[{"title":"Variables","kind":32,"children":[670,669,681,676,672,671]}],"sources":[{"fileName":"packages/apollo-client/src/data/store.ts","line":74,"character":35}]}}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/apollo-client/src/data/store.ts","line":74,"character":25}]},{"id":682,"name":"markMutationResult","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":683,"name":"markMutationResult","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":684,"name":"mutation","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":685,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":688,"name":"document","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/data/store.ts","line":113,"character":12}],"type":{"type":"reference","name":"DocumentNode"}},{"id":686,"name":"mutationId","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/data/store.ts","line":111,"character":14}],"type":{"type":"intrinsic","name":"string"}},{"id":687,"name":"result","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/data/store.ts","line":112,"character":10}],"type":{"type":"reference","name":"ExecutionResult"}},{"id":694,"name":"update","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/data/store.ts","line":116,"character":10}],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":695,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":696,"name":"__call","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":697,"name":"proxy","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"DataProxy"}},{"id":698,"name":"mutationResult","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Object"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/apollo-client/src/data/store.ts","line":116,"character":11}]}},{"type":"intrinsic","name":"undefined"}]}},{"id":690,"name":"updateQueries","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/data/store.ts","line":115,"character":17}],"type":{"type":"reflection","declaration":{"id":691,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"indexSignature":[{"id":692,"name":"__index","kind":8192,"kindString":"Index signature","flags":{},"parameters":[{"id":693,"name":"queryId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"QueryWithUpdater","id":712}}],"sources":[{"fileName":"packages/apollo-client/src/data/store.ts","line":115,"character":18}]}}},{"id":689,"name":"variables","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/data/store.ts","line":114,"character":13}],"type":{"type":"intrinsic","name":"any"}}],"groups":[{"title":"Variables","kind":32,"children":[688,686,687,694,690,689]}],"sources":[{"fileName":"packages/apollo-client/src/data/store.ts","line":110,"character":37}]}}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/apollo-client/src/data/store.ts","line":110,"character":27}]},{"id":653,"name":"markQueryResult","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":654,"name":"markQueryResult","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":655,"name":"result","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ExecutionResult"}},{"id":656,"name":"document","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"DocumentNode"}},{"id":657,"name":"variables","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":658,"name":"fetchMoreForQueryId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"undefined"}]}},{"id":659,"name":"ignoreErrors","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/apollo-client/src/data/store.ts","line":36,"character":24}]},{"id":660,"name":"markSubscriptionResult","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":661,"name":"markSubscriptionResult","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":662,"name":"result","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ExecutionResult"}},{"id":663,"name":"document","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"DocumentNode"}},{"id":664,"name":"variables","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/apollo-client/src/data/store.ts","line":57,"character":31}]},{"id":705,"name":"markUpdateQueryResult","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":706,"name":"markUpdateQueryResult","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":707,"name":"document","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"DocumentNode"}},{"id":708,"name":"variables","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":709,"name":"newResult","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/apollo-client/src/data/store.ts","line":189,"character":30}]},{"id":710,"name":"reset","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":711,"name":"reset","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"intrinsic","name":"void"}]}}],"sources":[{"fileName":"packages/apollo-client/src/data/store.ts","line":202,"character":14}]}],"groups":[{"title":"Constructors","kind":512,"children":[648]},{"title":"Properties","kind":1024,"children":[647]},{"title":"Methods","kind":2048,"children":[651,699,665,682,653,660,705,710]}],"sources":[{"fileName":"packages/apollo-client/src/data/store.ts","line":25,"character":22}]},{"id":639,"name":"DataWrite","kind":256,"kindString":"Interface","flags":{"isExported":true,"isExternal":true},"children":[{"id":642,"name":"document","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/data/store.ts","line":20,"character":10}],"type":{"type":"reference","name":"DocumentNode"}},{"id":643,"name":"operationName","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/data/store.ts","line":21,"character":15}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"null"}]}},{"id":641,"name":"result","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/data/store.ts","line":19,"character":8}],"type":{"type":"intrinsic","name":"any"}},{"id":640,"name":"rootId","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/data/store.ts","line":18,"character":8}],"type":{"type":"intrinsic","name":"string"}},{"id":644,"name":"variables","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/data/store.ts","line":22,"character":11}],"type":{"type":"reference","name":"Object"}}],"groups":[{"title":"Properties","kind":1024,"children":[642,643,641,640,644]}],"sources":[{"fileName":"packages/apollo-client/src/data/store.ts","line":17,"character":26}]},{"id":712,"name":"QueryWithUpdater","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/data/store.ts","line":12,"character":28}],"type":{"type":"reflection","declaration":{"id":713,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":715,"name":"query","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/data/store.ts","line":14,"character":7}],"type":{"type":"reference","name":"QueryStoreValue","id":167}},{"id":714,"name":"updater","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/data/store.ts","line":13,"character":9}],"type":{"type":"reference","name":"MutationQueryReducer","id":623,"typeArguments":[{"type":"reference","name":"Object"}]}}],"groups":[{"title":"Variables","kind":32,"children":[715,714]}],"sources":[{"fileName":"packages/apollo-client/src/data/store.ts","line":12,"character":30}]}}}],"groups":[{"title":"Classes","kind":128,"children":[645]},{"title":"Interfaces","kind":256,"children":[639]},{"title":"Type aliases","kind":4194304,"children":[712]}],"sources":[{"fileName":"packages/apollo-client/src/data/store.ts","line":1,"character":0}]},{"id":98,"name":"\"errors/ApolloError\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"/home/timoaho/workspace/apollo-client/packages/apollo-client/src/errors/ApolloError.ts","children":[{"id":99,"name":"ApolloError","kind":128,"kindString":"Class","flags":{"isExported":true,"isExternal":true},"children":[{"id":104,"name":"constructor","kind":512,"kindString":"Constructor","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":105,"name":"new ApolloError","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":106,"name":"__namedParameters","kind":32768,"kindString":"Parameter","flags":{},"originalName":"__0","type":{"type":"reflection","declaration":{"id":107,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":110,"name":"errorMessage","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/errors/ApolloError.ts","line":49,"character":16}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]}},{"id":111,"name":"extraInfo","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/errors/ApolloError.ts","line":50,"character":13}],"type":{"type":"intrinsic","name":"any"}},{"id":108,"name":"graphQLErrors","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/errors/ApolloError.ts","line":47,"character":17}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","name":"ReadonlyArray","typeArguments":[{"type":"reference","name":"GraphQLError"}]}]}},{"id":109,"name":"networkError","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/errors/ApolloError.ts","line":48,"character":16}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"null"},{"type":"reference","name":"Error"}]}}],"groups":[{"title":"Variables","kind":32,"children":[110,111,108,109]}],"sources":[{"fileName":"packages/apollo-client/src/errors/ApolloError.ts","line":46,"character":14}]}}}],"type":{"type":"reference","name":"ApolloError","id":99}}],"sources":[{"fileName":"packages/apollo-client/src/errors/ApolloError.ts","line":41,"character":24}]},{"id":103,"name":"extraInfo","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/errors/ApolloError.ts","line":41,"character":18}],"type":{"type":"intrinsic","name":"any"}},{"id":101,"name":"graphQLErrors","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/errors/ApolloError.ts","line":35,"character":22}],"type":{"type":"reference","name":"ReadonlyArray","typeArguments":[{"type":"reference","name":"GraphQLError"}]}},{"id":100,"name":"message","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/errors/ApolloError.ts","line":34,"character":16}],"type":{"type":"intrinsic","name":"string"},"overwrites":{"type":"reference","name":"Error.message"}},{"id":112,"name":"name","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"docs/node_modules/typedoc/node_modules/typescript/lib/lib.es5.d.ts","line":973,"character":8}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"Error.name"}},{"id":102,"name":"networkError","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/errors/ApolloError.ts","line":36,"character":21}],"type":{"type":"union","types":[{"type":"reference","name":"Error"},{"type":"intrinsic","name":"null"}]}},{"id":113,"name":"stack","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isOptional":true},"sources":[{"fileName":"docs/node_modules/typedoc/node_modules/typescript/lib/lib.es5.d.ts","line":975,"character":9}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]},"overwrites":{"type":"reference","name":"Error.stack"},"inheritedFrom":{"type":"reference","name":"Error.stack"}},{"id":114,"name":"Error","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"docs/node_modules/typedoc/node_modules/typescript/lib/lib.es5.d.ts","line":984,"character":17}],"type":{"type":"reference","name":"ErrorConstructor"}}],"groups":[{"title":"Constructors","kind":512,"children":[104]},{"title":"Properties","kind":1024,"children":[103,101,100,112,102,113,114]}],"sources":[{"fileName":"packages/apollo-client/src/errors/ApolloError.ts","line":33,"character":24}],"extendedTypes":[{"type":"reference","name":"Error"}]},{"id":118,"name":"generateErrorMessage","kind":64,"kindString":"Function","flags":{"isExternal":true,"isConst":true},"signatures":[{"id":119,"name":"generateErrorMessage","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":120,"name":"err","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ApolloError","id":99}}],"type":{"type":"intrinsic","name":"string"}}],"sources":[{"fileName":"packages/apollo-client/src/errors/ApolloError.ts","line":12,"character":26}]},{"id":115,"name":"isApolloError","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":116,"name":"isApolloError","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":117,"name":"err","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Error"}}],"type":{"type":"predicate","name":"err","asserts":false,"targetType":{"type":"reference","name":"ApolloError"}}}],"sources":[{"fileName":"packages/apollo-client/src/errors/ApolloError.ts","line":4,"character":29}]}],"groups":[{"title":"Classes","kind":128,"children":[99]},{"title":"Functions","kind":64,"children":[118,115]}],"sources":[{"fileName":"packages/apollo-client/src/errors/ApolloError.ts","line":1,"character":0}]},{"id":1216,"name":"\"index\"","kind":1,"kindString":"External module","flags":{"isExported":true},"originalName":"/home/timoaho/workspace/apollo-client/packages/apollo-client/src/index.ts","sources":[{"fileName":"packages/apollo-client/src/index.ts","line":1,"character":0}]},{"id":13,"name":"\"util/Observable\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"/home/timoaho/workspace/apollo-client/packages/apollo-client/src/util/Observable.ts","children":[{"id":14,"name":"Observable","kind":128,"kindString":"Class","flags":{"isExported":true,"isExternal":true},"typeParameter":[{"id":15,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"children":[{"id":20,"name":"Observable","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/node_modules/zen-observable-ts/lib/zenObservable.d.ts","line":6,"character":31}],"type":{"type":"reflection","declaration":{"id":21,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":22,"name":"constructor","kind":512,"kindString":"Constructor","flags":{"isExternal":true},"signatures":[{"id":23,"name":"new __type","kind":16384,"kindString":"Constructor signature","flags":{},"typeParameter":[{"id":24,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":25,"name":"subscriber","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Subscriber","typeArguments":[{"type":"typeParameter","name":"T"}]}}],"type":{"type":"reference","name":"Observable","typeArguments":[{"type":"typeParameter","name":"T"}]}}],"sources":[{"fileName":"packages/apollo-client/node_modules/zen-observable-ts/lib/zenObservable.d.ts","line":6,"character":34}]},{"id":26,"name":"from","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":27,"name":"from","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":28,"name":"R","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":29,"name":"observable","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"Observable","typeArguments":[{"type":"typeParameter","name":"R"}]},{"type":"reference","name":"ObservableLike","typeArguments":[{"type":"typeParameter","name":"R"}]},{"type":"reference","name":"ArrayLike","typeArguments":[{"type":"typeParameter","name":"R"}]}]}}],"type":{"type":"reference","name":"Observable","typeArguments":[{"type":"typeParameter","name":"R"}]}}],"sources":[{"fileName":"packages/apollo-client/node_modules/zen-observable-ts/lib/zenObservable.d.ts","line":8,"character":8}]},{"id":30,"name":"of","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":31,"name":"of","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":32,"name":"R","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":33,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"reference","name":"Array","typeArguments":[{"type":"typeParameter","name":"R"}]}}],"type":{"type":"reference","name":"Observable","typeArguments":[{"type":"typeParameter","name":"R"}]}}],"sources":[{"fileName":"packages/apollo-client/node_modules/zen-observable-ts/lib/zenObservable.d.ts","line":9,"character":6}]}],"groups":[{"title":"Constructors","kind":512,"children":[22]},{"title":"Functions","kind":64,"children":[26,30]}],"sources":[{"fileName":"packages/apollo-client/node_modules/zen-observable-ts/lib/zenObservable.d.ts","line":6,"character":32}]}}},{"id":16,"name":"[$$observable]","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":17,"name":"[$$observable]","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"unknown","name":"this"}}],"sources":[{"fileName":"packages/apollo-client/src/util/Observable.ts","line":12,"character":23}]},{"id":18,"name":"['@@observable' as any]","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isExported":true,"isExternal":true},"signatures":[{"id":19,"name":"['@@observable' as any]","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"unknown","name":"this"}}],"sources":[{"fileName":"packages/apollo-client/src/util/Observable.ts","line":16,"character":32}]},{"id":60,"name":"filter","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":61,"name":"filter","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":62,"name":"fn","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":63,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":64,"name":"__call","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":65,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"typeParameter","name":"T"}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"packages/apollo-client/node_modules/zen-observable-ts/lib/zenObservable.d.ts","line":15,"character":14}]}}}],"type":{"type":"reference","name":"Observable","typeArguments":[{"type":"typeParameter","name":"T"}]},"inheritedFrom":{"type":"reference","name":"Observable.filter"}}],"sources":[{"fileName":"packages/apollo-client/node_modules/zen-observable-ts/lib/zenObservable.d.ts","line":15,"character":10}],"inheritedFrom":{"type":"reference","name":"Observable.filter"}},{"id":75,"name":"flatMap","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":76,"name":"flatMap","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":77,"name":"R","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":78,"name":"fn","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":79,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":80,"name":"__call","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":81,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"typeParameter","name":"T"}}],"type":{"type":"reference","name":"ObservableLike","typeArguments":[{"type":"typeParameter","name":"R"}]}}],"sources":[{"fileName":"packages/apollo-client/node_modules/zen-observable-ts/lib/zenObservable.d.ts","line":17,"character":18}]}}}],"type":{"type":"reference","name":"Observable","typeArguments":[{"type":"typeParameter","name":"R"}]},"inheritedFrom":{"type":"reference","name":"Observable.flatMap"}}],"sources":[{"fileName":"packages/apollo-client/node_modules/zen-observable-ts/lib/zenObservable.d.ts","line":17,"character":11}],"inheritedFrom":{"type":"reference","name":"Observable.flatMap"}},{"id":47,"name":"forEach","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":48,"name":"forEach","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":49,"name":"fn","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":50,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":51,"name":"__call","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":52,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"typeParameter","name":"T"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/apollo-client/node_modules/zen-observable-ts/lib/zenObservable.d.ts","line":13,"character":15}]}}}],"type":{"type":"reference","name":"Promise","typeArguments":[{"type":"intrinsic","name":"void"}]},"inheritedFrom":{"type":"reference","name":"Observable.forEach"}}],"sources":[{"fileName":"packages/apollo-client/node_modules/zen-observable-ts/lib/zenObservable.d.ts","line":13,"character":11}],"inheritedFrom":{"type":"reference","name":"Observable.forEach"}},{"id":82,"name":"from","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":83,"name":"from","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":84,"name":"R","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":85,"name":"observable","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"Observable","typeArguments":[{"type":"typeParameter","name":"R"}]},{"type":"reference","name":"ObservableLike","typeArguments":[{"type":"typeParameter","name":"R"}]},{"type":"reference","name":"ArrayLike","typeArguments":[{"type":"typeParameter","name":"R"}]}]}}],"type":{"type":"reference","name":"Observable","typeArguments":[{"type":"typeParameter","name":"R"}]},"inheritedFrom":{"type":"reference","name":"Observable.from"}}],"sources":[{"fileName":"packages/apollo-client/node_modules/zen-observable-ts/lib/zenObservable.d.ts","line":18,"character":8}],"inheritedFrom":{"type":"reference","name":"Observable.from"}},{"id":53,"name":"map","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":54,"name":"map","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":55,"name":"R","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":56,"name":"fn","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":57,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":58,"name":"__call","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":59,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"typeParameter","name":"T"}}],"type":{"type":"typeParameter","name":"R"}}],"sources":[{"fileName":"packages/apollo-client/node_modules/zen-observable-ts/lib/zenObservable.d.ts","line":14,"character":14}]}}}],"type":{"type":"reference","name":"Observable","typeArguments":[{"type":"typeParameter","name":"R"}]},"inheritedFrom":{"type":"reference","name":"Observable.map"}}],"sources":[{"fileName":"packages/apollo-client/node_modules/zen-observable-ts/lib/zenObservable.d.ts","line":14,"character":7}],"inheritedFrom":{"type":"reference","name":"Observable.map"}},{"id":86,"name":"of","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":87,"name":"of","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":88,"name":"R","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":89,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"reference","name":"Array","typeArguments":[{"type":"typeParameter","name":"R"}]}}],"type":{"type":"reference","name":"Observable","typeArguments":[{"type":"typeParameter","name":"R"}]},"inheritedFrom":{"type":"reference","name":"Observable.of"}}],"sources":[{"fileName":"packages/apollo-client/node_modules/zen-observable-ts/lib/zenObservable.d.ts","line":19,"character":6}],"inheritedFrom":{"type":"reference","name":"Observable.of"}},{"id":66,"name":"reduce","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":67,"name":"reduce","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":68,"name":"R","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":69,"name":"fn","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":70,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":71,"name":"__call","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":72,"name":"previousValue","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"typeParameter","name":"R"},{"type":"typeParameter","name":"T"}]}},{"id":73,"name":"currentValue","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"typeParameter","name":"T"}}],"type":{"type":"union","types":[{"type":"typeParameter","name":"R"},{"type":"typeParameter","name":"T"}]}}],"sources":[{"fileName":"packages/apollo-client/node_modules/zen-observable-ts/lib/zenObservable.d.ts","line":16,"character":21}]}}},{"id":74,"name":"initialValue","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"typeParameter","name":"R"},{"type":"typeParameter","name":"T"}]}}],"type":{"type":"reference","name":"Observable","typeArguments":[{"type":"union","types":[{"type":"typeParameter","name":"R"},{"type":"typeParameter","name":"T"}]}]},"inheritedFrom":{"type":"reference","name":"Observable.reduce"}}],"sources":[{"fileName":"packages/apollo-client/node_modules/zen-observable-ts/lib/zenObservable.d.ts","line":16,"character":10}],"inheritedFrom":{"type":"reference","name":"Observable.reduce"}},{"id":34,"name":"subscribe","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":35,"name":"subscribe","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":36,"name":"observerOrNext","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":37,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":38,"name":"__call","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":39,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"typeParameter","name":"T"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"packages/apollo-client/node_modules/zen-observable-ts/lib/zenObservable.d.ts","line":12,"character":29}]}},{"type":"reference","name":"Observer","typeArguments":[{"type":"typeParameter","name":"T"}]}]}},{"id":40,"name":"error","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reflection","declaration":{"id":41,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":42,"name":"__call","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":43,"name":"error","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}]}}]}},{"id":44,"name":"complete","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reflection","declaration":{"id":45,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":46,"name":"__call","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"void"}}]}}]}}],"type":{"type":"reference","name":"Subscription"},"inheritedFrom":{"type":"reference","name":"Observable.subscribe"}}],"sources":[{"fileName":"packages/apollo-client/node_modules/zen-observable-ts/lib/zenObservable.d.ts","line":12,"character":13}],"inheritedFrom":{"type":"reference","name":"Observable.subscribe"}}],"groups":[{"title":"Properties","kind":1024,"children":[20]},{"title":"Methods","kind":2048,"children":[16,18,60,75,47,82,53,86,66,34]}],"sources":[{"fileName":"packages/apollo-client/src/util/Observable.ts","line":11,"character":23}],"extendedTypes":[{"type":"reference","name":"Observable","typeArguments":[{"type":"typeParameter","name":"T"}]}],"extendedBy":[{"type":"reference","name":"ObservableQuery","id":1066}]},{"id":91,"name":"Observer","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"typeParameter":[{"id":92,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"sources":[{"fileName":"packages/apollo-client/src/util/Observable.ts","line":6,"character":20}],"type":{"type":"reference","name":"Observer","typeArguments":[{"type":"typeParameter","name":"T"}]}},{"id":90,"name":"Subscription","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"packages/apollo-client/src/util/Observable.ts","line":5,"character":24}],"type":{"type":"reference","name":"Subscription"}}],"groups":[{"title":"Classes","kind":128,"children":[14]},{"title":"Type aliases","kind":4194304,"children":[91,90]}],"sources":[{"fileName":"packages/apollo-client/src/util/Observable.ts","line":1,"character":0}]},{"id":93,"name":"\"util/arrays\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"/home/timoaho/workspace/apollo-client/packages/apollo-client/src/util/arrays.ts","children":[{"id":94,"name":"isNonEmptyArray","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":95,"name":"isNonEmptyArray","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":96,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":97,"name":"value","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","name":"ArrayLike","typeArguments":[{"type":"typeParameter","name":"T"}]}}],"type":{"type":"predicate","name":"value","asserts":false,"targetType":{"type":"reference","name":"Array","typeArguments":[{"type":"typeParameter","name":"T"}]}}}],"sources":[{"fileName":"packages/apollo-client/src/util/arrays.ts","line":1,"character":31}]}],"groups":[{"title":"Functions","kind":64,"children":[94]}],"sources":[{"fileName":"packages/apollo-client/src/util/arrays.ts","line":1,"character":0}]},{"id":440,"name":"\"util/capitalizeFirstLetter\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"/home/timoaho/workspace/apollo-client/packages/apollo-client/src/util/capitalizeFirstLetter.ts","children":[{"id":441,"name":"capitalizeFirstLetter","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":442,"name":"capitalizeFirstLetter","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":443,"name":"str","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}],"sources":[{"fileName":"packages/apollo-client/src/util/capitalizeFirstLetter.ts","line":1,"character":37}]}],"groups":[{"title":"Functions","kind":64,"children":[441]}],"sources":[{"fileName":"packages/apollo-client/src/util/capitalizeFirstLetter.ts","line":1,"character":0}]},{"id":749,"name":"\"util/observables\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"/home/timoaho/workspace/apollo-client/packages/apollo-client/src/util/observables.ts","children":[{"id":754,"name":"asyncMap","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":755,"name":"asyncMap","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":756,"name":"V","kind":131072,"kindString":"Type parameter","flags":{}},{"id":757,"name":"R","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":758,"name":"observable","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Observable","id":14,"typeArguments":[{"type":"typeParameter","name":"V"}]}},{"id":759,"name":"mapFn","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":760,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":761,"name":"__call","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":762,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"typeParameter","name":"V"}}],"type":{"type":"union","types":[{"type":"typeParameter","name":"R"},{"type":"reference","name":"Promise","typeArguments":[{"type":"typeParameter","name":"R"}]}]}}],"sources":[{"fileName":"packages/apollo-client/src/util/observables.ts","line":34,"character":8}]}}}],"type":{"type":"reference","name":"Observable","id":14,"typeArguments":[{"type":"typeParameter","name":"R"}]}}],"sources":[{"fileName":"packages/apollo-client/src/util/observables.ts","line":32,"character":24}]},{"id":750,"name":"multiplex","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":751,"name":"multiplex","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":752,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":753,"name":"inner","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Observable","id":14,"typeArguments":[{"type":"typeParameter","name":"T"}]}}],"type":{"type":"reference","name":"Observable","id":14,"typeArguments":[{"type":"typeParameter","name":"T"}]}}],"sources":[{"fileName":"packages/apollo-client/src/util/observables.ts","line":5,"character":25}]}],"groups":[{"title":"Functions","kind":64,"children":[754,750]}],"sources":[{"fileName":"packages/apollo-client/src/util/observables.ts","line":1,"character":0}]},{"id":298,"name":"\"version\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"/home/timoaho/workspace/apollo-client/packages/apollo-client/src/version.ts","children":[{"id":299,"name":"version","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true,"isConst":true},"sources":[{"fileName":"packages/apollo-client/src/version.ts","line":1,"character":20}],"type":{"type":"stringLiteral","value":"local"},"defaultValue":"\"local\""}],"groups":[{"title":"Variables","kind":32,"children":[299]}],"sources":[{"fileName":"packages/apollo-client/src/version.ts","line":1,"character":0}]}],"groups":[{"title":"External modules","kind":1,"children":[300,444,1051,763,1,586,176,716,121,638,98,1216,13,93,440,749,298]}]},"filepathPrefix":"packages/apollo-client/src/"},"versions":["3.0 beta","2.5","2.4"],"defaultVersion":2.6,"baseUrl":"https://www.apollographql.com"}}}